(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='WolframDesktop 13.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       161,          7]
NotebookDataLength[    416369,      10019]
NotebookOptionsPosition[    391246,       9530]
NotebookOutlinePosition[    392437,       9567]
CellTagsIndexPosition[    392256,       9559]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[TextData[{
 StyleBox[ButtonBox["Emerging strategies of adversarial AIs for Tic-Tac-Toe & \
2048",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://community.wolfram.com/groups/-/m/t/2456525"], None},
  ButtonNote->"https://community.wolfram.com/groups/-/m/t/2456525"],
  FontWeight->"Bold"],
 "\n",
 StyleBox["by ",
  FontSlant->"Italic"],
 StyleBox[ButtonBox["Wolfram Emerging Leaders Program",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://community.wolfram.com/web/campadmin"], None},
  ButtonNote->"https://community.wolfram.com/web/campadmin"],
  FontSlant->"Italic"]
}], "Text",
 CellChangeTimes->{{3.853241130684498*^9, 3.8532411769141665`*^9}}],

Cell[CellGroupData[{

Cell["Abstract", "Section",
 CellChangeTimes->{{3.8522157087182827`*^9, 3.852215711788609*^9}}],

Cell["\<\
Artificial Intelligences, also known as AIs, are the current coding system on \
the market. They're being used in countless fields for countless purposes, \
but with the emergence of more AIs comes an important question. What would \
happen if two AIs were paired against each other? What strategies would the \
AIs come up with to win against each other? The goal of our project was to \
answer this question. Starting with the simple game of Tic-Tac-Toe, we found \
unique strategies that the AIs developed; we later branched into more complex \
games such as 2048. \
\>", "Text",
 CellChangeTimes->{{3.846943185743832*^9, 3.84694345736534*^9}, {
  3.8469435744270353`*^9, 3.846943598233404*^9}, {3.848146578197798*^9, 
  3.848146603017542*^9}, {3.8483340089553347`*^9, 3.848334032910602*^9}},
 CellTags->{"Abstract", "TemplateCell"},
 CellID->587432573]
}, Open  ]],

Cell[CellGroupData[{

Cell["Tic-Tac-Toe: Building an AI", "Section",
 CellChangeTimes->{{3.846944491551374*^9, 3.8469445066018353`*^9}},
 CellTags->"SectionHeader",
 CellID->453852445],

Cell["\<\
We first decided to explore adversarial pair AIs with the simple game of \
Tic-Tac-Toe. The game has been studied many times, and is relatively simple \
to code as well, so it was a great choice to begin our project.\
\>", "Text",
 CellChangeTimes->{{3.846944514627893*^9, 3.846944577785581*^9}},
 CellTags->"ExampleTopicSentence",
 CellID->816667160],

Cell[CellGroupData[{

Cell["Setting up the Game", "Subsection",
 CellChangeTimes->{{3.846944590400711*^9, 3.846944604620426*^9}},
 CellLabel->"(Debug) In[32]:=",
 CellID->1665523621],

Cell["\<\
Before we could build an AI, we had to set up code to play the game. We \
intended to use 0's for spots that weren't filled, 1's for spots that were \
filled by player 1, and 2's for spots that were filled by player 2. We \
started off with a 2D table to keep track of the board's current state. \
\>", "Text",
 CellChangeTimes->{{3.8469446061536417`*^9, 3.84694463815648*^9}, {
  3.846944669409569*^9, 3.846944698771317*^9}, {3.84694499993055*^9, 
  3.846945042638376*^9}},
 CellID->2121022790],

Cell["startingboard kept track of the game board's current state:", "CodeText",
 CellChangeTimes->{{3.846944702938383*^9, 3.846944735319264*^9}},
 CellID->1848786286],

Cell[BoxData[
 RowBox[{
  RowBox[{"startingboard", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", " ", "3"}], "]"}]}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.846944747252995*^9, 3.846944777439601*^9}},
 CellLabel->"In[1]:=",
 CellID->951509299],

Cell["\<\
We then set up functions to look at the board and figure out which player \
won. To do this, we set up functions to check the columns, rows, and \
diagonals, then combined it all in one function.\
\>", "Text",
 CellChangeTimes->{{3.8469447835722237`*^9, 3.8469448721753674`*^9}},
 CellID->64231012],

Cell["Column, Row, and Diagonal functions:", "CodeText",
 CellChangeTimes->{{3.8469448854222803`*^9, 3.846944897504917*^9}},
 CellID->143754574],

Cell[BoxData[{
 RowBox[{
  RowBox[{"column", "[", "list_", "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Equal", "@@", 
     RowBox[{"list", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "column"}], "]"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"column", ",", "1", ",", "3"}], "}"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"row", "[", "list_", "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Equal", "@@", 
     RowBox[{"list", "[", 
      RowBox[{"[", 
       RowBox[{"row", ",", "All"}], "]"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"row", ",", "1", ",", "3"}], "}"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"diagonal", "[", "list_", "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Equal", "@@", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"list", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{"list", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "2"}], "]"}], "]"}], ",", 
       RowBox[{"list", "[", 
        RowBox[{"[", 
         RowBox[{"3", ",", "3"}], "]"}], "]"}]}], "}"}]}], ",", 
    RowBox[{"Equal", "@@", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"list", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "3"}], "]"}], "]"}], ",", 
       RowBox[{"list", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "2"}], "]"}], "]"}], ",", 
       RowBox[{"list", "[", 
        RowBox[{"[", 
         RowBox[{"3", ",", "1"}], "]"}], "]"}]}], "}"}]}]}], "}"}]}]}], "Code",\

 CellChangeTimes->{{3.8469449028102217`*^9, 3.846944924911924*^9}},
 CellLabel->"In[2]:=",
 CellID->905364578],

Cell["\<\
Our final win function, called actualWinner, used the column, row, and \
diagonal check functions to see who won. If the function returned 0, that \
meant neither player won and the game should continue.\
\>", "Text",
 CellChangeTimes->{{3.846944930056148*^9, 3.846944992603656*^9}, {
  3.846945124263245*^9, 3.846945146274094*^9}, {3.848699099757493*^9, 
  3.848699100806676*^9}},
 CellID->1528857719],

Cell["Function to check for the final winner:", "CodeText",
 CellChangeTimes->{{3.846945150970191*^9, 3.846945161960495*^9}},
 CellID->599186372],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"winnerRCD", "[", "list_", "]"}], ":=", 
   RowBox[{"First", "[", 
    RowBox[{"First", "[", 
     RowBox[{
      RowBox[{"Position", "[", 
       RowBox[{
        RowBox[{"Flatten", "@", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"column", "[", "list", "]"}], ",", 
           RowBox[{"row", "[", "list", "]"}], ",", 
           RowBox[{"diagonal", "[", "list", "]"}]}], "}"}]}], ",", "True"}], 
       "]"}], ",", 
      RowBox[{"{", "9", "}"}]}], "]"}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"actualWinner", "[", "list_", "]"}], ":=", 
  RowBox[{"Which", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"winnerRCD", "[", "list", "]"}], "\[LessEqual]", "3"}], ",", 
    RowBox[{"list", "[", 
     RowBox[{"[", 
      RowBox[{"1", ",", 
       RowBox[{"winnerRCD", "[", "list", "]"}]}], "]"}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"winnerRCD", "[", "list", "]"}], "\[LessEqual]", "6"}], ",", " ", 
    RowBox[{"list", "[", 
     RowBox[{"[", 
      RowBox[{
       RowBox[{"Floor", "[", 
        RowBox[{
         RowBox[{"winnerRCD", "[", "list", "]"}], "/", "3"}], "]"}], ",", 
       "1"}], "]"}], "]"}], ",", 
    RowBox[{
     RowBox[{"winnerRCD", "[", "list", "]"}], "\[LessEqual]", "8"}], ",", 
    RowBox[{"list", "[", 
     RowBox[{"[", 
      RowBox[{"2", ",", "2"}], "]"}], "]"}], ",", "True", ",", "0"}], 
   "]"}]}]}], "Code",
 CellChangeTimes->{{3.84694517210121*^9, 3.846945179423843*^9}, {
  3.846945396618846*^9, 3.846945400824391*^9}},
 CellLabel->"In[5]:=",
 CellID->1526008277],

Cell["\<\
We then created a function that checked if all the spots on the board were \
filled. Combined with the win function, this checked for draws, where neither \
player won.\
\>", "Text",
 CellChangeTimes->{{3.846945199494933*^9, 3.846945259288681*^9}},
 CellID->1881406668],

Cell[BoxData[
 RowBox[{
  RowBox[{"gameOver2", "[", "tictactoe_", "]"}], ":=", 
  RowBox[{"!", 
   RowBox[{"MemberQ", "[", 
    RowBox[{
     RowBox[{"Flatten", "[", "tictactoe", "]"}], ",", "0"}], 
    "]"}]}]}]], "Code",
 CellChangeTimes->{3.846945295309639*^9},
 CellLabel->"In[7]:=",
 CellID->1656111440],

Cell["\<\
Finally, we wrote code that found a random empty space on the board for the \
player to use, and combined it with a function that replaced the spot with \
the player's number, 1 or 2.\
\>", "Text",
 CellChangeTimes->{{3.846945298372362*^9, 3.8469453500766363`*^9}},
 CellID->1579451548],

Cell["Code to choose an empty spot on the board and \"play\" a turn:", \
"CodeText",
 CellChangeTimes->{{3.84694541438301*^9, 3.846945418513825*^9}, {
  3.846945449411675*^9, 3.8469454681174097`*^9}},
 CellID->86044198],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"playturnPosition", "[", "List_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"board", "=", 
        RowBox[{"Flatten", "[", "List", "]"}]}], ",", " ", 
       RowBox[{"positions", " ", "=", " ", 
        RowBox[{"Flatten", "[", 
         RowBox[{"Position", "[", 
          RowBox[{
           RowBox[{"Flatten", "[", "List", "]"}], ",", " ", "0"}], "]"}], 
         "]"}]}]}], "}"}], ",", "  ", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"gameOver2", "[", "List", "]"}], ",", "\"\<Game Over\>\"", ",", 
       RowBox[{"RandomChoice", "[", "positions", "]"}]}], "]"}]}], "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"simulate1Move", "[", 
   RowBox[{"boardWhat_", ",", " ", "randomPosition_", ",", "playerNumber_"}], 
   "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"startingboard", " ", "=", " ", "boardWhat"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"startingboard", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Floor", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"randomPosition", "-", "1"}], ")"}], "/", "3"}], "]"}], 
           "+", "1"}], ")"}], ",", 
         RowBox[{"(", 
          RowBox[{"randomPosition", "-", 
           RowBox[{"(", 
            RowBox[{"3", "*", 
             RowBox[{"(", 
              RowBox[{"Floor", "[", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"randomPosition", "-", "1"}], ")"}], "/", "3"}], 
               "]"}], ")"}]}], ")"}]}], ")"}]}], "]"}], "]"}], " ", "=", 
      "playerNumber"}], ";", "\[IndentingNewLine]", "startingboard"}]}], 
   "]"}]}]}], "Code",
 CellChangeTimes->{{3.846945356070458*^9, 3.846945390850819*^9}},
 CellLabel->"In[8]:=",
 CellID->56096805],

Cell["\<\
For example, given the starting board, the resulting tic-tac-toe board after \
player 1 moves is:\
\>", "Text",
 CellChangeTimes->{{3.846945471853195*^9, 3.846945510589231*^9}},
 CellID->1466788968],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"simulate1Move", "[", 
  RowBox[{"startingboard", ",", 
   RowBox[{"playturnPosition", "[", "startingboard", "]"}], ",", "1"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.846945514261136*^9, 3.846945523959055*^9}, {
  3.8469455568408546`*^9, 3.846945558080881*^9}},
 CellLabel->"In[16]:=",
 CellID->1885885928],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.846945526853573*^9, 3.846945561751089*^9}, 
   3.846953086821369*^9, 3.8481441126294384`*^9, 3.852284140272205*^9},
 CellLabel->"Out[16]="]
}, Open  ]],

Cell[TextData[{
 "where ",
 StyleBox["playturnPosition[startingboard]",
  FontSlant->"Italic"],
 " returns a random empty position for player 1 to move to."
}], "Text",
 CellChangeTimes->{{3.846945566199257*^9, 3.846945587595557*^9}},
 CellID->1103073532]
}, Open  ]],

Cell[CellGroupData[{

Cell["Creating Training Sets", "Subsection",
 CellChangeTimes->{{3.846945603843698*^9, 3.846945622584036*^9}},
 CellLabel->"(Debug) In[11]:=",
 CellID->1653826862],

Cell["\<\
To set up our AIs, they needed training sets to learn from. We built these \
training sets from running thousands of random games and every time someone \
won, we added the list of boards to their dataset. Over time, this \
accumulated into many example games that each player won.\
\>", "Text",
 CellChangeTimes->{{3.84694579653722*^9, 3.846945929742566*^9}},
 CellID->1877555278],

Cell["We first set up training sets for our two AIs.", "Text",
 CellChangeTimes->{{3.846946133753467*^9, 3.846946148816197*^9}},
 CellID->1032133852],

Cell["Training Sets for our two AIs:", "CodeText",
 CellChangeTimes->{{3.8469461590252447`*^9, 3.846946180527876*^9}},
 CellID->756212602],

Cell[BoxData[{
 RowBox[{
  RowBox[{"AI1", " ", "=", " ", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AI2", " ", "=", " ", 
   RowBox[{"{", "}"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.846946186047371*^9, 3.846946193240715*^9}},
 CellLabel->"In[10]:=",
 CellID->467849115],

Cell["\<\
Before we could fill the training sets, however, we needed to have code that \
could simulate tic-tac-toe games, so we combined all the functions we wrote \
above into one massive function, which played random tic-tac-toe games a \
certain number of times.\
\>", "Text",
 CellChangeTimes->{{3.8469456436610603`*^9, 3.846945644387776*^9}, {
  3.846945753084176*^9, 3.846945789250742*^9}, {3.846945932435956*^9, 
  3.846945966127885*^9}, {3.8469462007283*^9, 3.846946203810709*^9}},
 CellID->517298584],

Cell["\<\
Function that simulates a given number of random tic-tac-toe games, and adds \
the list of boards to the winning player's dataset:\
\>", "CodeText",
 CellChangeTimes->{{3.84694597549856*^9, 3.846946023681916*^9}, {
  3.848146921975624*^9, 3.8481469298417635`*^9}},
 CellID->1259367048],

Cell[BoxData[
 RowBox[{
  RowBox[{"runSoManyEveryTimes", "[", "repeat_", "]"}], ":=", " ", 
  "\[IndentingNewLine]", 
  RowBox[{"Table", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"startingboard", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "3"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"firstplayer", " ", "=", " ", "1"}], ";", "\[IndentingNewLine]", 
     
     RowBox[{"listOfgrids", " ", "=", " ", 
      RowBox[{"{", "startingboard", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"!", 
         RowBox[{"gameOver2", "[", "startingboard", "]"}]}], "&&", 
        RowBox[{"!", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"actualWinner", "[", "startingboard", "]"}], "\[NotEqual]",
            "0"}], ")"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"startingboard", "=", 
         RowBox[{"simulate1Move", "[", 
          RowBox[{"startingboard", ",", 
           RowBox[{"playturnPosition", "[", "startingboard", "]"}], ",", 
           "firstplayer"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"listOfgrids", "=", 
         RowBox[{"Append", "[", 
          RowBox[{"listOfgrids", ",", "startingboard"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"firstplayer", " ", "=", " ", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"EvenQ", "[", 
            RowBox[{"(", 
             RowBox[{"firstplayer", "+", "1"}], ")"}], "]"}], ",", "2", ",", 
           "1"}], "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"actualWinner", "[", "startingboard", "]"}], "\[Equal]", 
        "1"}], ",", 
       RowBox[{"AI1", " ", "=", " ", 
        RowBox[{"Append", "[", 
         RowBox[{"AI1", ",", " ", 
          RowBox[{
           RowBox[{"AssociationThread", "[", 
            RowBox[{"listOfgrids", ",", 
             RowBox[{"RotateLeft", "[", 
              RowBox[{"listOfgrids", ",", "1"}], "]"}]}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{
              RowBox[{"Range", "[", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"Length", "@", "listOfgrids"}], ")"}], "/", "2"}], 
               "]"}], "*", "2"}], "-", "1"}], "]"}], "]"}]}], "]"}]}], ",", 
       "\n", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"actualWinner", "[", "startingboard", "]"}], "\[Equal]", 
          "2"}], ",", 
         RowBox[{
          RowBox[{"AI2", " ", "=", " ", 
           RowBox[{"Append", "[", 
            RowBox[{"AI2", ",", " ", 
             RowBox[{
              RowBox[{"AssociationThread", "[", 
               RowBox[{"listOfgrids", ",", 
                RowBox[{"RotateLeft", "[", 
                 RowBox[{"listOfgrids", ",", "1"}], "]"}]}], "]"}], "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"Range", "[", 
                 RowBox[{"Floor", "[", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"Length", "@", "listOfgrids"}], ")"}], "/", "2"}],
                   "]"}], "]"}], "*", "2"}], "]"}], "]"}]}], "]"}]}], ";"}]}],
         "\n", "]"}]}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "repeat"}], "}"}]}], "]"}]}]], "Code",
 CellChangeTimes->{{3.8469460314718*^9, 3.846946081083346*^9}, 
   3.846953193287258*^9},
 CellLabel->"In[12]:=",
 CellID->1203844417],

Cell[TextData[StyleBox["We then ran 30,000 random games and put the training \
data in an association. The reason we put it in an association was so we \
could connect a certain current board to the next logical move, making it \
easier later to build an actively learning AI.", "Text"]], "Text",
 CellChangeTimes->{{3.846946209555315*^9, 3.846946232575992*^9}, {
  3.8469462729891033`*^9, 3.846946345497849*^9}},
 FontWeight->"Plain",
 CellID->1454519220],

Cell[BoxData[{
 RowBox[{
  RowBox[{"runSoManyEveryTimes", "[", "30000", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"trainingData1", "=", 
   RowBox[{"Merge", "[", 
    RowBox[{"AI1", ",", "List"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"trainingData2", "=", 
   RowBox[{"Merge", "[", 
    RowBox[{"AI2", ",", "List"}], "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.846946367469078*^9, 3.846946397619265*^9}, {
   3.8471435822835703`*^9, 3.847143597588394*^9}, {3.8486103231485696`*^9, 
   3.848610333271551*^9}, {3.848612448567519*^9, 3.8486124842965803`*^9}, {
   3.8486125241603994`*^9, 3.8486125261943398`*^9}, {3.848612578205849*^9, 
   3.848612587486924*^9}, 3.8486129468068824`*^9},
 CellLabel->"In[13]:=",
 CellID->1391277730],

Cell["\<\
Here's some basic info about the training data, including the wins for player \
1, the wins for player 2, and the amount of draws.\
\>", "Text",
 CellChangeTimes->{{3.846946412049077*^9, 3.846946451020856*^9}, 
   3.847138855823009*^9},
 CellID->1786400792],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Length", "@", "AI1"}], ",", " ", 
   RowBox[{"Length", "@", "AI2"}], ",", " ", 
   RowBox[{"30000", "-", " ", 
    RowBox[{"Length", "@", "AI1"}], " ", "-", " ", 
    RowBox[{"Length", "@", "AI2"}]}]}], "}"}]], "Input",
 CellChangeTimes->{{3.846946459395767*^9, 3.846946460070756*^9}},
 CellLabel->"In[16]:=",
 CellID->812086743],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"16574", ",", "10471", ",", "2955"}], "}"}]], "Output",
 CellChangeTimes->{
  3.8469464654483843`*^9, 3.8469527484927998`*^9, 3.847138869201721*^9, {
   3.8522841836468077`*^9, 3.852284188769905*^9}, 3.8522850773412957`*^9},
 CellLabel->"Out[16]="]
}, Open  ]],

Cell["Here's an example of a winning game for player 1:", "Text",
 CellChangeTimes->{{3.84694647733134*^9, 3.846946495781891*^9}},
 CellID->1845140062],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AI1", "[", 
  RowBox[{"[", "14789", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.84694649915879*^9, 3.846946516865757*^9}},
 CellLabel->"In[35]:=",
 CellID->1590284773],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"2", ",", "1", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"2", ",", "1", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "0", ",", "1"}], "}"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"2", ",", "1", ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "0", ",", "1"}], "}"}]}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"2", ",", "1", ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], "}"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.8469465175735826`*^9, 3.8469527543416*^9, 
  3.847138871684639*^9},
 CellLabel->"Out[35]=",
 CellID->1726988935]
}, Open  ]],

Cell["\<\
where player 1 wins by taking the diagonal and selecting the center spot.\
\>", "Text",
 CellChangeTimes->{{3.846946521868568*^9, 3.846946538285254*^9}, {
  3.846952809205755*^9, 3.846952825693756*^9}},
 CellID->274975898]
}, Open  ]],

Cell[CellGroupData[{

Cell["Actively Learning", "Subsection",
 CellChangeTimes->{{3.846946553675214*^9, 3.846946556378241*^9}},
 CellID->1575367380],

Cell["\<\
So far, we have AI1, a list of winning boards for player 1, and AI2, a list \
of winning boards for player 2. The variable trainingData nicely puts this \
information in an association.\
\>", "Text",
 CellChangeTimes->{{3.846946560158289*^9, 3.846946560568787*^9}, {
  3.8469470710087357`*^9, 3.8469471539202127`*^9}, {3.8481470712201576`*^9, 
  3.8481470858147974`*^9}},
 CellID->1273357800],

Cell["\<\
To use this information to play, the AIs check what they have in their \
trainingData. If the tic-tac-toe board exists, the player chooses one of the \
options in its dataset. If the tic-tac-toe board doesn't exist, the player \
just moves randomly.\
\>", "Text",
 CellChangeTimes->{{3.8469471570521107`*^9, 3.846947272518756*^9}},
 CellID->1875876687],

Cell["\<\
For a significant number of training games in a player's dataset (these are \
random games), the training data for player 1 looks something like this:\
\>", "Text",
 CellChangeTimes->{{3.846947314104907*^9, 3.846947341513348*^9}, {
  3.8481471150364923`*^9, 3.8481471279640856`*^9}},
 CellID->679346143],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Dataset", "[", 
   RowBox[{"Counts", "[", 
    RowBox[{"Normal", "@", "trainingData1"}], "]"}], "]"}], "//", 
  "ReverseSort"}]], "Input",
 CellChangeTimes->{{3.846947344206958*^9, 3.846947365383654*^9}},
 CellLabel->"In[36]:=",
 CellID->513305077],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
Dr/+3+7r+/v7pZ14fhjhd6dOOv6QnnlSDkb3cXbrMfI7iQlmuThoTWX+oorp
RIiDVoiG5H1JbjWdm4rRNp2bRePQVG7mrIfk1nJJDbRgtqZ9enryGbepmtYf
66YOdKNNp9Opf1AK9wH8vznz4g87CcdJP5JwvJJPOvnHtKk4xGxdptLJlalg
FopD5NZlKosqshMhDiVOf3LQkltXkJsq0V5BbpaLQ8zWZ2nlZuZ6SG6lpsWK
CTXtw8ND9xoNNa3QdDzr/ns4HJIv//t95rykdZOaNnLrkTZe06osqshOFE9/
/kw9e3KvWdPays0KtZyJ3Gy8ptVdVNS0gKKYZw/u7u6oaYUmf0wL3wwX7P5r
/538h+5yzrzUtH1TwaxT06ZNpcqiiuxE9/TnNzH1KGxQs6a1lZsbrGmXXmTF
azw3O9S0gCJq2qG082a4Wu++k/nug8z3HVDTdoRgVqhpk6dSZVFFdqJ++vO/
JdytrV/TWsnNrdW0U8GsU9PeNjc71LSAImraK/4IM3Wgm2oKB7f+gcL/WPKd
nPB22vAuhmTySSfcXkjehBCimK3HbyW/EzmYpeOQM5UqiyqyEyEOcoi6t36P
Gr1bKwctuXUduZm5IN1acrNCHG6em53k9ZDcmh9eoFnUtEM+5adePB1tujoo
hbfTpr0PJRwt8482pe/TCiGa3Xqk/E5mg1k0DplTqbKoIjtRv6XjtyssD3nx
JLeuIDdVbqCtIDdLx6GF3JzqrY/7tMBS1LRDS1/fdD//0S7DzwAM18Wzr3PJ
R9rIToKEmnZR/2mvb6rsgkowg3JxUJlKlUUldxLonv7uz4QfqPnsgTOVm8Ln
L7Wfm/E9JF9smsjNRYN01LSAKmraoYTzprt8dLY3WjaEJuFaPnw+zJWrbc12
Eu4YzL4EPHVMm+2/v6FhHGK2rrILKsF0xeKgMpX9H9ulLqqYTpz25x7Mvghb
uaZ1dnJTiHbmmqyTmzGDjAlmuTjUyc2YHjLXQ04rNS1WjJp2KO28KTueP147
/4Mx8ztx08e0+P6JQ7DuOMhNyerXtLJ25kKeiPbXZJ0FSRwyW6lpsWLUtKN0
DwjhkjzzjxKqdBKM7sLS/omD0InMRBxmmwptMafV+lxMjd/EmqywIImDSis1
LVYs8m8udBYXo0oq17ThJarRtxgITaPCNXvmYUSlE3d5lkylf+IQrDIOclM+
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
jKh04i6Pgan0TxyCVcZBbsonBy251e5cCNE2sSYrLEjikN9aNKmBFlDTAgAA
wDpqWgAAAFhHTQsAAADrqGkBAABgHTUtAAAArKOmBQAAgHXbrGlfXl6+BAAA
wFq8e/fu06dPtx7FPF+FKta0z8/PHwAAALAWb9++9WXtx+bp1rQfePYAAABg
RT5u8tkDaloAAIA1oaYFAACAddS0AAAAsI6aFgAAANZR0wIAAMA6aloAAABY
R00LAAAA66hpAQAAYB01LQAAAKyjpgUAAIB11LQAAACwjpoWAAAA1sXUtF+c
xVafZVSuaV9fX3e73el0imx6fHzcXRyPx5wZCZ3k9CB0cjjL7DyYCtF+vw9b
91+k9awVTGEkpeNQYRcWSVgPiiEaEvIrp9VubupGu/3cdLeLg4nclONQZ7VM
NZlIKFflZCdsPRInu45WQs3WtE9PT34rW6tphagOm8JE+3+7r+/v7xPmwq+H
8Ls5OTLbiV+BmQeiYDRE/VW9P1varVYwZ0dSLg7VdiFGznrQCtGQvC/JraZz
UzHajefmDeNgKDflOJReLVNNhhLKFT7Z5e8CJ7uOSkIFQk378PDQld+bqmn9
1EzNi9DU8VOTMCP+2ifMaU6ORHaSv7xH4+C33t9ouHzz/+ZsKDmYMSMpFIfh
VsrtwmwnmeuhRE0rBy25dQW5qRLt9nPzhnEYbqjl3JTjUDpKK0goV/Jkl78L
VzjZBZlHp5hnD+7u7qhpZ5s6adPaUcmRm6T58az77+FwSL5q6/eZEMzIkbSc
5rrBrFbT+qPT7LHIXE3bKZ2b5aqUdnKzY7emrZaba61pO3ZPdpFbX4STXZCZ
UNS0Q5lpnnmysJvmfimGb4brLP+1/07+A1cJwYwcSZ00L7oLkWrep/XjnHoU
NrhhTdt4bparUtrJzU4LNW3judl+Tdt4QjlTNS0nO5WEoqYdyknzzEdBnOU0
DyszXGR138l8aDwtmJEjqZDmpXchUuVnD/xvCXdrb1XTtp+bpWvaFnKzc/Oa
tv3cbLymbT+hnJ2alpOdVkJR017xsZ2aF6EpCG/cC89LJ6uQ5uFqKHmcU3EI
a7K/FP2PJV/F5wQzciSF4tDfaOldiJS8HuQQde9UHTV6t1YOWnLrOnIzc0E6
C7nZuUkcOiZyU45D0SitI6Fc+YO8yi5wslNMKGraIT/7Uy+eCk1hXjJz3Bm5
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
mrZjIje3UNPGrMlycWgnN2M6abCm7ZhIKMfJrvdjmcOrsB6oaYdWU9PmHGln
R1InzTN3IacTn9fht8JFq//af2e414XiELn1SDmLKj8OCcP2m5h6FDawXtOW
y81qNW3juVkuDu3kZkwnG6lpOdnldHLbk12HmnapTdW0yU95RY6kQprn70JO
JyHNwxVr953KNe3s1iPl17Q5cUgbtv8t4W6t6Zq2aG7WqWnbz83SNW0LuRnT
yRZqWk52mZ3c9mTXoaZdqlpN66M6tbSEJsUZCW9gDM+NJ5NHEi7okjcxGweV
XcjpJCR4P4t9b8N8LBSHyK3HbyWnps2Mgxyi7s22o0bv1sqLJ7l1HbmZuSDd
WnKzXBzayc2YTuQ4FF0t60gox8nuonQcqGmXqnmf1s/+1IunQpPKjIT1mZkg
syPJv2QT4qCyC5mdXO3+6/ktpSUemx+NQ+TWI+Usqvw4pIXIb1dIEzmJkltX
kJsqd95WkJvl4tBObsZ0UuE+7boTynGyuygah+Ew0lDTDrX57EG4RJp9ZUFe
25GdyCMJRpf3ov6n4qCyCyqd9C9dpz6gr1wc5K2rTGXpOMw2Tbk/E36gqWcP
msrNqWibyM34Qc6uyaJxKJ2bi3qY6iRIq2lVoiQ3OSMJ5TjZXZSLQ5C5HhQ7
oaYdWprm4cpIfuE1fFO4IRA+kePK1bZmO4kZiZs+GM7239/QMA4qu6DSSf/H
vKlPnC4Uh5itq0xl6TjITaP8CGdfya1Z09rKTSHamWuyTm7GD1Jek+XiELP1
/KmMGWTmepBbVaK0goRynOwuCsVBZT0onuwcNW303M02yY7njxROfpFLsRM3
vbzj+ycOwbrjIDclu8l9WkE7cyFPRPtrss6CJA6zrSpRWkFCOQ7yvX4y+7cS
h8i/udBZXIwqqfx3xHTP8uEyJPPv06l0EozuwtL+iYPQicxEHGabCm0xp9X6
XEyN38SarLAgiUNMq2KUrCeU4yB/sZ04xNynbUHlmja8KDD6RLTQNCpcX2TW
BiqduMvTOyr9E4dglXGQm/LJQUtutTsXQrRNrMkKC5I4xLTqRsluQjkO8hdb
iwM1LQAAAKyjpgUAAIB11LQAAACwjpoWAAAA1lHTAgAAwDpqWgAAAFi3zZr2
+fn5awAAAKzFhw8fPn/+/NPmvby8KNa079+//w4AAABW5M2bN7cewjxfe3Of
FgAAAKO2eZ+W52kBAADWZJvP01LTAgAArAk1LQAAAKyjpgUAAIB11LQAAACw
jpoWAAAA1lHTAgAAwDpqWgAAAFhHTQsAAADrqGkBAABgHTUtAAAArKOmBQAA
gHUxNe0XZ7HVZxnUtAAAAJgyW9M+PT3tdrut1bSvr69+r0+n06Km3VnyXDw+
Pu4ujsdjcj/CSA5nOT13ysXB2+/3oRP/RYlOSsdBZSq11kNaHBRDNCQsnpxW
u7mpG227uVkhDk3lpktaD9VWi92EcpzsLjZ1snNiTfvw8NBtZWs1rbC6Rpv8
LPgo3d/fJy/vsFr8v93XvreEfmZH4hdP5poJCsXBnY8S3Qj3ZyU6KRcHlanU
Wg85cdAK0ZA8p8mtpnNTMdqmc7NoHJrKzZz1UHq1CE1WEspxsrvYyMkuiHn2
4O7ublM1rY/qVEhHm/xlS1gwmcu7z3eYsLwjR5K/vMvFwXfS/91w+eb/LdFJ
oTgMt5JzAZ7TSX4cStS0ctCSW1eQmyrRXkFulovDldvmZuZ6KB2lFSSU42R3
sfqTXYeadmhpmndunuaRIym9vHPicDzr/ns4HBKu2iI7WX2a58dhaYj8AXb2
mFyzpu2YyM0KtZyJ3NxCTduxVdN2TCSU42TX+7G0QXasJBQ17VALaZ55+91u
mvuUDD2H603/tf/O0gFHdlInzTOnMqeT/DgkhMhvYupR2MB6TVsuNxuvaavl
ZrWa9oa52aGm5WTHyU6xE2raoZunefJzNZEjaT/Nw8Vm9520NJ/tpEKa509l
Tif5cUgLkf8t4W6t6Zq2aG6aqGkr5Gadmva2udnZeE3LyY6TnW4n1LRX/KxN
hVRo6n4gP83DGxjD89LJ5JGEC7rkTRSNQ8jNfgL6bS29aovspHQcVKYyp5P8
OMgh6t5sO2r0bq0ctOTWdeRm5oJ0a8nNCnG4eW52ktdD0SitI6EcJ7uL1Z/s
OtS0Q372p148FZqcRpqH9Zk5p7Mjyb9kKxeHq999Pb8Lculj85GdFI2DylRm
dpIfh7QQ+e0Ky0NePMmtK8hNlTtvK8jN0nFoITc7t71Pu+6EcpzsLlZ/sutQ
0w6pvxwTLpFm76jLcxrZiTySYHR5L+q/aBz6V53Dz9ZT6SQoFweVqVTpJDkO
s01T7s+EH2jq2YOmcnMq2iZyM36Qs2uyaBxK5+aiQboCNa3WallBQjlOdhdb
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
nj2IMdsVNS0AAMDKGKpptbqipgUAAFgZaloAAABYR00LAAAA66hpAQAAYB01
LQAAAKyjpgUAAIB1tmraH82J6YqaFgAAYGVs1bQ/+MEPvvrqq9Fq1n/ft8Z0
RU0LAACwMrZq2m+++ebz58+jP+C/71tjuqKmBQAAWBlbNa0X7tNetYb7tJFd
UdMCAACsjLmadvRWbfxN2p9R0wIAAKxOTE37xdnSKlRX/3MPrm7VLrpJ+7O4
mvb19XW3251Op8imx8fH3cXxeEyejv1+HzrxX6T1II/kcJY8vL6icfBCJ3lj
nOykdBzkrcfLXw9yJ0IcFEM0JAQtp7XxNSmMRDfajcdB6KRCHIStL1I0N+U4
VItS4wuJk11MJ5s62bmImvbp6clvpama9upW7aKbtD+Lq2mFqA6bwkT7f7uv
7+/vE+ainxr7s6U9xIzEZ2JmAnYjTNh6DD+88Ls5OTLbSbk4xGw9Rv56iOlE
iINWiIbkfUlubXlNzo5EMdotx2G2k6JxmN16pAq5KcehdJSmmtpZSJzs4jvZ
yMkuEGrah4eH7jKkqZr2Z71btUtv0v4soqb1S3RqfQpNHT81CTPir336SyJc
A/p/l/YTM5L85V00DmF4OTkS2UmhOGjtQv56iOxEiEOJmlZePMmtja/JmJGo
RLvxOMR0Ui4OtnJTjkPp1dL4QoocCSe7boRp/XcaT6hOzLMHd3d3rdW03a3a
pTdpf9ZqTXs86/57OBySL/1mR9JymndUDnc3SfPIrctU1kNkJ4o1rT86zR6L
zNW0nY3XtJ3SuVkhDiZyc601bWfjNW2Hk51i8WO0pv3Z+VZtsLSr0jVt2nT4
eQy/FS5S/Nf+O/lP6YyOpE6aZ9bkG09zlfUQ2YnufVq/ialHYYMb1rQtrElh
JNVq2hbiYLemrZab7de0LSwkeSSc7ILVn+w6dmvab775xgd56U3anxWuaZMf
BQnTGq5Quu9kvt1saiQV0jzzkRhHmmush8hO1J898L8l3K29VU3byJoURlKn
pm0kDtZr2gq52XhN28hCkkfCyS5Y/cmuY7em9X7yk58kdCXXtD62U+tTaArC
G/fCc+NLhQntz6PvLfnSTx5JuBpKG6crHIf+Vkqneek4ZKZ5/nqI7ESIgxyi
7p2qo0bv1spBS241tCaFkWQuSGcqDkInFeJgIjflOBSNkqGFxMkuppPVn+w6
pmvaNLP3af3sT714KjSFeclZM/0l8Xp+K2XaY9KzI8m/ZCsXh46JS1chDrNb
l6msh8hO1O/T+u0KYZGDltxqYk3KI1G582YiDnInpeMgb31WtdyscJ923Qnl
ONldrP5k16GmHUp4OUZe2+ESafblif6lyvAz5SI7icmy0eUd2X9QNA7BVI6o
dBKUi4O89ZrrQe4k0K1p78+EH6j87EE7azL5/GsiNxf1MNVJUDQO8tbz0yp+
kLO5mVbTakVpBQnlONldbOFkF1DTDi1N8/BJFFeufix8c/bSo/v10dpjtpOY
kbjpg2HkIF3JOIRrtCtXl4cqnbhicVDZhf6PJa+HmE6c9ucezL5mVLOmbWdN
xoxEiHbmmqwTh5hBxgSzXBzq5Gb8IIVOXMZ92swoCU22EspxsrvYyMnOUdNG
z91sk+x4/lzi/M+bze/ETS/v+P6JQ7DuOMhNySrfp53VzlzIE9H+mqyzIInD
bKtKlFaQUI6DfK+fzP6txCHyby50tArLpWrWtE77LB+uZTL/Pp1KJ8HoLizt
nzgInchMxGG2qdAWc1qtz8XU+E2syQoLkjjEtCpGyXpCOQ7yF9uJQ8x92hZU
rmnDKwujT0QLTaPC9UVmbaDSibs8AqTSP3EIVhkHuSmfHLTkVrtzIUTbxJqs
sCCJQ0yrbpTsJpTjIH+xtThQ0wIAAMA6aloAAABYR00LAAAA66hpAQAAYB01
LQAAAKyjpgUAAIB126xpn5+fvwYAAMBafPjw4fPnzz9t3svLi2JN+/79++8A
AABgRd68eXPrIczztbdiTct9WgAAgDXZ5n1anqcFAABYk20+T0tNCwAAsCbU
tAAAALCOmhYAAADWUdMCAADAOmpaAAAAWEdNCwAAAOuoaQEAAGAdNS0AAACs
o6YFAACAddS0AAAAsI6aFgAAANbF1LRfnGmVlGmoaQEAADBltqZ9enra7XZb
q2lfX1/9Xp9Op/im/X6/O/NfpM3F4+Pj7uJ4PJbo5HCW1vOV0Tio7ILTCGYQ
Ohl+v3Qc5K3Hu2EcFEM0JAQtp9VubupGu2huOo2FPdVJhTgIW1+kaG7KcagW
JbsJ5eyc7FzJhHLbO9kJNe3Dw0M3ZVuraYWojjb1V/X+bOlEhNXi/+2+vr+/
L9GJz8TMBAyG+6iyC04jmJ7vIQxgKtHKxSFm6zFuHgetEA3J+5Lcajo3FaNd
LjdVFrbcSdE4zG49UoXclONQOkpCk5WEchZOdhUSym3mZBfEPHtwd3e3qZrW
L9Gp9Tna5C9b+rMZLt/8v8mT4s7rJPNqRegkf3kLIZrdukwlmL6TsI9yohWK
Q+TWZY3EoURNKy+e5NYV5KZKtIvmpsrCnu2kXBxs5aYch9KrZQUJ5Zo/2dVJ
KLeBk12HmnZoaZofz7r/Hg6H5Ku2fp/bTHPdYN4kzSO3LmskDktD5I9Os8ei
mjWtrdxsvKbtZN6Tme2kQhxM5GaDNa2thHJtn+w6pRPKbelkR007tDTN/RSE
b4brC/+1/07+AzaZBwqhkzppnrYLusG0m+aNxCFhi36cU4/CBjVrWlu5Wa2m
zdyFjde01XKzwZrWVkK5tk92nY3XtLqLipp2KC3Nw8VF953Md0jlX7cKnVRI
8+Rd0A2m9TS/eRzStuh/S7hbW7+mtZKbdWra/F2gpq2Tm83WtFYSyrV9sutQ
0youKmraKz62U+tzqinMRX8K/I8lX7WFd/+Fh8+TyZ2Eq6HkTQghitm6TDeY
cqKVjkNmmrcQBzlE3TtVR43erZWDlty6jtzMXJCucG72t1L0FFwhDiZyU45D
0SitI6Fc2ye7/lZK17TbOdlR0w752Z968XS06Wo2X8/vgkx7wjlMbmaCzHaS
f8kmhChzFxSDOeztStE4zG5d1kgc0kLkNyeERQ5acusKclPlzlu53OyYuE+7
gtyscJ923Qnl2j7ZdUzcp7WSUNS0Q0tfjnE//0kUw4+DC5dIsy9PyAmi0kkw
urwj+w+m4qCyCyrBDBLSXCUO8tZNxGG2SdiWfIld89kDZyo3p6LdTm4Go8tp
UQ9TnQRF4yBvPT83K8RBbtWK0goSyjV/sgsyV6PcSbCdkx017VBCmrvLZw57
o59vHJqES4/wcRZXrral0ombPhjO9t8ZjYPKLvR/LDmY4ULvyvAas1AcYrZu
Ig5y0yjf+exrRpVrWmcnN4VoZ65JlV2YXU4xg4xZk+XiUCc3K8RBbs2M0myT
sO8xW+dk1/Wcvxo52V2J/JsLHa3Ccqn2a1rZ8fy5xPmf45ffiZte3vH9E4dg
3XGQm5LVr2ll7cyFPBHtr8k6C5I4zLaqRGkFCeU4yPf6yezfShxi7tO2oPLf
EdM9y4drmcy/T6fSSTC6C0v7Jw5CJzITcZhtKrTFnFbrczE1fhNrssKCJA4x
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
3t7rJjT9rQMAAAAA8N//O6MBJw==
    "], {{0, 555.}, {693., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{96., 96.},
    SmoothingQuality->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{672.375, Automatic},
  ImageSizeRaw->{693., 555.},
  PlotRange->{{0, 693.}, {0, 555.}}]], "Output",
 CellChangeTimes->{3.846947368641947*^9, 3.846952838846064*^9, 
  3.847138730022418*^9, 3.84713888013111*^9},
 CellLabel->"Out[36]="]
}, Open  ]],

Cell["\<\
Our next step was to create a function that uses the training data for each \
player to predict the next move. The games that player 1 wins by using its \
dataset are stored in goodgame1, and the games that player 2 wins, using its \
dataset, are stored in goodgame2.\
\>", "Text",
 CellChangeTimes->{{3.846947388299698*^9, 3.846947431441277*^9}, {
  3.848147143973704*^9, 3.848147154459634*^9}},
 CellID->1339879196],

Cell["Setting up goodgame1 and goodgame2:", "CodeText",
 CellChangeTimes->{{3.846947436820074*^9, 3.846947449781954*^9}},
 CellID->1413525546],

Cell[BoxData[{
 RowBox[{
  RowBox[{"goodgame1", " ", "=", " ", 
   RowBox[{"{", "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"goodgame2", " ", "=", " ", 
   RowBox[{"{", "}"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.8469474551640863`*^9, 3.8469474738022346`*^9}},
 CellLabel->"In[17]:=",
 CellID->1219362104],

Cell["\<\
The function that uses the training data to play is shown below. Note that \
the training data for each player gets updated after each game, which is how \
the AIs actively learn.\
\>", "Text",
 CellChangeTimes->{{3.846947481187027*^9, 3.8469475280361567`*^9}},
 CellID->2070518296],

Cell["\<\
Function that simulates a given amount of games using the AIs training data:\
\>", "CodeText",
 CellChangeTimes->{{3.846947533989311*^9, 3.846947556561635*^9}},
 CellID->83480143],

Cell[BoxData[
 RowBox[{
  RowBox[{"runUsingDataSet", "[", "repeat_", "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"startingboard", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "3"}], "]"}]}], ";",
        "\[IndentingNewLine]", 
       RowBox[{"firstplayer", " ", "=", " ", "1"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"listOfgrids", " ", "=", " ", 
        RowBox[{"{", "startingboard", "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"While", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"!", 
           RowBox[{"gameOver2", "[", "startingboard", "]"}]}], "&&", 
          RowBox[{"!", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"actualWinner", "[", "startingboard", "]"}], 
             "\[NotEqual]", "0"}], ")"}]}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Which", "[", 
           RowBox[{
            RowBox[{"firstplayer", "\[Equal]", "1"}], ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Length", "@", 
                RowBox[{"KeyTake", "[", 
                 RowBox[{"trainingData1", ",", 
                  RowBox[{"{", "startingboard", "}"}]}], "]"}]}], 
               "\[NotEqual]", "0"}], ",", 
              RowBox[{"startingboard", " ", "=", " ", 
               RowBox[{"RandomChoice", "@", 
                RowBox[{"Flatten", "[", 
                 RowBox[{
                  RowBox[{"Values", "@", 
                   RowBox[{"KeyTake", "[", 
                    RowBox[{"trainingData1", ",", 
                    RowBox[{"{", "startingboard", "}"}]}], "]"}]}], ",", 
                  "2"}], "]"}]}]}], ",", 
              RowBox[{"startingboard", "=", 
               RowBox[{"simulate1Move", "[", 
                RowBox[{"startingboard", ",", 
                 RowBox[{"playturnPosition", "[", "startingboard", "]"}], ",",
                  "firstplayer"}], "]"}]}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"firstplayer", "\[Equal]", "2"}], ",", " ", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Length", "@", 
                RowBox[{"KeyTake", "[", 
                 RowBox[{"trainingData2", ",", 
                  RowBox[{"{", "startingboard", "}"}]}], "]"}]}], 
               "\[NotEqual]", "0"}], ",", 
              RowBox[{"startingboard", " ", "=", " ", 
               RowBox[{"RandomChoice", "@", 
                RowBox[{"Flatten", "[", 
                 RowBox[{
                  RowBox[{"Values", "@", 
                   RowBox[{"KeyTake", "[", 
                    RowBox[{"trainingData2", ",", 
                    RowBox[{"{", "startingboard", "}"}]}], "]"}]}], ",", 
                  "2"}], "]"}]}]}], ",", 
              RowBox[{"startingboard", "=", 
               RowBox[{"simulate1Move", "[", 
                RowBox[{"startingboard", ",", 
                 RowBox[{"playturnPosition", "[", "startingboard", "]"}], ",",
                  "firstplayer"}], "]"}]}]}], "]"}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"listOfgrids", "=", 
           RowBox[{"Append", "[", 
            RowBox[{"listOfgrids", ",", "startingboard"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"firstplayer", " ", "=", " ", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"EvenQ", "[", 
              RowBox[{"(", 
               RowBox[{"firstplayer", "+", "1"}], ")"}], "]"}], ",", "2", ",",
              "1"}], "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"actualWinner", "[", "startingboard", "]"}], "\[Equal]", 
          "1"}], ",", 
         RowBox[{"goodgame1", " ", "=", " ", 
          RowBox[{"Append", "[", 
           RowBox[{"goodgame1", ",", " ", "listOfgrids"}], "]"}]}], ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"actualWinner", "[", "startingboard", "]"}], "\[Equal]", 
            "2"}], ",", 
           RowBox[{
            RowBox[{"goodgame2", " ", "=", " ", 
             RowBox[{"Append", "[", 
              RowBox[{"goodgame2", ",", " ", "listOfgrids"}], "]"}]}], 
            ";"}]}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"actualWinner", "[", "startingboard", "]"}], "\[Equal]", 
          "1"}], ",", 
         RowBox[{"AI1", " ", "=", " ", 
          RowBox[{"Append", "[", 
           RowBox[{"AI1", ",", " ", 
            RowBox[{
             RowBox[{"AssociationThread", "[", 
              RowBox[{"listOfgrids", ",", 
               RowBox[{"RotateLeft", "[", 
                RowBox[{"listOfgrids", ",", "1"}], "]"}]}], "]"}], "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{
                RowBox[{"Range", "[", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"Length", "@", "listOfgrids"}], ")"}], "/", "2"}], 
                 "]"}], "*", "2"}], "-", "1"}], "]"}], "]"}]}], "]"}]}], ",", 
         
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"actualWinner", "[", "startingboard", "]"}], "\[Equal]", 
            "2"}], ",", 
           RowBox[{
            RowBox[{"AI2", " ", "=", " ", 
             RowBox[{"Append", "[", 
              RowBox[{"AI2", ",", " ", 
               RowBox[{
                RowBox[{"AssociationThread", "[", 
                 RowBox[{"listOfgrids", ",", 
                  RowBox[{"RotateLeft", "[", 
                   RowBox[{"listOfgrids", ",", "1"}], "]"}]}], "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{
                  RowBox[{"Range", "[", 
                   RowBox[{"Floor", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Length", "@", "listOfgrids"}], ")"}], "/", "2"}],
                     "]"}], "]"}], "*", "2"}], "]"}], "]"}]}], "]"}]}], 
            ";"}]}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"trainingData1", " ", "=", " ", 
        RowBox[{"Merge", "[", 
         RowBox[{"AI1", ",", "List"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"trainingData2", " ", "=", " ", 
        RowBox[{"Merge", "[", 
         RowBox[{"AI2", ",", "List"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
      ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "1", ",", "repeat"}], "}"}]}], "]"}]}], 
   "]"}]}]], "Code",
 CellChangeTimes->{{3.8469475594754353`*^9, 3.846947585352195*^9}, {
   3.846947643854122*^9, 3.846947644671156*^9}, 3.846953131791482*^9, {
   3.846953224041148*^9, 3.846953229440332*^9}},
 CellLabel->"In[19]:=",
 CellID->1288223993],

Cell["\<\
After running 10 games with the dataset, here's a look at the stats for each \
player.\
\>", "Text",
 CellChangeTimes->{{3.846952998569276*^9, 3.846953034147744*^9}},
 CellID->523567195],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"runUsingDataSet", "[", "10", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Length", "@", "goodgame1"}]}], "Input",
 CellChangeTimes->{{3.846953036107888*^9, 3.846953053090317*^9}, {
  3.84695315815831*^9, 3.846953160010079*^9}},
 CellLabel->"In[26]:=",
 CellID->2019926968],

Cell[BoxData["4"], "Output",
 CellChangeTimes->{3.846953260453185*^9, 3.8471389285614347`*^9},
 CellLabel->"Out[41]=",
 CellID->1626045621]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "@", "goodgame2"}]], "Input",
 CellChangeTimes->{{3.8469530595891333`*^9, 3.84695306997826*^9}},
 CellLabel->"In[28]:=",
 CellID->143837241],

Cell[BoxData["6"], "Output",
 CellChangeTimes->{3.846953070816306*^9, 3.84695315120759*^9, 
  3.846953268356409*^9, 3.847138949394186*^9},
 CellLabel->"Out[42]=",
 CellID->772080258]
}, Open  ]],

Cell["\<\
Here's a game where player 1 wins (through the center column):\
\>", "Text",
 CellChangeTimes->{{3.846953287732441*^9, 3.84695329736968*^9}, {
  3.848699198322138*^9, 3.84869922529212*^9}},
 CellID->1226711109],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "/@", 
  RowBox[{"goodgame1", "[", 
   RowBox[{"[", "2", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8469533012236137`*^9, 3.846953319770115*^9}},
 CellLabel->"In[43]:=",
 CellID->577525321],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[GridBox[{
      {"0", "0", "0"},
      {"0", "0", "0"},
      {"0", "0", "0"}
     },
     AutoDelete->False,
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Grid"], ",", 
   TagBox[GridBox[{
      {"0", "0", "0"},
      {"0", "0", "1"},
      {"0", "0", "0"}
     },
     AutoDelete->False,
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Grid"], ",", 
   TagBox[GridBox[{
      {"0", "0", "0"},
      {"0", "0", "1"},
      {"0", "0", "2"}
     },
     AutoDelete->False,
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Grid"], ",", 
   TagBox[GridBox[{
      {"0", "0", "0"},
      {"0", "1", "1"},
      {"0", "0", "2"}
     },
     AutoDelete->False,
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Grid"], ",", 
   TagBox[GridBox[{
      {"0", "0", "0"},
      {"0", "1", "1"},
      {"2", "0", "2"}
     },
     AutoDelete->False,
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Grid"], ",", 
   TagBox[GridBox[{
      {"1", "0", "0"},
      {"0", "1", "1"},
      {"2", "0", "2"}
     },
     AutoDelete->False,
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Grid"], ",", 
   TagBox[GridBox[{
      {"1", "0", "0"},
      {"2", "1", "1"},
      {"2", "0", "2"}
     },
     AutoDelete->False,
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Grid"], ",", 
   TagBox[GridBox[{
      {"1", "0", "0"},
      {"2", "1", "1"},
      {"2", "1", "2"}
     },
     AutoDelete->False,
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Grid"], ",", 
   TagBox[GridBox[{
      {"1", "0", "2"},
      {"2", "1", "1"},
      {"2", "1", "2"}
     },
     AutoDelete->False,
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Grid"], ",", 
   TagBox[GridBox[{
      {"1", "1", "2"},
      {"2", "1", "1"},
      {"2", "1", "2"}
     },
     AutoDelete->False,
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Grid"]}], "}"}]], "Output",
 CellChangeTimes->{3.8469533395624332`*^9, 3.847138951901679*^9},
 CellLabel->"Out[43]=",
 CellID->228737890]
}, Open  ]],

Cell["\<\
Here's a game where player 2 wins (through the center column):\
\>", "Text",
 CellChangeTimes->{{3.8469533298701143`*^9, 3.8469533357454157`*^9}, {
  3.848699227253765*^9, 3.8486992339621563`*^9}},
 CellID->2050025899],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "/@", 
  RowBox[{"goodgame2", "[", 
   RowBox[{"[", "2", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.846953322483342*^9, 3.846953327629146*^9}},
 CellLabel->"In[44]:=",
 CellID->1627026230],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[GridBox[{
      {"0", "0", "0"},
      {"0", "0", "0"},
      {"0", "0", "0"}
     },
     AutoDelete->False,
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Grid"], ",", 
   TagBox[GridBox[{
      {"0", "0", "0"},
      {"0", "0", "0"},
      {"0", "0", "1"}
     },
     AutoDelete->False,
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Grid"], ",", 
   TagBox[GridBox[{
      {"0", "2", "0"},
      {"0", "0", "0"},
      {"0", "0", "1"}
     },
     AutoDelete->False,
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Grid"], ",", 
   TagBox[GridBox[{
      {"0", "2", "0"},
      {"0", "0", "1"},
      {"0", "0", "1"}
     },
     AutoDelete->False,
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Grid"], ",", 
   TagBox[GridBox[{
      {"0", "2", "0"},
      {"0", "0", "1"},
      {"0", "2", "1"}
     },
     AutoDelete->False,
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Grid"], ",", 
   TagBox[GridBox[{
      {"1", "2", "0"},
      {"0", "0", "1"},
      {"0", "2", "1"}
     },
     AutoDelete->False,
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Grid"], ",", 
   TagBox[GridBox[{
      {"1", "2", "0"},
      {"0", "2", "1"},
      {"0", "2", "1"}
     },
     AutoDelete->False,
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Grid"]}], "}"}]], "Output",
 CellChangeTimes->{3.8469533411099157`*^9, 3.847138953675659*^9},
 CellLabel->"Out[44]=",
 CellID->153893121]
}, Open  ]],

Cell["\<\
Finally, we can combine all these functions into one final function that has \
two AIs play against each other in a game of tic-tac-toe.\
\>", "Text",
 CellChangeTimes->{{3.846953356460318*^9, 3.846953401279744*^9}},
 CellID->1792012359],

Cell["\<\
Final tic-tac-toe function for adversarial pair AIs, that first plays a \
certain number of random games, and then plays a certain number of actual \
games using the players' datasets:\
\>", "CodeText",
 CellChangeTimes->{{3.846953406090775*^9, 3.846953417875585*^9}, {
  3.8481473444732714`*^9, 3.8481474182490215`*^9}},
 CellID->1412174324],

Cell[BoxData[
 RowBox[{
  RowBox[{"playTicTacToe", "[", 
   RowBox[{"random_", ",", "actual_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"AI1", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"AI2", " ", "=", " ", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"runSoManyEveryTimes", "[", "random", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"trainingData1", " ", "=", " ", 
      RowBox[{"Merge", "[", 
       RowBox[{"AI1", ",", "List"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"trainingData2", " ", "=", " ", 
      RowBox[{"Merge", "[", 
       RowBox[{"AI2", ",", "List"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"goodgame1", " ", "=", " ", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"goodgame2", " ", "=", " ", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"runUsingDataSet", "[", "actual", "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Code",
 CellChangeTimes->{{3.846953421333673*^9, 3.846953434211464*^9}},
 CellLabel->"In[29]:=",
 CellID->1221535445]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Tic-Tac-Toe: Analyzing Adversarial Pair AIs", "Section",
 CellChangeTimes->{{3.846953477818618*^9, 3.846953499112208*^9}},
 CellID->526697667],

Cell["\<\
We wrote code to build 2 AIs for tic-tac-toe and have them play against each \
other. Now, we need to analyze it. How do the AIs win? What strategies do \
they come up with? Over time, does a certain AI win or do the games end in \
ties?\
\>", "Text",
 CellChangeTimes->{{3.846953503323501*^9, 3.846953622536786*^9}},
 CellID->381864143],

Cell[CellGroupData[{

Cell["Strategies", "Subsection",
 CellChangeTimes->{{3.8471411631461697`*^9, 3.847141179133642*^9}},
 CellID->1279974883],

Cell["\<\
We started off by analyzing the AIs first moves, to see if it differed from \
the conventional concept of choosing the center piece. For player 1, it \
appeared that the top left corner was the most commonly picked spot for the \
first move.\
\>", "Text",
 CellChangeTimes->{{3.847141304272088*^9, 3.8471413386064453`*^9}, {
  3.8471414419575663`*^9, 3.847141487939588*^9}},
 CellID->2000255852],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Counts", "@", 
  RowBox[{"Flatten", "[", 
   RowBox[{
    RowBox[{"Values", "[", 
     RowBox[{"KeyTake", "[", 
      RowBox[{"trainingData1", ",", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}], "}"}]}], "]"}], 
     "]"}], ",", "2"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.847141352711503*^9, 3.847141390744906*^9}},
 CellLabel->"In[49]:=",
 CellID->660957651],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], "}"}], "\[Rule]", "3116"}],
    ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}], "\[Rule]", "4758"}],
    ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}], "\[Rule]", "3861"}],
    ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}], "\[Rule]", "2906"}],
    ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}], "\[Rule]", "3947"}],
    ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}], "\[Rule]", "3544"}],
    ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}], "\[Rule]", "4090"}],
    ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "}"}], "\[Rule]", "3457"}],
    ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], "\[Rule]", 
    "3534"}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.8471414507017107`*^9},
 CellLabel->"Out[49]=",
 CellID->1295225543]
}, Open  ]],

Cell["\<\
For player 2, it appeared that when player 1 picked the top left corner, it \
selected the spot below that\[LongDash] the center left spot. It did pick the \
center spot as the 2nd most common location, though.\
\>", "Text",
 CellChangeTimes->{{3.847141490839737*^9, 3.847141497281074*^9}, {
  3.8471415516879168`*^9, 3.847141624911668*^9}},
 CellID->723069845],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Counts", "@", 
  RowBox[{"Flatten", "[", 
   RowBox[{
    RowBox[{"Values", "[", 
     RowBox[{"KeyTake", "[", 
      RowBox[{"trainingData2", ",", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}], "}"}]}], "]"}], 
     "]"}], ",", "2"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8471415049815083`*^9, 3.847141507138776*^9}, {
  3.8471415436790113`*^9, 3.847141543748782*^9}},
 CellLabel->"In[52]:=",
 CellID->252059935],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "2", ",", "0"}], "}"}]}], "}"}], "\[Rule]", "88"}], 
   ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}], "\[Rule]", "147"}], 
   ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "2", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}], "\[Rule]", "257"}], 
   ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "0", ",", "0"}], "}"}]}], "}"}], "\[Rule]", "112"}], 
   ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "0", ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}], "\[Rule]", "140"}], 
   ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "2"}], "}"}]}], "}"}], "\[Rule]", "77"}], 
   ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}], "\[Rule]", "278"}], 
   ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}], "\[Rule]", 
    "103"}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.847141507945511*^9, 3.8471415155810757`*^9}, 
   3.847141548272464*^9},
 CellLabel->"Out[52]=",
 CellID->546141053]
}, Open  ]],

Cell["Clearly, the AI's first moves differ from what we expected. ", "Text",
 CellChangeTimes->{{3.847141627601169*^9, 3.847141673983077*^9}, {
  3.8481475464878807`*^9, 3.848147555490076*^9}},
 CellID->348680123]
}, Open  ]],

Cell[CellGroupData[{

Cell["Graphs", "Subsection",
 CellChangeTimes->{{3.8471417303240213`*^9, 3.847141732564185*^9}},
 CellID->754560175],

Cell["\<\
To find the AI's winning patterns over time, we ran many random games and \
graphed the results.\
\>", "Text",
 CellChangeTimes->{{3.847141735847131*^9, 3.8471417550407343`*^9}},
 CellID->1492464785],

Cell["\<\
To start off, we ran 100 random games for the AIs to learn from, and then \
played 100 real games to see how often player 1 won. The x-axis is the number \
of training games, while the y-axis is how many games were won.\
\>", "Text",
 CellChangeTimes->{{3.847141770652768*^9, 3.847141787839583*^9}, {
  3.847141872475184*^9, 3.8471418908656816`*^9}, {3.848334180819656*^9, 
  3.848334201766467*^9}},
 CellID->1339171086],

Cell[BoxData[{
 RowBox[{
  RowBox[{"listPlayer1Wins", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"playTicTacToe", "[", 
      RowBox[{"n", ",", "100"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"listPlayer1Wins", " ", "=", " ", 
      RowBox[{"Append", "[", 
       RowBox[{"listPlayer1Wins", ",", 
        RowBox[{"Length", "@", "goodgame1"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "0", ",", "100", ",", "1"}], "}"}]}], "]"}], 
  ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.848614724289541*^9, 3.8486147247240334`*^9}},
 CellLabel->"In[30]:=",
 CellID->288104324],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{"listPlayer1Wins", ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Random training games\>\"", ",", " ", "\"\<Player 1 win rate\>\""}],
      "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{3.84861466497621*^9},
 CellLabel->"(Debug) In[135]:=",
 CellID->42831611],

Cell[BoxData[
 GraphicsBox[{{}, {{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1:eJxtlUlulDEQRi1WLFmwYMHiJ0IIIYSYZ4hpwpR0IAQINFP+dNJrruCj5ASc
wUfpI3AEhn7PkktEij69v8p2VdlVfW7+Y3dxIqX088//X139/Vr/J/Vj5sNK
i3wSPYOewv4aPo0+7/3qW/jsSvMuPKDv0TX8tZ9nf/e7gD5CL7LfB/hS4Mvw
HnyF/Xbgq+gEvYbd9dfR2+iNEO9N1HhvsT6HddvoHXQLvRviu8f6d/D9kM+D
lVbtD/G3PtbF+3rc75PW0ScocZZpiHva+1mv4rpJr2UDhbP3/ZR44QKnjV7L
i36ftIk+6/cp8iuUvAv1tQ7V+2Vf78dzWn4v+c59FNk6cE6rj2y9jZP7KJsh
zq3ez3NaXtPez3Pad/OyftshP/rOutuHrR/fhDxk3+9O75/loDWo5yXjIr8c
7tm49WtzwLp5L+TvXGhx2FfOJfkTah+ssU72fO+F+7Rv2jumDjmoc6PI9F+F
y97/v9unFXWOWJca/BP7eO/OAfP0HOtbZd+Pfe75sn4yedfArY68+xy4yMYt
e/6st+dZiH/Wx1tl58Bn1lGfDLd+gH1HVbY/vvT7Z9h3ULTz/qtsf3xFmasZ
bvNE5ryqv/3/rc83w77bAjunq3br9x1mLmXZPg72CttPaR87fZ0DF7i9P+3c
bxp7+zCG/eTJSkfYuVJk3udxsFfXU6+lduf3AedQrwH2dyXLrB9l38dBn8+x
du8r+C9lf4/nrCeeAW73qZ14xnkfT9EOH4f9quz5sPMtHWInnuGwt2ft5DPC
rf7arT/c5rX+vJ+l/r7/I9T8A2fZ+su+T9n6H4XztRPvUnb+L9iHfhhk+0HG
f5Sd74twvuy81H+afwNCuCsS
       "]]}}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6]}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[
      1.6]}, {}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[
      1.6]}, {}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Random training games\"", TraditionalForm], 
    FormBox["\"Player 1 win rate\"", TraditionalForm]},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 174.}, {0, 96.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.847141825863132*^9, 3.847141867916836*^9, 3.84861447588435*^9, 
   3.848614523516446*^9, {3.8486146498540998`*^9, 3.848614668055208*^9}},
 CellLabel->"(Debug) Out[135]=",
 CellID->422891078]
}, Open  ]],

Cell["\<\
As the AIs had more training data, their win rate started to even out. With \
only 20 random games for training data, it seems like player 1 won and lost \
quite randomly, but as more and more training data accumulated, player 1's \
win rate started to even out between 45% and 55%.\
\>", "Text",
 CellChangeTimes->{{3.847141897522234*^9, 3.847141912519092*^9}, {
  3.8471419459438887`*^9, 3.8471420507805862`*^9}, {3.848691953810607*^9, 
  3.848691953845686*^9}, {3.848699284176499*^9, 3.848699291708148*^9}},
 CellID->2047171016],

Cell["\<\
We then graphed the wins and losses of the AIs with even more training data\
\[LongDash] increments of 2,000 random games up to 30,000 random games. \
Again, the x-axis is the number of training games, while the y-axis is how \
many games were won.\
\>", "Text",
 CellChangeTimes->{{3.8471420534584217`*^9, 3.84714210182034*^9}, {
  3.84714214085351*^9, 3.847142148010789*^9}, {3.84833420697279*^9, 
  3.848334222875456*^9}, {3.8486992978551073`*^9, 3.8486993012241898`*^9}},
 CellID->426567460],

Cell[BoxData[{
 RowBox[{
  RowBox[{"listPlayer2Wins", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"listPlayer1Wins", " ", "=", " ", 
   RowBox[{"{", "}"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.848699332336587*^9, 3.8486993325245447`*^9}},
 CellLabel->"In[32]:=",
 CellID->501145362],

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"playTicTacToe", "[", 
      RowBox[{"n", ",", "100"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"listPlayer2Wins", " ", "=", " ", 
      RowBox[{"Append", "[", 
       RowBox[{"listPlayer2Wins", ",", 
        RowBox[{"Length", "@", "goodgame2"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"listPlayer1Wins", " ", "=", " ", 
      RowBox[{"Append", "[", 
       RowBox[{"listPlayer1Wins", ",", 
        RowBox[{"Length", "@", "goodgame1"}]}], "]"}]}], ";"}], 
    "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "0", ",", "30000", ",", "2000"}], "}"}]}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8471422262433662`*^9, 3.847142239045389*^9}, {
  3.848614499960933*^9, 3.8486145010216274`*^9}, {3.848614845004314*^9, 
  3.848614897032689*^9}, {3.8486149513939714`*^9, 3.84861498127428*^9}, {
  3.8486168020427103`*^9, 3.8486168060727696`*^9}, {3.8486170265992503`*^9, 
  3.8486170341359806`*^9}, {3.848689863468932*^9, 3.8486898647216063`*^9}, {
  3.848699319991994*^9, 3.848699320351026*^9}},
 CellLabel->"In[34]:=",
 CellID->820260347],

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"listPlayer1Wins", ",", "listPlayer2Wins"}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Random training games in increments of 2000\>\"", ",", " ", 
      "\"\<Win Percentage\>\""}], "}"}]}], ",", 
   RowBox[{"PlotLabels", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Player1\>\"", ",", "\"\<Player2\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8486168652175426`*^9, 3.848616953509363*^9}, 
   3.848617048703678*^9, {3.8486172125349026`*^9, 3.8486172181835246`*^9}, {
   3.848617278033224*^9, 3.8486172975579343`*^9}, 3.848617348004302*^9},
 CellLabel->"(Debug) In[155]:=",
 CellID->178614384],

Cell[BoxData[
 GraphicsBox[{{}, {{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
      LineBox[{{1.4642857142857144`, 74.5}, {2., 52.}, {3., 68.}, {4., 60.}, {
       5., 61.}, {6., 43.}, {7., 49.}, {8., 54.}, {9., 52.}, {10., 47.}, {11.,
        56.}, {12., 44.}, {13., 49.}, {14., 48.}, {15., 50.}, {16., 54.}, {
       17., 48.}, {18., 46.}}]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
       NCache[
        Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
      LineBox[{{1., 5.}, {2., 39.}, {3., 4.}, {4., 35.}, {5., 35.}, {6., 
       55.}, {7., 44.}, {8., 42.}, {9., 44.}, {10., 50.}, {11., 41.}, {12., 
       55.}, {13., 45.}, {14., 49.}, {15., 45.}, {16., 45.}, {17., 51.}, {18.,
        51.}}]}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
       NCache[
        Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
      1.6]}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
       NCache[
        Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
      1.6]}, {}, {}, {}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
       NCache[
        Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
      1.6]}, {}, {}, {}}}, {{{{}, {GraphicsGroupBox[{
         {GrayLevel[1], AbsoluteThickness[4], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
          "Round"], 
          BSplineCurveBox[{
           Offset[{0, 0}, {18.375, 46.}], Offset[{0, 0}, {18.375, 46.}], 
            Offset[{0., 0.}, {18.555, 46.}], Offset[{0., 0.}, {18.555, 46.}], 
            Offset[{0., 0.}, {18.735, 46.}], 
            Offset[{0, 0}, {19.19959301684362, 44.70130337419171}], 
            Offset[{5., 1.1102230246251565`*^-15}, {19.19959301684362, 
             44.70130337419171}], 
            Offset[{10., 2.220446049250313*^-15}, {19.19959301684362, 
             44.70130337419171}], 
            Offset[{10., 2.220446049250313*^-15}, {19.19959301684362, 
             44.70130337419171}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], 
          BSplineCurveBox[{
           Offset[{0, 0}, {18.375, 46.}], Offset[{0, 0}, {18.375, 46.}], 
            Offset[{0., 0.}, {18.555, 46.}], Offset[{0., 0.}, {18.555, 46.}], 
            Offset[{0., 0.}, {18.735, 46.}], 
            Offset[{0, 0}, {19.19959301684362, 44.70130337419171}], 
            Offset[{5., 1.1102230246251565`*^-15}, {19.19959301684362, 
             44.70130337419171}], 
            Offset[{10., 2.220446049250313*^-15}, {19.19959301684362, 
             44.70130337419171}], 
            Offset[{10., 2.220446049250313*^-15}, {19.19959301684362, 
             44.70130337419171}]}]}, 
         {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]]}], 
          PolygonBox[{
           Offset[{49., 7.000000000000011}, {19.19959301684362, 
             44.70130337419171}], 
            Offset[{49., -6.999999999999989}, {19.19959301684362, 
             44.70130337419171}], 
            Offset[{10., -6.999999999999998}, {19.19959301684362, 
             44.70130337419171}], 
            Offset[{10., 7.000000000000002}, {19.19959301684362, 
             44.70130337419171}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox["\<\"Player1\"\>",
            BoxRotation->0.],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1], 
          Offset[{29.5, 6.5503158452884236*^-15}, \
{19.19959301684362, 44.70130337419171}], 
          ImageScaled[{Rational[1, 2], Rational[1, 2]}]]}], 
       GraphicsGroupBox[{
         {GrayLevel[1], AbsoluteThickness[4], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
          "Round"], 
          BSplineCurveBox[{
           Offset[{0, 0}, {18.375, 51.}], Offset[{0, 0}, {18.375, 51.}], 
            Offset[{0., 0.}, {18.555, 51.}], Offset[{0., 0.}, {18.555, 51.}], 
            Offset[{0., 0.}, {18.735, 51.}], 
            Offset[{0, 0}, {19.19959301684362, 52.29869655156258}], 
            Offset[{5., 1.1102230246251565`*^-15}, {19.19959301684362, 
             52.29869655156258}], 
            Offset[{10., 2.220446049250313*^-15}, {19.19959301684362, 
             52.29869655156258}], 
            Offset[{10., 2.220446049250313*^-15}, {19.19959301684362, 
             52.29869655156258}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], 
          BSplineCurveBox[{
           Offset[{0, 0}, {18.375, 51.}], Offset[{0, 0}, {18.375, 51.}], 
            Offset[{0., 0.}, {18.555, 51.}], Offset[{0., 0.}, {18.555, 51.}], 
            Offset[{0., 0.}, {18.735, 51.}], 
            Offset[{0, 0}, {19.19959301684362, 52.29869655156258}], 
            Offset[{5., 1.1102230246251565`*^-15}, {19.19959301684362, 
             52.29869655156258}], 
            Offset[{10., 2.220446049250313*^-15}, {19.19959301684362, 
             52.29869655156258}], 
            Offset[{10., 2.220446049250313*^-15}, {19.19959301684362, 
             52.29869655156258}]}]}, 
         {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]]}], 
          PolygonBox[{
           Offset[{49., 7.000000000000011}, {19.19959301684362, 
             52.29869655156258}], 
            Offset[{49., -6.999999999999989}, {19.19959301684362, 
             52.29869655156258}], 
            Offset[{10., -6.999999999999998}, {19.19959301684362, 
             52.29869655156258}], 
            Offset[{10., 7.000000000000002}, {19.19959301684362, 
             52.29869655156258}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox["\<\"Player2\"\>",
            BoxRotation->0.],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1], 
          Offset[{29.5, 6.5503158452884236*^-15}, \
{19.19959301684362, 52.29869655156258}], 
          ImageScaled[{Rational[1, 2], Rational[1, 2]}]]}]}}, {}}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
    "\"Random training games in increments of 2000\"", TraditionalForm], 
    FormBox["\"Win Percentage\"", TraditionalForm]},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->{{All, 69.4918603368724}, {All, All}},
  ImageSize->{629.3333333333329, Automatic},
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 18.}, {0, 74.5}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.08090169943749476]}},
  Ticks->{Automatic, Automatic}]], "Input",
 CellChangeTimes->{{3.848702565469862*^9, 3.8487025660972767`*^9}},
 CellID->975971071],

Cell["\<\
Player 1 and 2's win rate similarly started to even out at 50%. We were \
unable to run more random games due to time constraints (our computers aren't \
supercomputers, unfortunately). If we were able to run, let's say up to \
100,000 random games, we would like to see both players' win rate decrease to \
0%, because when two humans play tic-tac-toe logically, it's a draw. \
\>", "Text",
 CellChangeTimes->{{3.848147782321725*^9, 3.8481479164187384`*^9}, {
  3.8481480471966095`*^9, 3.848148059202546*^9}, {3.848332421221427*^9, 
  3.848332441229731*^9}},
 CellID->152898462]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Tic-Tac-Toe: Making an Interactive Game", "Section",
 CellChangeTimes->{{3.8471423110857487`*^9, 3.84714232015728*^9}, {
  3.8471423534384108`*^9, 3.8471423545730457`*^9}},
 CellID->1399506534],

Cell["\<\
After making these AIs, we decided to code it so that we could play against \
an AI\[LongDash] just to see who was smarter. We used a Manipulate and \
combined it with our two main functions from earlier: random games and \
training-based games. \
\>", "Text",
 CellChangeTimes->{{3.8471423572381372`*^9, 3.847142399805594*^9}, {
  3.8471424327828083`*^9, 3.847142464310525*^9}},
 CellID->1674613182],

Cell["\<\
We first created an interactive check box, where the humans can select where \
they want to move. The checkbox would influence the startingboard, which then \
would run the AI\[CloseCurlyQuote]s move and display the changes on the \
board. This went on until the game ended, either a draw or a win.\
\>", "Text",
 CellChangeTimes->{3.8483326375335693`*^9},
 CellID->93438981],

Cell["\<\
A challenge was timing player's 2 (the AI) moves, because the Manipulate \
updates constantly. We wanted to use something similar to a Wait function, \
where after AI moves, the human is given enough time to select a checkbox. \
For this, we used a Pause function, where the human is given 5 seconds to \
make a move. If the human doesn't make a move in 5 seconds, the AI just makes \
another move. 2 moves in a row, yay!\
\>", "Text",
 CellChangeTimes->{{3.847142515539289*^9, 3.847142516857874*^9}, {
  3.8471427764348216`*^9, 3.8471429693708267`*^9}, {3.8481481224076567`*^9, 
  3.8481481298369274`*^9}, {3.848332517640087*^9, 3.848332633454061*^9}},
 CellID->579703631],

Cell["\<\
Here is an interactive tic-tac-toe game, where the AI moves RANDOMLY. Note \
that you'll have 5 seconds to make your move, and you'll need to wait a bit \
after your move, to give time for the AI to play.\
\>", "Text",
 CellChangeTimes->{{3.8471430198241816`*^9, 3.8471430328301325`*^9}, {
  3.8483327088997602`*^9, 3.848332728027575*^9}, {3.8484922282749767`*^9, 
  3.8484922329948435`*^9}, {3.848698311406262*^9, 3.848698318451887*^9}},
 CellID->145065036],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"startingBoard2", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "3"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Manipulate", "[", 
   RowBox[{
    RowBox[{"Grid", "[", 
     RowBox[{"Take", "[", 
      RowBox[{"startingBoard2", ",", "3", ",", "3"}], "]"}], "]"}], ",", 
    RowBox[{"Dynamic", "[", 
     RowBox[{"Panel", "[", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"actualWinner", "[", "startingBoard2", "]"}], "\[NotEqual]", 
         "1"}], ",", 
        RowBox[{"(", 
         RowBox[{"Grid", "[", 
          RowBox[{"Outer", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Checkbox", "[", 
              RowBox[{
               RowBox[{"Dynamic", "[", 
                RowBox[{"startingBoard2", "[", 
                 RowBox[{"[", 
                  RowBox[{"#1", ",", "#2"}], "]"}], "]"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1"}], "}"}]}], "]"}], "&"}], ",", 
            RowBox[{"Range", "[", "3", "]"}], ",", 
            RowBox[{"Range", "[", "3", "]"}]}], "]"}], "]"}], ")"}], ",", 
        "\"\<You Won\>\""}], "]"}], "]"}], "]"}], ",", 
    RowBox[{"SaveDefinitions", "\[Rule]", "True"}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"actualWinner", "[", "startingBoard2", "]"}], "\[NotEqual]", 
        "1"}], "&&", 
       RowBox[{
        RowBox[{"actualWinner", "[", "startingBoard2", "]"}], "\[NotEqual]", 
        "2"}], "&&", 
       RowBox[{
        RowBox[{"gameOver2", "[", "startingBoard2", "]"}], "\[NotEqual]", 
        "True"}]}], ",", 
      RowBox[{
       RowBox[{"Pause", "[", "5", "]"}], ";", 
       RowBox[{"startingBoard2", "=", 
        RowBox[{"simulate1Move", "[", 
         RowBox[{"startingBoard2", ",", 
          RowBox[{"playturnPosition", "[", "startingBoard2", "]"}], ",", 
          "2"}], "]"}]}]}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "5"}], "}"}]}], "]"}], ";", 
  RowBox[{"Grid", "@", "startingBoard2"}]}]}], "Input",
 CellChangeTimes->{
  3.847142487971686*^9, {3.848614246379133*^9, 3.848614261928687*^9}, {
   3.848699441735794*^9, 3.848699441855081*^9}, {3.852284323668775*^9, 
   3.8522843266381598`*^9}},
 CellLabel->"In[34]:=",
 CellID->377221359],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[
       Dynamic[
        Panel[
         If[$CellContext`actualWinner[$CellContext`startingBoard2] != 1, 
          Grid[
           Outer[Checkbox[
             Dynamic[
              Part[$CellContext`startingBoard2, #, #2]], {0, 1}]& , 
            Range[3], 
            Range[3]]], "You Won"]]]], Manipulate`Dump`ThisIsNotAControl}}, 
    Typeset`size$$ = {32., {20.334033098001964`, 26.065966901998035`}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {}, "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Grid[
        Take[$CellContext`startingBoard2, 3, 3]], "Specifications" :> {
        Dynamic[
         Panel[
          If[$CellContext`actualWinner[$CellContext`startingBoard2] != 1, 
           Grid[
            Outer[Checkbox[
              Dynamic[
               Part[$CellContext`startingBoard2, #, #2]], {0, 1}]& , 
             Range[3], 
             Range[3]]], "You Won"]]]}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{82., {80.13403309800196, 85.86596690199804}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`startingBoard2 = {{0, 0, 0}, {0, 0, 0}, {0,
         0, 0}}, $CellContext`actualWinner[
         Pattern[$CellContext`list, 
          Blank[]]] := Which[$CellContext`winnerRCD[$CellContext`list] <= 3, 
         Part[$CellContext`list, 1, 
          $CellContext`winnerRCD[$CellContext`list]], \
$CellContext`winnerRCD[$CellContext`list] <= 6, 
         Part[$CellContext`list, 
          Floor[$CellContext`winnerRCD[$CellContext`list]/3], 
          1], $CellContext`winnerRCD[$CellContext`list] <= 8, 
         Part[$CellContext`list, 2, 2], True, 0], $CellContext`winnerRCD[
         Pattern[$CellContext`list, 
          Blank[]]] := First[
         First[
          Position[
           Flatten[{
             $CellContext`column[$CellContext`list], 
             $CellContext`row[$CellContext`list], 
             $CellContext`diagonal[$CellContext`list]}], True], {
          9}]], $CellContext`column[
         Pattern[$CellContext`list, 
          Blank[]]] := Table[
         Apply[Equal, 
          
          Part[$CellContext`list, 
           All, $CellContext`column]], {$CellContext`column, 1, 
          3}], $CellContext`row[
         Pattern[$CellContext`list, 
          Blank[]]] := Table[
         Apply[Equal, 
          Part[$CellContext`list, $CellContext`row, All]], {$CellContext`row, 
          1, 3}], $CellContext`diagonal[
         Pattern[$CellContext`list, 
          Blank[]]] := {
         Apply[Equal, {
           Part[$CellContext`list, 1, 1], 
           Part[$CellContext`list, 2, 2], 
           Part[$CellContext`list, 3, 3]}], 
         Apply[Equal, {
           Part[$CellContext`list, 1, 3], 
           Part[$CellContext`list, 2, 2], 
           Part[$CellContext`list, 3, 1]}]}}; Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.8471430636021404`*^9, 3.847143074885377*^9}, {
   3.848332646320068*^9, 3.848332701728752*^9}, {3.8483327895421867`*^9, 
   3.848332800150508*^9}, 3.8484920797872334`*^9, {3.848492516794986*^9, 
   3.848492527490088*^9}, 3.848612510394147*^9, 3.8486140782888947`*^9, {
   3.84861429453932*^9, 3.848614299792309*^9}, {3.848689967089525*^9, 
   3.848689978740294*^9}, {3.848697789478116*^9, 3.848697834434957*^9}, {
   3.848697904680428*^9, 3.848697974458303*^9}, {3.8486983246316557`*^9, 
   3.848698340244526*^9}, {3.848699362075341*^9, 3.84869937877626*^9}, {
   3.848699472160294*^9, 3.8486994828992977`*^9}, 3.852285207431526*^9},
 CellLabel->"Out[35]="],

Cell[BoxData[
 TagBox[GridBox[{
    {"0", "0", "2"},
    {"2", "0", "2"},
    {"0", "2", "2"}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.8471430636021404`*^9, 3.847143074885377*^9}, {
   3.848332646320068*^9, 3.848332701728752*^9}, {3.8483327895421867`*^9, 
   3.848332800150508*^9}, 3.8484920797872334`*^9, {3.848492516794986*^9, 
   3.848492527490088*^9}, 3.848612510394147*^9, 3.8486140782888947`*^9, {
   3.84861429453932*^9, 3.848614299792309*^9}, {3.848689967089525*^9, 
   3.848689978740294*^9}, {3.848697789478116*^9, 3.848697834434957*^9}, {
   3.848697904680428*^9, 3.848697974458303*^9}, {3.8486983246316557`*^9, 
   3.848698340244526*^9}, {3.848699362075341*^9, 3.84869937877626*^9}, {
   3.848699472160294*^9, 3.8486994828992977`*^9}, 3.8522852324671297`*^9},
 CellLabel->"Out[36]="]
}, Open  ]],

Cell["\<\
Here is the same interactive tic-tac-toe game where the AI uses it's dataset \
and makes logical moves. See the difference?\
\>", "Text",
 CellChangeTimes->{{3.847143035482524*^9, 3.847143056497184*^9}},
 CellID->243481472],

Cell["This is with the AI as player 2, so you go first:", "Text",
 CellChangeTimes->{{3.847143231341445*^9, 3.8471432371806235`*^9}, {
  3.848332745560639*^9, 3.848332756399949*^9}},
 CellID->198711203],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"startingBoard3", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "3"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"with", " ", "dataset"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Manipulate", "[", 
   RowBox[{
    RowBox[{"Grid", "[", 
     RowBox[{"Take", "[", 
      RowBox[{"startingBoard3", ",", "3", ",", "3"}], "]"}], "]"}], ",", 
    RowBox[{"Dynamic", "[", 
     RowBox[{"Panel", "[", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"actualWinner", "[", "startingBoard3", "]"}], "\[NotEqual]",
           "1"}], " ", "&&", 
         RowBox[{
          RowBox[{"actualWinner", "[", "startingBoard3", "]"}], "\[NotEqual]",
           "2"}], "&&", 
         RowBox[{
          RowBox[{"gameOver2", "[", "startingBoard3", "]"}], "\[NotEqual]", 
          "True"}]}], ",", 
        RowBox[{"(", 
         RowBox[{"Grid", "[", 
          RowBox[{"Outer", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Checkbox", "[", 
              RowBox[{
               RowBox[{"Dynamic", "[", 
                RowBox[{"startingBoard3", "[", 
                 RowBox[{"[", 
                  RowBox[{"#1", ",", "#2"}], "]"}], "]"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1"}], "}"}]}], "]"}], "&"}], ",", 
            RowBox[{"Range", "[", "3", "]"}], ",", 
            RowBox[{"Range", "[", "3", "]"}]}], "]"}], "]"}], ")"}], ",", 
        "\"\<Game Over, figure out who won :)\>\""}], "]"}], "]"}], "]"}], 
    ",", 
    RowBox[{"SaveDefinitions", "\[Rule]", "True"}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"actualWinner", "[", "startingBoard3", "]"}], "\[NotEqual]", 
        "1"}], "&&", 
       RowBox[{
        RowBox[{"actualWinner", "[", "startingBoard3", "]"}], "\[NotEqual]", 
        "2"}], "&&", 
       RowBox[{
        RowBox[{"gameOver2", "[", "startingBoard3", "]"}], "\[NotEqual]", 
        "True"}]}], ",", 
      RowBox[{
       RowBox[{"Pause", "[", "5", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "@", 
           RowBox[{"KeyTake", "[", 
            RowBox[{"trainingData2", ",", 
             RowBox[{"{", "startingBoard3", "}"}]}], "]"}]}], "\[NotEqual]", 
          "0"}], ",", 
         RowBox[{"startingBoard3", " ", "=", " ", 
          RowBox[{"RandomChoice", "@", 
           RowBox[{"Flatten", "[", 
            RowBox[{
             RowBox[{"Values", "@", 
              RowBox[{"KeyTake", "[", 
               RowBox[{"trainingData2", ",", 
                RowBox[{"{", "startingBoard3", "}"}]}], "]"}]}], ",", "2"}], 
            "]"}]}]}], " ", 
         RowBox[{"(*", 
          RowBox[{"using", " ", "dataset"}], "*)"}], ",", 
         RowBox[{"startingBoard3", "=", 
          RowBox[{"simulate1Move", "[", 
           RowBox[{"startingBoard3", ",", 
            RowBox[{"playturnPosition", "[", "startingBoard3", "]"}], ",", 
            "2"}], "]"}]}]}], "]"}]}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "5"}], "}"}]}], "]"}], ";", 
  RowBox[{"Grid", "@", "startingBoard3"}]}]}], "Input",
 CellChangeTimes->{{3.8457387202336264`*^9, 3.8457387246539497`*^9}, {
   3.845738758056986*^9, 3.8457388791317525`*^9}, {3.845739023338761*^9, 
   3.8457390291371317`*^9}, {3.8457533565127387`*^9, 3.845753357558153*^9}, {
   3.8462487209181123`*^9, 3.846248722883749*^9}, {3.8462491049736586`*^9, 
   3.8462491056124086`*^9}, 3.846249149314672*^9, {3.846365576156231*^9, 
   3.8463655804357433`*^9}, {3.846365686056856*^9, 3.846365691646737*^9}, {
   3.84651766060312*^9, 3.846517661949607*^9}, {3.8484926198593993`*^9, 
   3.848492621289641*^9}, {3.848698004297453*^9, 3.8486980271000834`*^9}, {
   3.848699437853814*^9, 3.8486994379385147`*^9}, {3.852284404582552*^9, 
   3.852284407343195*^9}},
 CellLabel->"In[37]:=",
 CellID->361346000],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[
       Dynamic[
        Panel[
         If[
          
          And[$CellContext`actualWinner[$CellContext`startingBoard3] != 
           1, $CellContext`actualWinner[$CellContext`startingBoard3] != 
           2, $CellContext`gameOver2[$CellContext`startingBoard3] != True], 
          Grid[
           Outer[Checkbox[
             Dynamic[
              Part[$CellContext`startingBoard3, #, #2]], {0, 1}]& , 
            Range[3], 
            Range[3]]], "Game Over, figure out who won :)"]]]], 
      Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = {
    32., {20.334033098001964`, 26.065966901998035`}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {}, "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Grid[
        Take[$CellContext`startingBoard3, 3, 3]], "Specifications" :> {
        Dynamic[
         Panel[
          If[
           
           And[$CellContext`actualWinner[$CellContext`startingBoard3] != 
            1, $CellContext`actualWinner[$CellContext`startingBoard3] != 
            2, $CellContext`gameOver2[$CellContext`startingBoard3] != True], 
           Grid[
            Outer[Checkbox[
              Dynamic[
               Part[$CellContext`startingBoard3, #, #2]], {0, 1}]& , 
             Range[3], 
             Range[3]]], "Game Over, figure out who won :)"]]]}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{82., {80.13403309800196, 85.86596690199804}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`startingBoard3 = {{0, 0, 0}, {0, 0, 0}, {0,
         0, 0}}, $CellContext`actualWinner[
         Pattern[$CellContext`list, 
          Blank[]]] := Which[$CellContext`winnerRCD[$CellContext`list] <= 3, 
         Part[$CellContext`list, 1, 
          $CellContext`winnerRCD[$CellContext`list]], \
$CellContext`winnerRCD[$CellContext`list] <= 6, 
         Part[$CellContext`list, 
          Floor[$CellContext`winnerRCD[$CellContext`list]/3], 
          1], $CellContext`winnerRCD[$CellContext`list] <= 8, 
         Part[$CellContext`list, 2, 2], True, 0], $CellContext`winnerRCD[
         Pattern[$CellContext`list, 
          Blank[]]] := First[
         First[
          Position[
           Flatten[{
             $CellContext`column[$CellContext`list], 
             $CellContext`row[$CellContext`list], 
             $CellContext`diagonal[$CellContext`list]}], True], {
          9}]], $CellContext`column[
         Pattern[$CellContext`list, 
          Blank[]]] := Table[
         Apply[Equal, 
          
          Part[$CellContext`list, 
           All, $CellContext`column]], {$CellContext`column, 1, 
          3}], $CellContext`row[
         Pattern[$CellContext`list, 
          Blank[]]] := Table[
         Apply[Equal, 
          Part[$CellContext`list, $CellContext`row, All]], {$CellContext`row, 
          1, 3}], $CellContext`diagonal[
         Pattern[$CellContext`list, 
          Blank[]]] := {
         Apply[Equal, {
           Part[$CellContext`list, 1, 1], 
           Part[$CellContext`list, 2, 2], 
           Part[$CellContext`list, 3, 3]}], 
         Apply[Equal, {
           Part[$CellContext`list, 1, 3], 
           Part[$CellContext`list, 2, 2], 
           Part[$CellContext`list, 3, 1]}]}, $CellContext`gameOver2[
         Pattern[$CellContext`tictactoe, 
          Blank[]]] := Not[
         MemberQ[
          Flatten[$CellContext`tictactoe], 0]]}; Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.848332774897545*^9, {3.848332807770137*^9, 3.848332831130821*^9}, 
   3.8484921000863667`*^9, {3.8484922023121476`*^9, 3.8484922047646255`*^9}, {
   3.8484925453062077`*^9, 3.8484925619971247`*^9}, {3.8484926237216043`*^9, 
   3.848492674312199*^9}, 3.848612530521877*^9, 3.8486140987177715`*^9, {
   3.8486175327764807`*^9, 3.8486175700890713`*^9}, {3.848689989612691*^9, 
   3.8486900011672697`*^9}, {3.848697847216061*^9, 3.848697848837605*^9}, {
   3.8486979165560093`*^9, 3.8486979192742453`*^9}, {3.848698035412941*^9, 
   3.848698037710207*^9}, {3.84869834855621*^9, 3.848698364711156*^9}, {
   3.848699385875167*^9, 3.848699403943928*^9}, {3.848699443883339*^9, 
   3.848699465760412*^9}, 3.852285232524742*^9},
 CellLabel->"Out[38]="],

Cell[BoxData[
 TagBox[GridBox[{
    {"0", "2", "2"},
    {"2", "0", "2"},
    {"0", "2", "0"}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.848332774897545*^9, {3.848332807770137*^9, 3.848332831130821*^9}, 
   3.8484921000863667`*^9, {3.8484922023121476`*^9, 3.8484922047646255`*^9}, {
   3.8484925453062077`*^9, 3.8484925619971247`*^9}, {3.8484926237216043`*^9, 
   3.848492674312199*^9}, 3.848612530521877*^9, 3.8486140987177715`*^9, {
   3.8486175327764807`*^9, 3.8486175700890713`*^9}, {3.848689989612691*^9, 
   3.8486900011672697`*^9}, {3.848697847216061*^9, 3.848697848837605*^9}, {
   3.8486979165560093`*^9, 3.8486979192742453`*^9}, {3.848698035412941*^9, 
   3.848698037710207*^9}, {3.84869834855621*^9, 3.848698364711156*^9}, {
   3.848699385875167*^9, 3.848699403943928*^9}, {3.848699443883339*^9, 
   3.848699465760412*^9}, 3.8522852575959015`*^9},
 CellLabel->"Out[39]="]
}, Open  ]],

Cell["This is with the AI as player 1, so you go second:", "Text",
 CellChangeTimes->{{3.8471432390528903`*^9, 3.847143245102776*^9}, {
  3.8483327613562717`*^9, 3.8483327648861313`*^9}},
 CellID->602890565],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"startingBoard4", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "3"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"with", " ", "dataset"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Manipulate", "[", 
   RowBox[{
    RowBox[{"Grid", "[", 
     RowBox[{"Take", "[", 
      RowBox[{"startingBoard4", ",", "3", ",", "3"}], "]"}], "]"}], ",", 
    RowBox[{"Dynamic", "[", 
     RowBox[{"Panel", "[", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"actualWinner", "[", "startingBoard4", "]"}], "\[NotEqual]",
           "1"}], " ", "&&", 
         RowBox[{
          RowBox[{"actualWinner", "[", "startingBoard4", "]"}], "\[NotEqual]",
           "2"}], "&&", 
         RowBox[{
          RowBox[{"gameOver2", "[", "startingBoard4", "]"}], "\[NotEqual]", 
          "True"}]}], ",", 
        RowBox[{"(", 
         RowBox[{"Grid", "[", 
          RowBox[{"Outer", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Checkbox", "[", 
              RowBox[{
               RowBox[{"Dynamic", "[", 
                RowBox[{"startingBoard4", "[", 
                 RowBox[{"[", 
                  RowBox[{"#1", ",", "#2"}], "]"}], "]"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "2"}], "}"}]}], "]"}], "&"}], ",", 
            RowBox[{"Range", "[", "3", "]"}], ",", 
            RowBox[{"Range", "[", "3", "]"}]}], "]"}], "]"}], ")"}], ",", 
        "\"\<Game Over, figure out who won :)\>\""}], "]"}], "]"}], "]"}], 
    ",", 
    RowBox[{"SaveDefinitions", "\[Rule]", "True"}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"actualWinner", "[", "startingBoard4", "]"}], "\[NotEqual]", 
        "1"}], "&&", 
       RowBox[{
        RowBox[{"actualWinner", "[", "startingBoard4", "]"}], "\[NotEqual]", 
        "2"}], "&&", 
       RowBox[{
        RowBox[{"gameOver2", "[", "startingBoard4", "]"}], "\[NotEqual]", 
        "True"}]}], ",", 
      RowBox[{
       RowBox[{"Pause", "[", "5", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "@", 
           RowBox[{"KeyTake", "[", 
            RowBox[{"trainingData1", ",", 
             RowBox[{"{", "startingBoard4", "}"}]}], "]"}]}], "\[NotEqual]", 
          "0"}], ",", 
         RowBox[{"startingBoard4", " ", "=", " ", 
          RowBox[{"RandomChoice", "@", 
           RowBox[{"Flatten", "[", 
            RowBox[{
             RowBox[{"Values", "@", 
              RowBox[{"KeyTake", "[", 
               RowBox[{"trainingData1", ",", 
                RowBox[{"{", "startingBoard4", "}"}]}], "]"}]}], ",", "2"}], 
            "]"}]}]}], " ", 
         RowBox[{"(*", 
          RowBox[{"using", " ", "dataset"}], "*)"}], ",", 
         RowBox[{"startingBoard4", "=", 
          RowBox[{"simulate1Move", "[", 
           RowBox[{"startingBoard4", ",", 
            RowBox[{"playturnPosition", "[", "startingBoard4", "]"}], ",", 
            "1"}], "]"}]}]}], "]"}]}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "5"}], "}"}]}], "]"}], ";", 
  RowBox[{"Grid", "@", "startingBoard2"}]}]}], "Input",
 CellChangeTimes->{{3.8457387202336264`*^9, 3.8457387246539497`*^9}, {
   3.845738758056986*^9, 3.8457388791317525`*^9}, {3.845739023338761*^9, 
   3.8457390291371317`*^9}, {3.8457533565127387`*^9, 3.845753357558153*^9}, {
   3.8462487209181123`*^9, 3.846248722883749*^9}, {3.8462491049736586`*^9, 
   3.8462491056124086`*^9}, 3.846249149314672*^9, {3.846365576156231*^9, 
   3.8463655804357433`*^9}, {3.846365686056856*^9, 3.846365691646737*^9}, {
   3.84651766060312*^9, 3.846517661949607*^9}, {3.8471433127630973`*^9, 
   3.847143341375712*^9}, {3.848492683816718*^9, 3.848492685309415*^9}, {
   3.848492768116723*^9, 3.8484927697580595`*^9}, {3.848698054683559*^9, 
   3.848698074579485*^9}, {3.848699496951722*^9, 3.84869949698241*^9}, {
   3.8522844507822833`*^9, 3.852284457073783*^9}},
 CellLabel->"In[40]:=",
 CellID->364543504],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[
       Dynamic[
        Panel[
         If[
          
          And[$CellContext`actualWinner[$CellContext`startingBoard4] != 
           1, $CellContext`actualWinner[$CellContext`startingBoard4] != 
           2, $CellContext`gameOver2[$CellContext`startingBoard4] != True], 
          Grid[
           Outer[Checkbox[
             Dynamic[
              Part[$CellContext`startingBoard4, #, #2]], {0, 2}]& , 
            Range[3], 
            Range[3]]], "Game Over, figure out who won :)"]]]], 
      Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = {
    32., {20.334033098001964`, 26.065966901998035`}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {}, "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Grid[
        Take[$CellContext`startingBoard4, 3, 3]], "Specifications" :> {
        Dynamic[
         Panel[
          If[
           
           And[$CellContext`actualWinner[$CellContext`startingBoard4] != 
            1, $CellContext`actualWinner[$CellContext`startingBoard4] != 
            2, $CellContext`gameOver2[$CellContext`startingBoard4] != True], 
           Grid[
            Outer[Checkbox[
              Dynamic[
               Part[$CellContext`startingBoard4, #, #2]], {0, 2}]& , 
             Range[3], 
             Range[3]]], "Game Over, figure out who won :)"]]]}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{82., {80.13403309800196, 85.86596690199804}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`startingBoard4 = {{0, 0, 0}, {0, 0, 0}, {0,
         0, 0}}, $CellContext`actualWinner[
         Pattern[$CellContext`list, 
          Blank[]]] := Which[$CellContext`winnerRCD[$CellContext`list] <= 3, 
         Part[$CellContext`list, 1, 
          $CellContext`winnerRCD[$CellContext`list]], \
$CellContext`winnerRCD[$CellContext`list] <= 6, 
         Part[$CellContext`list, 
          Floor[$CellContext`winnerRCD[$CellContext`list]/3], 
          1], $CellContext`winnerRCD[$CellContext`list] <= 8, 
         Part[$CellContext`list, 2, 2], True, 0], $CellContext`winnerRCD[
         Pattern[$CellContext`list, 
          Blank[]]] := First[
         First[
          Position[
           Flatten[{
             $CellContext`column[$CellContext`list], 
             $CellContext`row[$CellContext`list], 
             $CellContext`diagonal[$CellContext`list]}], True], {
          9}]], $CellContext`column[
         Pattern[$CellContext`list, 
          Blank[]]] := Table[
         Apply[Equal, 
          
          Part[$CellContext`list, 
           All, $CellContext`column]], {$CellContext`column, 1, 
          3}], $CellContext`row[
         Pattern[$CellContext`list, 
          Blank[]]] := Table[
         Apply[Equal, 
          Part[$CellContext`list, $CellContext`row, All]], {$CellContext`row, 
          1, 3}], $CellContext`diagonal[
         Pattern[$CellContext`list, 
          Blank[]]] := {
         Apply[Equal, {
           Part[$CellContext`list, 1, 1], 
           Part[$CellContext`list, 2, 2], 
           Part[$CellContext`list, 3, 3]}], 
         Apply[Equal, {
           Part[$CellContext`list, 1, 3], 
           Part[$CellContext`list, 2, 2], 
           Part[$CellContext`list, 3, 1]}]}, $CellContext`gameOver2[
         Pattern[$CellContext`tictactoe, 
          Blank[]]] := Not[
         MemberQ[
          Flatten[$CellContext`tictactoe], 0]]}; Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.848332780113096*^9, 3.848332845072197*^9, 3.848492105294035*^9, {
   3.84849279702431*^9, 3.8484928150168657`*^9}, {3.848495388552557*^9, 
   3.8484954133504033`*^9}, 3.8486125506669025`*^9, 3.8486141187953157`*^9, {
   3.848690011424479*^9, 3.848690027778146*^9}, {3.848698372300591*^9, 
   3.848698387984439*^9}, {3.8486994981372423`*^9, 3.848699521440336*^9}, 
   3.8522852576457396`*^9},
 CellLabel->"Out[41]="],

Cell[BoxData[
 TagBox[GridBox[{
    {"0", "0", "2"},
    {"2", "0", "2"},
    {"0", "2", "2"}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.848332780113096*^9, 3.848332845072197*^9, 3.848492105294035*^9, {
   3.84849279702431*^9, 3.8484928150168657`*^9}, {3.848495388552557*^9, 
   3.8484954133504033`*^9}, 3.8486125506669025`*^9, 3.8486141187953157`*^9, {
   3.848690011424479*^9, 3.848690027778146*^9}, {3.848698372300591*^9, 
   3.848698387984439*^9}, {3.8486994981372423`*^9, 3.848699521440336*^9}, 
   3.8522852826952033`*^9},
 CellLabel->"Out[42]="]
}, Open  ]],

Cell["The manipulate is fantastic!!! Enjoy playing tic-tac-toe.", "Text",
 CellChangeTimes->{{3.847143369742354*^9, 3.8471434099248486`*^9}, {
  3.847143525584423*^9, 3.847143541028473*^9}, {3.848332859638854*^9, 
  3.848332887184668*^9}},
 CellID->1454869],

Cell["\<\
Note that the manipulate works a lot better with 120,000 random training \
games, rather than 30,000 games.\
\>", "Text",
 CellChangeTimes->{3.84833288973239*^9},
 CellID->1053247246]
}, Open  ]],

Cell[CellGroupData[{

Cell["2048: Building an AI", "Section",
 CellChangeTimes->{{3.8479030526550875`*^9, 3.8479030554319925`*^9}, {
  3.848333897084662*^9, 3.848333916746525*^9}},
 CellID->547084083],

Cell["\<\
2048 is a popular game, where the the goal is to add powers of 2 on a 4 by 4 \
grid. The human wins when the sum of one square reaches 2048.\
\>", "Text",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBmIQfc5W6UfN6jeOVhIu/0B0xt6uXQuB9DGVpqMg2sOA
+SyI/hgYeAtEr9pyZd9yIF3h43AGRG+Ts70EoiWWbb4MonmZbG+A6BXm6Z9A
dPuLL99BdIvY498gOv7Znv8g+p5jC8sKIH2Az4gTRPtwp/KB6OtmDWIg+tH3
IkUQfaZxrROYv/YymJ7T+9V2JZBu6zawA9HzXtUvPgSkjxSybQTRy+4n7AHR
3RuM9oLoBRP7DoFoH8n5YHoB24MrIFrs7LrbIDrCJfOczJo3jvyz14Jpr79S
vNlAOizQgR9ET9rTdf08kP5waOsNEA0Ae8Cv8A==
  "],
 CellID->561895008],

Cell["\<\
2048 and tic-tac-toe are massively different games, especially when it comes \
to the composition of the game:
2048 is a single player game, whereas tic-tac-toe is a two player game. Due \
to this, we could not take the adversarial pair approach. 2048 has many, many \
more possible board combinations. Tic-tac-toe has a 3 by 3 grid, with each \
slot either being and X, O, or empty. 2048 is a 4 by 4 board, with each slot \
being a 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048, or empty. This means \
that the board reference strategy would also be ineffective, and would \
ultimately be more difficult to build an AI around.\
\>", "Text",
 CellChangeTimes->{{3.848699591863475*^9, 3.848699596693962*^9}},
 CellID->754217914],

Cell["\<\
The overall strategy was to first construct the game, and then generate a \
large set of random games to train a random forest model on. Then we compared \
statistics between the datasets. \
\>", "Text",
 CellChangeTimes->{{3.8486995987291603`*^9, 3.8486996001749773`*^9}},
 CellID->1371255406],

Cell[CellGroupData[{

Cell["Setting up the Game", "Subsection",
 CellChangeTimes->{{3.847903059788821*^9, 3.8479030637589183`*^9}},
 CellID->114696474],

Cell["\<\
Similarly to how we built a model for tic-tac-toe, the first step in testing \
AI on 2048 is building the game. In the game, zeros represent empty spaces, \
and all other numbers are self-explanatory blocks on the board.\
\>", "Text",
 CellChangeTimes->{{3.8479030717343445`*^9, 3.8479032506275043`*^9}, {
  3.8480962980440416`*^9, 3.848096310271143*^9}, {3.848148393916914*^9, 
  3.8481483968878407`*^9}, {3.8481485237136717`*^9, 3.8481485286539593`*^9}},
 CellID->132952791],

Cell["\<\
A simple function to build a starting board by making a 4 by 4 table, and \
populating it with the random starting numbers in random positions\[LongDash] \
the goal is to produce a different board each time:\
\>", "CodeText",
 CellChangeTimes->{{3.847903299513452*^9, 3.8479033690952816`*^9}, {
   3.848093975056702*^9, 3.84809400336833*^9}, 3.8480952149851465`*^9, {
   3.84814853147598*^9, 3.8481485508145213`*^9}, {3.8483329406192083`*^9, 
   3.8483329451406384`*^9}},
 CellID->9243925],

Cell[BoxData[
 RowBox[{
  RowBox[{"InitializeBoard", "[", "]"}], " ", ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"idx1", ",", "idx2", ",", "val", ",", "boardlocal"}], "}"}], ",", 
    RowBox[{
     RowBox[{"boardlocal", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", "4"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Do", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"idx1", "=", 
         RowBox[{"RandomInteger", "[", 
          RowBox[{"{", 
           RowBox[{"1", ",", "4"}], "}"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"idx2", "=", 
         RowBox[{"RandomInteger", "[", 
          RowBox[{"{", 
           RowBox[{"1", ",", "4"}], "}"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"RandomReal", "[", "]"}], "<", "0.9"}], ",", " ", 
          RowBox[{"val", " ", "=", " ", "2"}], ",", " ", 
          RowBox[{"val", "=", "4"}]}], "]"}], ";", "\[IndentingNewLine]", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"boardlocal", "[", 
           RowBox[{"[", "idx1", "]"}], "]"}], "[", 
          RowBox[{"[", "idx2", "]"}], "]"}], "=", "val"}]}], ",", "2"}], 
      "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "boardlocal", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Code",
 CellChangeTimes->{3.847903381953949*^9},
 CellLabel->"In[34]:=",
 CellID->82561856],

Cell["\<\
The next step is to build the functionality of the game. This means writing a \
function for each of the 4 possible moves (up, down, left, and right), one to \
check if the game is over, and a driver to combine all of them to play a \
game. \
\>", "Text",
 CellChangeTimes->{{3.847903414291993*^9, 3.8479034872778254`*^9}, {
  3.8480963283573413`*^9, 3.848096335174198*^9}, {3.8481486302947807`*^9, 
  3.8481486354196224`*^9}},
 CellID->594618377],

Cell["\<\
The first 2 move functions operate similarly, systematically checking for any \
possible moves or combinations in the desired direction of moving left or \
right: \
\>", "CodeText",
 CellChangeTimes->{{3.8479035401107674`*^9, 3.8479035989933443`*^9}, {
  3.848148726733102*^9, 3.8481487409935255`*^9}, {3.848332952378482*^9, 
  3.84833295348847*^9}},
 CellID->77745233],

Cell[BoxData[
 RowBox[{
  RowBox[{"MoveRight", "[", "board_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"boardlocal", "=", "board"}], ",", "poszeros", ",", "posswap", 
      ",", "posmerge", ",", "val"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Do", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Do", "[", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"boardlocal", "[", 
              RowBox[{"[", "row", "]"}], "]"}], "[", 
             RowBox[{"[", "pos", "]"}], "]"}], "\[NotEqual]", " ", "0"}], ",",
            "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"poszeros", "=", 
             RowBox[{"Flatten", "[", 
              RowBox[{
               RowBox[{"Position", "[", 
                RowBox[{
                 RowBox[{"boardlocal", "[", 
                  RowBox[{"[", "row", "]"}], "]"}], ",", "0"}], "]"}], ",", 
               "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"posswap", "=", 
             RowBox[{"Max", "[", 
              RowBox[{"Select", "[", 
               RowBox[{"poszeros", ",", 
                RowBox[{
                 RowBox[{"#", ">", "pos"}], "&"}]}], "]"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"posswap", ">", "0"}], "&&", 
               RowBox[{"posswap", "<", "Infinity"}]}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"boardlocal", "[", 
                  RowBox[{"[", "row", "]"}], "]"}], "[", 
                 RowBox[{"[", "posswap", "]"}], "]"}], "=", 
                RowBox[{
                 RowBox[{"boardlocal", "[", 
                  RowBox[{"[", "row", "]"}], "]"}], "[", 
                 RowBox[{"[", "pos", "]"}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"boardlocal", "[", 
                  RowBox[{"[", "row", "]"}], "]"}], "[", 
                 RowBox[{"[", "pos", "]"}], "]"}], "=", "0"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"posmerge", "=", "posswap"}]}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"posmerge", "=", "pos"}]}], "\[IndentingNewLine]", 
             "]"}], ";", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"posmerge", "<", "4"}], ",", "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"boardlocal", "[", 
                   RowBox[{"[", "row", "]"}], "]"}], "[", 
                  RowBox[{"[", "posmerge", "]"}], "]"}], "\[Equal]", 
                 RowBox[{
                  RowBox[{"boardlocal", "[", 
                   RowBox[{"[", "row", "]"}], "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{"posmerge", "+", "1"}], "]"}], "]"}]}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"boardlocal", "[", 
                    RowBox[{"[", "row", "]"}], "]"}], "[", 
                   RowBox[{"[", 
                    RowBox[{"posmerge", "+", "1"}], "]"}], "]"}], "=", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"boardlocal", "[", 
                    RowBox[{"[", "row", "]"}], "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"posmerge", "+", "1"}], "]"}], "]"}], "*", 
                   "2"}]}], ";", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"boardlocal", "[", 
                    RowBox[{"[", "row", "]"}], "]"}], "[", 
                   RowBox[{"[", "posmerge", "]"}], "]"}], "=", "0"}], ";"}]}],
                "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
             "]"}]}]}], "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
         ",", 
         RowBox[{"{", 
          RowBox[{"pos", ",", 
           RowBox[{"{", 
            RowBox[{"3", ",", "2", ",", "1"}], "}"}]}], "}"}]}], "]"}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"row", ",", "4"}], "}"}]}], "\[IndentingNewLine]", "]"}], ";",
      "\[IndentingNewLine]", 
     RowBox[{"poszeros", "=", 
      RowBox[{"Position", "[", 
       RowBox[{"boardlocal", ",", "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
     
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "poszeros", "]"}], ">", "0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"posswap", "=", 
         RowBox[{"poszeros", "[", 
          RowBox[{"[", 
           RowBox[{"RandomInteger", "[", 
            RowBox[{"{", 
             RowBox[{"1", ",", 
              RowBox[{"Length", "[", "poszeros", "]"}]}], "}"}], "]"}], "]"}],
           "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"RandomReal", "[", "]"}], "<", "0.9"}], ",", " ", 
          RowBox[{"val", " ", "=", " ", "2"}], ",", " ", 
          RowBox[{"val", "=", "4"}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"boardlocal", "[", 
           RowBox[{"[", 
            RowBox[{"posswap", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"posswap", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "]"}], "]"}], "=", "val"}], 
        ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "boardlocal", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Code",
 CellChangeTimes->{3.847903381953949*^9, 3.8479036149322977`*^9},
 CellLabel->"In[35]:=",
 CellID->486400159],

Cell[BoxData[
 RowBox[{
  RowBox[{"MoveLeft", "[", "board_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"boardlocal", "=", "board"}], ",", "poszeros", ",", "posswap", 
      ",", "posmerge", ",", "val"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Do", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Do", "[", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"boardlocal", "[", 
              RowBox[{"[", "row", "]"}], "]"}], "[", 
             RowBox[{"[", "pos", "]"}], "]"}], "\[NotEqual]", " ", "0"}], ",",
            "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"poszeros", "=", 
             RowBox[{"Flatten", "[", 
              RowBox[{
               RowBox[{"Position", "[", 
                RowBox[{
                 RowBox[{"boardlocal", "[", 
                  RowBox[{"[", "row", "]"}], "]"}], ",", "0"}], "]"}], ",", 
               "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"posswap", "=", 
             RowBox[{"Min", "[", 
              RowBox[{"Select", "[", 
               RowBox[{"poszeros", ",", 
                RowBox[{
                 RowBox[{"#", "<", "pos"}], "&"}]}], "]"}], "]"}]}], ";", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"posswap", ">", "0"}], "&&", 
               RowBox[{"posswap", "<", "Infinity"}]}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"boardlocal", "[", 
                  RowBox[{"[", "row", "]"}], "]"}], "[", 
                 RowBox[{"[", "posswap", "]"}], "]"}], "=", 
                RowBox[{
                 RowBox[{"boardlocal", "[", 
                  RowBox[{"[", "row", "]"}], "]"}], "[", 
                 RowBox[{"[", "pos", "]"}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"boardlocal", "[", 
                  RowBox[{"[", "row", "]"}], "]"}], "[", 
                 RowBox[{"[", "pos", "]"}], "]"}], "=", "0"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"posmerge", "=", "posswap"}]}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"posmerge", "=", "pos"}]}], "\[IndentingNewLine]", 
             "]"}], ";", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"posmerge", ">", "1"}], ",", "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"boardlocal", "[", 
                   RowBox[{"[", "row", "]"}], "]"}], "[", 
                  RowBox[{"[", "posmerge", "]"}], "]"}], "\[Equal]", 
                 RowBox[{
                  RowBox[{"boardlocal", "[", 
                   RowBox[{"[", "row", "]"}], "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{"posmerge", "-", "1"}], "]"}], "]"}]}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"boardlocal", "[", 
                    RowBox[{"[", "row", "]"}], "]"}], "[", 
                   RowBox[{"[", 
                    RowBox[{"posmerge", "-", "1"}], "]"}], "]"}], "=", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"boardlocal", "[", 
                    RowBox[{"[", "row", "]"}], "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"posmerge", "-", "1"}], "]"}], "]"}], "*", 
                   "2"}]}], ";", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"boardlocal", "[", 
                    RowBox[{"[", "row", "]"}], "]"}], "[", 
                   RowBox[{"[", "posmerge", "]"}], "]"}], "=", "0"}], ";"}]}],
                "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
             "]"}]}]}], "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
         ",", 
         RowBox[{"{", 
          RowBox[{"pos", ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", "3", ",", "4"}], "}"}]}], "}"}]}], "]"}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"row", ",", "4"}], "}"}]}], "\[IndentingNewLine]", "]"}], ";",
      "\[IndentingNewLine]", 
     RowBox[{"poszeros", "=", 
      RowBox[{"Position", "[", 
       RowBox[{"boardlocal", ",", "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
     
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "poszeros", "]"}], ">", "0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"posswap", "=", 
         RowBox[{"poszeros", "[", 
          RowBox[{"[", 
           RowBox[{"RandomInteger", "[", 
            RowBox[{"{", 
             RowBox[{"1", ",", 
              RowBox[{"Length", "[", "poszeros", "]"}]}], "}"}], "]"}], "]"}],
           "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"RandomReal", "[", "]"}], "<", "0.9"}], ",", " ", 
          RowBox[{"val", " ", "=", " ", "2"}], ",", " ", 
          RowBox[{"val", "=", "4"}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"boardlocal", "[", 
           RowBox[{"[", 
            RowBox[{"posswap", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"posswap", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "]"}], "]"}], "=", "val"}], 
        ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "boardlocal", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Code",
 CellChangeTimes->{3.847903381953949*^9, 3.847903634685708*^9},
 CellLabel->"In[36]:=",
 CellID->453962415],

Cell["\<\
The next two possible moves, up and down, are a lot simpler\[LongDash] the \
board is simply transposed:\
\>", "CodeText",
 CellChangeTimes->{{3.847903651542356*^9, 3.8479037076932836`*^9}, 
   3.8480952207873*^9, {3.8480963527373424`*^9, 3.8480963535950317`*^9}, {
   3.8481485878257356`*^9, 3.8481486027796183`*^9}, {3.848148751430006*^9, 
   3.848148809955165*^9}, {3.848332961957548*^9, 3.848332966538228*^9}},
 CellID->209635958],

Cell[BoxData[
 RowBox[{
  RowBox[{"MoveUp", "[", "board_", "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "boardlocal", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"boardlocal", "=", 
      RowBox[{"Transpose", "[", 
       RowBox[{"MoveLeft", "[", 
        RowBox[{"Transpose", "[", "board", "]"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "boardlocal", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Code",
 CellChangeTimes->{3.847903381953949*^9, 3.8479037465956764`*^9},
 CellLabel->"In[37]:=",
 CellID->20332529],

Cell[BoxData[
 RowBox[{
  RowBox[{"MoveDown", "[", "board_", "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "boardlocal", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"boardlocal", "=", 
      RowBox[{"Transpose", "[", 
       RowBox[{"MoveRight", "[", 
        RowBox[{"Transpose", "[", "board", "]"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "boardlocal", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Code",
 CellChangeTimes->{
  3.847903381953949*^9, {3.8479037465956764`*^9, 3.847903760026261*^9}},
 CellLabel->"In[38]:=",
 CellID->64395571],

Cell["\<\
The game end check just looks to see if there are either no available merges \
or moves, or if the goal of 2048 has been achieved, and returns a \
corresponding True or False:\
\>", "CodeText",
 CellChangeTimes->{{3.847903774758916*^9, 3.8479038233229265`*^9}, {
  3.8479038614129143`*^9, 3.8479038838830075`*^9}, {3.848332974546184*^9, 
  3.848332974944894*^9}},
 CellID->1322850],

Cell[BoxData[
 RowBox[{
  RowBox[{"GameEndCheck", "[", "board_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "zeros", ",", "movefound", ",", "transposedboard", ",", "objective", ",",
       "objectivefound"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"zeros", "=", 
      RowBox[{"Position", "[", 
       RowBox[{"board", ",", "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"objective", "=", 
      RowBox[{"Position", "[", 
       RowBox[{"board", ",", "2048"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"transposedboard", "=", 
      RowBox[{"Transpose", "[", "board", "]"}]}], ";", "\[IndentingNewLine]", 
     
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "zeros", "]"}], ">", "0"}], ",", 
       RowBox[{"movefound", "=", "True"}], ",", 
       RowBox[{"movefound", "=", "False"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "objective", "]"}], ">", "0"}], ",", 
       RowBox[{"Return", "[", "True", "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"movefound", "==", "False"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Do", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Do", "[", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"board", "[", 
                  RowBox[{"[", "row", "]"}], "]"}], "[", 
                 RowBox[{"[", "pos", "]"}], "]"}], "==", 
                RowBox[{
                 RowBox[{"board", "[", 
                  RowBox[{"[", "row", "]"}], "]"}], "[", 
                 RowBox[{"[", 
                  RowBox[{"pos", "-", "1"}], "]"}], "]"}]}], "||", 
               RowBox[{
                RowBox[{
                 RowBox[{"board", "[", 
                  RowBox[{"[", "row", "]"}], "]"}], "[", 
                 RowBox[{"[", "pos", "]"}], "]"}], "==", 
                RowBox[{
                 RowBox[{"board", "[", 
                  RowBox[{"[", "row", "]"}], "]"}], "[", 
                 RowBox[{"[", 
                  RowBox[{"pos", "+", "1"}], "]"}], "]"}]}]}], ",", 
              RowBox[{"movefound", "=", "True"}]}], "]"}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{"{", 
             RowBox[{"pos", ",", 
              RowBox[{"{", 
               RowBox[{"2", ",", "3"}], "}"}]}], "}"}]}], 
           "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{"row", ",", "4"}], "}"}]}], "\[IndentingNewLine]", "]"}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"Do", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Do", "[", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"transposedboard", "[", 
                  RowBox[{"[", "row", "]"}], "]"}], "[", 
                 RowBox[{"[", "pos", "]"}], "]"}], "==", 
                RowBox[{
                 RowBox[{"transposedboard", "[", 
                  RowBox[{"[", "row", "]"}], "]"}], "[", 
                 RowBox[{"[", 
                  RowBox[{"pos", "-", "1"}], "]"}], "]"}]}], "||", 
               RowBox[{
                RowBox[{
                 RowBox[{"transposedboard", "[", 
                  RowBox[{"[", "row", "]"}], "]"}], "[", 
                 RowBox[{"[", "pos", "]"}], "]"}], "==", 
                RowBox[{
                 RowBox[{"transposedboard", "[", 
                  RowBox[{"[", "row", "]"}], "]"}], "[", 
                 RowBox[{"[", 
                  RowBox[{"pos", "+", "1"}], "]"}], "]"}]}]}], ",", 
              RowBox[{"movefound", "=", "True"}]}], "]"}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{"{", 
             RowBox[{"pos", ",", 
              RowBox[{"{", 
               RowBox[{"2", ",", "3"}], "}"}]}], "}"}]}], 
           "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{"row", ",", "4"}], "}"}]}], "\[IndentingNewLine]", "]"}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"Break", "[", "]"}]}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"movefound", "==", "False"}], ",", 
       RowBox[{"Return", "[", "True", "]"}], ",", 
       RowBox[{"Return", "[", "False", "]"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Code",
 CellChangeTimes->{
  3.847903381953949*^9, {3.8479037465956764`*^9, 3.847903760026261*^9}, 
   3.847903859318093*^9},
 CellLabel->"In[39]:=",
 CellID->116558480],

Cell["\<\
The game driver went through several iterations over the course of this \
project. The first implementation used a user interface to allow a human to \
play a game in the notebook, and was used for debugging the game code. The \
second version made random moves until the game was over (either succeeded or \
no possible moves remained), and was used to generate a large dataset of \
games. The final version used a trained ML model (through the Predict \
function) to decide the next move. While testing this last one, we ran into a \
problem: occasionally the model would select a move that doesn\
\[CloseCurlyQuote]t end up changing the board, resulting in an endless loop. \
To fix this, we implemented a simple detection statement to see if the board \
has changed in the past couple moves, and if it has not changed, it uses a \
random move instead of the move predicted by the model. \
\>", "Text",
 CellChangeTimes->{{3.8479039364848337`*^9, 3.8479040288753796`*^9}, {
   3.8479040681944*^9, 3.847904108312846*^9}, {3.847904182979175*^9, 
   3.84790421915438*^9}, 3.847904270665247*^9, {3.8480940178338146`*^9, 
   3.848094209383277*^9}, {3.848096372974185*^9, 3.848096477888389*^9}, {
   3.8481488362088513`*^9, 3.8481488455622005`*^9}, {3.8481489097459936`*^9, 
   3.8481489354342937`*^9}, {3.848332985799842*^9, 3.848333019663007*^9}},
 CellID->642665709],

Cell["Model 1\[LongDash] a user interface to debug the game code:", "CodeText",
 CellChangeTimes->{{3.8483330430963593`*^9, 3.848333054357421*^9}},
 CellID->1055149887],

Cell[BoxData[
 RowBox[{
  RowBox[{"RunGame", "[", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"board", ",", "movelist", ",", 
      RowBox[{"gameover", "=", "False"}], ",", "move", ",", "checkend"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"board", "=", 
      RowBox[{"InitializeBoard", "[", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"TableForm", "[", "board", "]"}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"gameover", "==", "False"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"move", "=", 
         RowBox[{
         "InputString", "[", "\"\<Move: L, R, U, D, or Q\>\"", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"move", "==", "\"\<L\>\""}], ",", 
          RowBox[{"board", "=", 
           RowBox[{"MoveLeft", "[", "board", "]"}]}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"move", "==", "\"\<R\>\""}], ",", 
          RowBox[{"board", "=", 
           RowBox[{"MoveRight", "[", "board", "]"}]}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"move", "==", "\"\<U\>\""}], ",", 
          RowBox[{"board", "=", 
           RowBox[{"MoveUp", "[", "board", "]"}]}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"move", "==", "\"\<D\>\""}], ",", 
          RowBox[{"board", "=", 
           RowBox[{"MoveDown", "[", "board", "]"}]}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"move", "==", "\"\<Q\>\""}], ",", 
          RowBox[{"gameover", "=", "True"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Print", "[", 
         RowBox[{"TableForm", "[", "board", "]"}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"checkend", "=", 
         RowBox[{"GameEndCheck", "[", "board", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"checkend", "!=", "0"}], ",", 
          RowBox[{"gameover", "=", "True"}]}], "]"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"checkend", "==", "2"}], ",", 
       RowBox[{"Print", "[", "\"\<success\>\"", "]"}], ",", 
       RowBox[{"Print", "[", "\"\<fail\>\"", "]"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}]], "Code",
 CellChangeTimes->{
  3.847903381953949*^9, {3.8479037465956764`*^9, 3.847903760026261*^9}, 
   3.8479042939452744`*^9},
 CellLabel->"In[40]:=",
 CellID->536374213],

Cell["Model 2\[LongDash] running random games to create a large dataset:", \
"CodeText",
 CellChangeTimes->{{3.848333057218528*^9, 3.848333073484009*^9}},
 CellID->683037422],

Cell[BoxData[
 RowBox[{
  RowBox[{"RunRandomGame", "[", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"board", ",", "movelist", ",", 
      RowBox[{"gameover", "=", "False"}], ",", "move", ",", "checkend"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"board", "=", 
      RowBox[{"InitializeBoard", "[", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"movelist", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"gameover", "==", "False"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"move", "=", 
         RowBox[{"RandomInteger", "[", 
          RowBox[{"{", 
           RowBox[{"1", ",", "4"}], "}"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"movelist", ",", 
          RowBox[{"{", 
           RowBox[{"board", ",", "move"}], "}"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"move", "==", "1"}], ",", 
          RowBox[{"board", "=", 
           RowBox[{"MoveLeft", "[", "board", "]"}]}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"move", "==", "2"}], ",", 
          RowBox[{"board", "=", 
           RowBox[{"MoveRight", "[", "board", "]"}]}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"move", "==", "3"}], ",", 
          RowBox[{"board", "=", 
           RowBox[{"MoveUp", "[", "board", "]"}]}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"move", "==", "4"}], ",", 
          RowBox[{"board", "=", 
           RowBox[{"MoveDown", "[", "board", "]"}]}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"move", "==", "\"\<Q\>\""}], ",", 
          RowBox[{"gameover", "=", "True"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"checkend", "=", 
         RowBox[{"GameEndCheck", "[", "board", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"checkend", "!=", "0"}], ",", 
          RowBox[{"gameover", "=", "True"}]}], "]"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"checkend", "==", "2"}], ",", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"movelist", ",", "\"\<success\>\""}], "]"}], ",", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"movelist", ",", "\"\<fail\>\""}], "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "movelist", "]"}]}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "]"}]}]], "Code",
 CellChangeTimes->{
  3.847903381953949*^9, {3.8479037465956764`*^9, 3.847903760026261*^9}, {
   3.8479042939452744`*^9, 3.847904319022188*^9}},
 CellLabel->"In[41]:=",
 CellID->129554515],

Cell["Model 3\[LongDash] a trained ML model to decide the next move:", \
"CodeText",
 CellChangeTimes->{{3.8483330769988813`*^9, 3.848333094582711*^9}},
 CellID->160813878],

Cell[BoxData[
 RowBox[{
  RowBox[{"RunModelGame", "[", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"board", ",", "movelist", ",", 
      RowBox[{"gameover", "=", "False"}], ",", "move", ",", "checkend"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"board", "=", 
      RowBox[{"InitializeBoard", "[", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"movelist", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"gameover", "==", "False"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"move", "=", 
         RowBox[{"PredictBestMove", "[", "board", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "movelist", "]"}], ">", "0"}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{"board", ",", "move"}], "}"}], "==", 
             RowBox[{"movelist", "[", 
              RowBox[{"[", 
               RowBox[{"-", "1"}], "]"}], "]"}]}], ",", 
            RowBox[{"move", "=", 
             RowBox[{"RandomInteger", "[", 
              RowBox[{"{", 
               RowBox[{"1", ",", "4"}], "}"}], "]"}]}]}], "]"}]}], "]"}], ";",
         "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"movelist", ",", 
          RowBox[{"{", 
           RowBox[{"board", ",", "move"}], "}"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"move", "==", "1"}], ",", 
          RowBox[{"board", "=", 
           RowBox[{"MoveLeft", "[", "board", "]"}]}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"move", "==", "2"}], ",", 
          RowBox[{"board", "=", 
           RowBox[{"MoveRight", "[", "board", "]"}]}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"move", "==", "3"}], ",", 
          RowBox[{"board", "=", 
           RowBox[{"MoveUp", "[", "board", "]"}]}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"move", "==", "4"}], ",", 
          RowBox[{"board", "=", 
           RowBox[{"MoveDown", "[", "board", "]"}]}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", 
            RowBox[{"Position", "[", 
             RowBox[{"board", ",", "0"}], "]"}], "]"}], "==", "0"}], ",", 
          RowBox[{"gameover", "=", 
           RowBox[{"GameEndCheck", "[", "board", "]"}]}], ",", 
          RowBox[{"gameover", "=", "False"}]}], "]"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"checkend", "==", "2"}], ",", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"movelist", ",", "\"\<success\>\""}], "]"}], ",", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"movelist", ",", "\"\<fail\>\""}], "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "movelist", "]"}]}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "]"}]}]], "Code",
 CellChangeTimes->{
  3.847903381953949*^9, {3.8479037465956764`*^9, 3.847903760026261*^9}, {
   3.8479042939452744`*^9, 3.847904319022188*^9}, 3.847904531340433*^9},
 CellLabel->"In[42]:=",
 CellID->755470916]
}, Open  ]],

Cell[CellGroupData[{

Cell["Gathering Data and Building a Model", "Subsection",
 CellChangeTimes->{{3.847903059788821*^9, 3.8479030637589183`*^9}, {
  3.847904559876774*^9, 3.8479045703112893`*^9}, {3.848333928917088*^9, 
  3.848333933186343*^9}},
 CellID->125483006],

Cell["\<\
The next step in the process was building a large enough dataset of random \
games to train a predict function on. We ran 70,000 games overnight, which \
seemed like a large enough dataset.\
\>", "Text",
 CellChangeTimes->{{3.8479046402247314`*^9, 3.847904690772851*^9}, {
   3.8479047480736575`*^9, 3.847904750024081*^9}, {3.8480942806076794`*^9, 
   3.848094318515046*^9}, 3.8480965189089503`*^9, {3.848333103925235*^9, 
   3.8483331113744717`*^9}, {3.8484932361256323`*^9, 3.848493239730507*^9}, {
   3.8486996478979597`*^9, 3.848699658304193*^9}},
 CellID->36454207],

Cell["\<\
The first step was to compose a function to play a number of games and save \
that to a variable:\
\>", "CodeText",
 CellChangeTimes->{{3.8479047781813135`*^9, 3.847904840830691*^9}, {
  3.84833311591115*^9, 3.848333116735181*^9}, {3.848699662491496*^9, 
  3.8486996656229677`*^9}},
 CellID->18620316],

Cell[BoxData[
 RowBox[{
  RowBox[{"PlayXGames", "[", "games_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "dataset", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"dataset", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{"AppendTo", "[", 
        RowBox[{"dataset", ",", 
         RowBox[{"RunRandomGame", "[", "]"}]}], "]"}], ",", "games"}], "]"}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "dataset", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Code",
 CellChangeTimes->{
  3.847903381953949*^9, {3.8479037465956764`*^9, 3.847903760026261*^9}, {
   3.8479042939452744`*^9, 3.847904319022188*^9}, 3.847904531340433*^9, 
   3.8479048635695534`*^9, 3.848690101488133*^9},
 CellLabel->"In[43]:=",
 CellID->376335899],

Cell[BoxData[
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"PlayXGames", "[", "70000", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8462807095374546`*^9, 3.846280742670822*^9}, {
   3.8462810052387323`*^9, 3.8462810441749954`*^9}, {3.8479052059326553`*^9, 
   3.8479052067577744`*^9}, {3.8484934337578235`*^9, 3.848493436805439*^9}, {
   3.8484941599450045`*^9, 3.8484941648348093`*^9}, {3.8486928369442244`*^9, 
   3.848692838989802*^9}, 3.848696894133882*^9, {3.8486969324951143`*^9, 
   3.8486969325416107`*^9}},
 CellID->11879177],

Cell["We exported this to make it easier to save and work with.", "Text",
 CellChangeTimes->{{3.8479049777547283`*^9, 3.847905006078143*^9}, {
  3.8481490693988123`*^9, 3.848149077379132*^9}},
 CellID->269926532],

Cell["\<\
After generating the data and looking at it, we realized that none of them \
achieved the goal of 2048, and so the fail or success statements at the end \
were unnecessary. Furthermore, the strings at the end of the game, \
\[OpenCurlyDoubleQuote]fail\[CloseCurlyDoubleQuote] or \
\[OpenCurlyDoubleQuote]success\[CloseCurlyDoubleQuote], made the numerical \
data hard to work with. To fix that, we wrote some code that cuts off the \
last element of each game (the result statement).\
\>", "Text",
 CellChangeTimes->{{3.84833312969571*^9, 3.848333170645441*^9}},
 CellID->992452613],

Cell["Code to cut off the result statement:", "CodeText",
 CellChangeTimes->{{3.8479052674879627`*^9, 3.8479052929726143`*^9}, {
  3.8480943747269077`*^9, 3.8480945166037893`*^9}, {3.848096539837509*^9, 
  3.8480965406642537`*^9}, {3.8481490843130302`*^9, 3.8481491105354195`*^9}, {
  3.8481491514463005`*^9, 3.848149155930665*^9}, {3.848177519398719*^9, 
  3.848177553762494*^9}, {3.848333174945271*^9, 3.848333183204088*^9}, {
  3.848333216984766*^9, 3.848333217342761*^9}},
 CellID->292347291],

Cell[BoxData[{
 RowBox[{
  RowBox[{"MyDrop", "[", "list_", "]"}], ":=", " ", 
  RowBox[{"Return", "[", 
   RowBox[{"Drop", "[", 
    RowBox[{"list", ",", 
     RowBox[{"-", "1"}]}], "]"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"data2", " ", "=", " ", 
   RowBox[{"MyDrop", " ", "/@", " ", "data"}]}], ";"}]}], "Code",
 CellChangeTimes->{
  3.847903381953949*^9, {3.8479037465956764`*^9, 3.847903760026261*^9}, {
   3.8479042939452744`*^9, 3.847904319022188*^9}, 3.847904531340433*^9, 
   3.8479048635695534`*^9, 3.84790531918123*^9, {3.848333222633972*^9, 
   3.848333255155553*^9}, 3.848493266916009*^9},
 CellLabel->"In[45]:=",
 CellID->19289947],

Cell[TextData[{
 "We ran the steps shown above to create ",
 StyleBox["data2",
  FontSlant->"Italic"],
 ", and then exported this to the cloud. ",
 "Below you can see the CloudImport method, which is much quicker than \
running 70,000 random games."
}], "Text",
 CellChangeTimes->{{3.848696899863099*^9, 3.8486969346229258`*^9}, {
  3.848699682891054*^9, 3.848699760181616*^9}},
 CellID->1877038100],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"data2", "=", 
  RowBox[{
  "CloudImport", "[", 
   "\"\<https://www.wolframcloud.com/obj/1f0dab02-fe9f-400e-84f2-8516515fdbd7\
\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.848696117539329*^9, 3.848696118352312*^9}},
 CellLabel->"In[54]:=",
 CellID->712835649],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"2", ",", "0", ",", "0", ",", "2"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], "}"}],
                ",", "3"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"2", ",", "0", ",", "0", ",", "2"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "2", ",", "0", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], "}"}],
                ",", "2"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "0", ",", "4"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"2", ",", "0", ",", "0", ",", "2"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], "}"}],
                ",", "1"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"4", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"4", ",", "0", ",", "0", ",", "2"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], "}"}],
                ",", "2"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"0", ",", "2", ",", "0", ",", "4"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "4", ",", "2"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], "}"}],
                ",", "2"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "2", ",", "4"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "2", ",", "0", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "4", ",", "2"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], "}"}],
                ",", "4"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"2", ",", "0", ",", "2", ",", "4"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "2", ",", "4", ",", "2"}], "}"}]}], "}"}],
                ",", "3"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"2", ",", "2", ",", "2", ",", "4"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "4", ",", "2"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "4", ",", "0", ",", "0"}], "}"}]}], "}"}],
                ",", "2"}], "}"}], ",", 
             TemplateBox[{"99"},
              "OutputSizeLimit`Skeleton"], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"2", ",", "8", ",", "2", ",", "2"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"8", ",", "64", ",", "4", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"16", ",", "4", ",", "16", ",", "8"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"4", ",", "32", ",", "64", ",", "4"}], "}"}]}], 
                "}"}], ",", "2"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"0", ",", "2", ",", "8", ",", "4"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"4", ",", "8", ",", "64", ",", "4"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"16", ",", "4", ",", "16", ",", "8"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"4", ",", "32", ",", "64", ",", "4"}], "}"}]}], 
                "}"}], ",", "3"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"4", ",", "2", ",", "8", ",", "16"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"16", ",", "8", ",", "64", ",", "4"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"4", ",", "4", ",", "16", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "32", ",", "64", ",", "2"}], "}"}]}], 
                "}"}], ",", "2"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"4", ",", "2", ",", "8", ",", "16"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"16", ",", "8", ",", "64", ",", "4"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"2", ",", "0", ",", "8", ",", "16"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "32", ",", "64", ",", "2"}], "}"}]}], 
                "}"}], ",", "2"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"4", ",", "2", ",", "8", ",", "16"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"16", ",", "8", ",", "64", ",", "4"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"2", ",", "2", ",", "8", ",", "16"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "32", ",", "64", ",", "2"}], "}"}]}], 
                "}"}], ",", "2"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"4", ",", "2", ",", "8", ",", "16"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"16", ",", "8", ",", "64", ",", "4"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"2", ",", "4", ",", "8", ",", "16"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "32", ",", "64", ",", "2"}], "}"}]}], 
                "}"}], ",", "2"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"4", ",", "2", ",", "8", ",", "16"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"16", ",", "8", ",", "64", ",", "4"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"2", ",", "4", ",", "8", ",", "16"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"2", ",", "32", ",", "64", ",", "2"}], "}"}]}], 
                "}"}], ",", "4"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"2", ",", "2", ",", "8", ",", "16"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"4", ",", "8", ",", "64", ",", "4"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"16", ",", "4", ",", "8", ",", "16"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"4", ",", "32", ",", "64", ",", "2"}], "}"}]}], 
                "}"}], ",", "2"}], "}"}]}], "}"}], ",", 
           TemplateBox[{"69998"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                TemplateBox[{"1"},
                 "OutputSizeLimit`Skeleton"], "}"}], ",", "3"}], "}"}], ",", 
             TemplateBox[{"82"},
              "OutputSizeLimit`Skeleton"]}], "}"}]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{49.2099609375, {2., 7.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{39.884765625, {0., 7.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 54, 27563202295248652673, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{46.73583984375, {0., 7.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{46.73583984375, {0., 7.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 54, 27563202295248652673, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{34.4970703125, {0., 7.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 54, 27563202295248652673, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{59.73046875, {0., 7.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[27563202295248652673 === $SessionID, 
   Out[54], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{3.848696682615726*^9},
 CellLabel->"Out[54]=",
 CellID->644958616]
}, Open  ]],

Cell["\<\
We then needed to reformat the data so that it could be used by the Predict \
function.\
\>", "Text",
 CellChangeTimes->{{3.848333263651889*^9, 3.8483332808505898`*^9}},
 CellID->1945578282],

Cell["\<\
A function that formats the data into a list of rules, as needed by the \
Predict:\
\>", "CodeText",
 CellChangeTimes->{{3.8479057257665153`*^9, 3.8479057862232676`*^9}, {
  3.848096557267106*^9, 3.8480965577211695`*^9}, {3.848333282412434*^9, 
  3.8483332954455013`*^9}},
 CellID->57866239],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"trainingset1", "=", 
    RowBox[{"{", "}"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"rndData", " ", "=", " ", "data2"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"rndmaxvalues", "=", 
    RowBox[{"Map", "[", 
     RowBox[{"Max", ",", 
      RowBox[{"Map", "[", 
       RowBox[{"Max", ",", "rndData", ",", 
        RowBox[{"{", "2", "}"}]}], "]"}], ",", 
      RowBox[{"{", "1", "}"}]}], "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "1"}], ",", 
    RowBox[{"i", "<", "70000"}], ",", 
    RowBox[{"i", "++"}], ",", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "->", 
          RowBox[{"rndmaxvalues", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "&"}], "/@", 
        RowBox[{"Map", "[", 
         RowBox[{"Flatten", ",", 
          RowBox[{"data2", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"trainingset1", ",", 
        RowBox[{"Flatten", "[", 
         RowBox[{"a", ",", "2"}], "]"}]}], "]"}]}], "}"}]}], "]"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"trainingset2", " ", "=", " ", 
   RowBox[{"Flatten", "[", "trainingset1", "]"}]}], ";"}]}], "Code",
 CellChangeTimes->{
  3.847903381953949*^9, {3.8479037465956764`*^9, 3.847903760026261*^9}, {
   3.8479042939452744`*^9, 3.847904319022188*^9}, 3.847904531340433*^9, 
   3.8479048635695534`*^9, {3.84790531918123*^9, 3.8479053297725687`*^9}, {
   3.8479057936867123`*^9, 3.847905807196927*^9}, 3.8481802429698925`*^9, {
   3.848697437865829*^9, 3.848697443343912*^9}, {3.848698566506912*^9, 
   3.848698578816744*^9}, {3.8486998274787188`*^9, 3.848699900918721*^9}},
 CellID->393854336],

Cell["\<\
The final step was to train the Predict function and export it: \
\>", "CodeText",
 CellChangeTimes->{{3.8479059408836613`*^9, 3.8479059714545836`*^9}, {
  3.8480965619955163`*^9, 3.8480965624323425`*^9}, {3.848177736411931*^9, 
  3.8481777657704687`*^9}, {3.848333308155698*^9, 3.8483333118560247`*^9}},
 CellID->428018796],

Cell[BoxData[
 RowBox[{
  RowBox[{"predictorV3", " ", "=", " ", 
   RowBox[{"Predict", "[", 
    RowBox[{"trainingset2", ",", " ", 
     RowBox[{"Method", "->", "\"\<RandomForest\>\""}]}], "]"}]}], 
  ";"}]], "Code",
 CellChangeTimes->{
  3.847903381953949*^9, {3.8479037465956764`*^9, 3.847903760026261*^9}, {
   3.8479042939452744`*^9, 3.847904319022188*^9}, 3.847904531340433*^9, 
   3.8479048635695534`*^9, {3.84790531918123*^9, 3.8479053297725687`*^9}, {
   3.8479057936867123`*^9, 3.847905807196927*^9}, {3.8479059983955154`*^9, 
   3.847906012130056*^9}, 3.848494845203293*^9, {3.848697450787532*^9, 
   3.8486974515348053`*^9}, 3.848699904520773*^9},
 CellID->601462861],

Cell["\<\
After exporting the Predict function, we wrote code that combined it with our \
game. We built a function that takes the current board passed in, and runs \
each possible move. It uses the model to predict the highest score of each \
possible move, and then uses that move.\
\>", "Text",
 CellChangeTimes->{{3.848333321554386*^9, 3.848333382919643*^9}},
 CellID->1199369189],

Cell["Function to predict the best next move:", "CodeText",
 CellChangeTimes->{{3.8479059408836613`*^9, 3.8479059714545836`*^9}, {
   3.8480770709346576`*^9, 3.8480770980463*^9}, {3.848094569969699*^9, 
   3.8480945821330247`*^9}, {3.848094639492491*^9, 3.8480947069297237`*^9}, 
   3.8480952302688875`*^9, {3.8480965722525315`*^9, 3.848096609295927*^9}, 
   3.8481492207794895`*^9, {3.848333385633058*^9, 3.848333400417845*^9}},
 CellID->32836953],

Cell[BoxData[
 RowBox[{
  RowBox[{"PredictBestMove", "[", "board_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"newboard", ",", 
      RowBox[{"bestmove", "=", 
       RowBox[{"{", "}"}]}], ",", "newscore"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "<=", "4"}], ",", 
       RowBox[{"i", "++"}], ",", " ", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"newboard", "=", 
          RowBox[{"Flatten", "[", "board", "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"newboard", ",", "i"}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"newscore", "=", 
          RowBox[{"predictorV3", "[", "newboard", "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"i", "==", "1"}], ",", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"bestmove", ",", 
             RowBox[{"{", 
              RowBox[{"newscore", ",", "i"}], "}"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"newscore", ">", 
              RowBox[{
               RowBox[{"bestmove", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], ",", 
             RowBox[{"bestmove", "=", 
              RowBox[{"{", 
               RowBox[{"{", 
                RowBox[{"newscore", ",", "i"}], "}"}], "}"}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"newscore", "==", 
                RowBox[{
                 RowBox[{"bestmove", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], ",", 
               RowBox[{"AppendTo", "[", 
                RowBox[{"bestmove", ",", 
                 RowBox[{"{", 
                  RowBox[{"newscore", ",", "i"}], "}"}]}], "]"}]}], "]"}]}], 
            "]"}]}], "]"}]}], "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"RandomSample", "[", 
         RowBox[{"bestmove", ",", "1"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}], "]"}]}]}]}]}]], "Code",
 CellChangeTimes->{
  3.847903381953949*^9, {3.8479037465956764`*^9, 3.847903760026261*^9}, {
   3.8479042939452744`*^9, 3.847904319022188*^9}, 3.847904531340433*^9, 
   3.8479048635695534`*^9, {3.84790531918123*^9, 3.8479053297725687`*^9}, {
   3.8479057936867123`*^9, 3.847905807196927*^9}, {3.8479059983955154`*^9, 
   3.847906012130056*^9}, 3.8480771109531765`*^9, {3.848697455338161*^9, 
   3.848697479828766*^9}},
 CellID->27489355],

Cell["Function to play a large number of games:", "CodeText",
 CellChangeTimes->{{3.8479059408836613`*^9, 3.8479059714545836`*^9}, {
   3.8480770709346576`*^9, 3.8480770980463*^9}, {3.8480771503453436`*^9, 
   3.8480771870847864`*^9}, 3.8480952356259327`*^9, {3.8481492511733503`*^9, 
   3.848149253075736*^9}},
 CellID->389476259],

Cell[BoxData[
 RowBox[{
  RowBox[{"PlayXModelGames", "[", "games_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "dataset", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"dataset", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{"AppendTo", "[", 
        RowBox[{"dataset", ",", 
         RowBox[{"RunModelGame", "[", "]"}]}], "]"}], ",", "games"}], "]"}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "dataset", "]"}]}]}], "]"}]}]], "Code",
 CellChangeTimes->{
  3.847903381953949*^9, {3.8479037465956764`*^9, 3.847903760026261*^9}, {
   3.8479042939452744`*^9, 3.847904319022188*^9}, 3.847904531340433*^9, 
   3.8479048635695534`*^9, {3.84790531918123*^9, 3.8479053297725687`*^9}, {
   3.8479057936867123`*^9, 3.847905807196927*^9}, {3.8479059983955154`*^9, 
   3.847906012130056*^9}, 3.848077197761351*^9, {3.848696963720606*^9, 
   3.848696967499206*^9}, 3.8486974861708937`*^9},
 CellID->155392234],

Cell["\<\
These games ran more slowly, running over the course of 2 nights. We've \
imported it from the cloud, to make it easier.\
\>", "Text",
 CellChangeTimes->{{3.848077250552047*^9, 3.848077299016003*^9}, {
  3.8480947659652667`*^9, 3.848094796222039*^9}, {3.848149272263147*^9, 
  3.8481492778109236`*^9}, {3.848697285126017*^9, 3.84869729252172*^9}},
 CellID->510787878],

Cell[BoxData[
 RowBox[{"mdlData", " ", "=", " ", 
  RowBox[{
  "CloudImport", "[", 
   "\"\<https://www.wolframcloud.com/obj/db5dfdc0-f2a1-42c9-bc98-4a6da0e8258f\
\>\"", "]"}]}]], "Code",
 InitializationCell->False,
 CellChangeTimes->{
  3.847903381953949*^9, {3.8479037465956764`*^9, 3.847903760026261*^9}, {
   3.8479042939452744`*^9, 3.847904319022188*^9}, 3.847904531340433*^9, 
   3.8479048635695534`*^9, {3.84790531918123*^9, 3.8479053297725687`*^9}, {
   3.8479057936867123`*^9, 3.847905807196927*^9}, {3.8479059983955154`*^9, 
   3.847906012130056*^9}, 3.848077197761351*^9, {3.8480774086353035`*^9, 
   3.8480774250735207`*^9}, 3.848494937667016*^9, {3.84869328573419*^9, 
   3.848693287253498*^9}, 3.848697299270157*^9, {3.848697617836588*^9, 
   3.848697618084858*^9}},
 CellID->154628078],

Cell["\<\
But, ultimately, it provides the same result as running this:\
\>", "Text",
 CellChangeTimes->{{3.848077444456128*^9, 3.848077472267126*^9}, {
  3.8483334140024633`*^9, 3.8483334162464447`*^9}, {3.848333453961521*^9, 
  3.8483334594509697`*^9}},
 CellID->22225333],

Cell[BoxData[
 RowBox[{
  RowBox[{"PlayXModelGames", "[", "50000", "]"}], ";"}]], "Code",
 InitializationCell->False,
 CellChangeTimes->{
  3.847903381953949*^9, {3.8479037465956764`*^9, 3.847903760026261*^9}, {
   3.8479042939452744`*^9, 3.847904319022188*^9}, 3.847904531340433*^9, 
   3.8479048635695534`*^9, {3.84790531918123*^9, 3.8479053297725687`*^9}, {
   3.8479057936867123`*^9, 3.847905807196927*^9}, {3.8479059983955154`*^9, 
   3.847906012130056*^9}, 3.848077197761351*^9, {3.8480774086353035`*^9, 
   3.8480774250735207`*^9}, {3.8480774847497034`*^9, 3.8480774934523573`*^9}, 
   3.8480775248406386`*^9},
 CellLabel->"In[41]:=",
 CellID->459130415]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["2048: Analyzing the Model", "Section",
 CellChangeTimes->{{3.848333943059093*^9, 3.848333955944688*^9}},
 CellID->516477932],

Cell[TextData[{
 "The next step was to ask the logical question: did anything change from the \
expected results? We took some data from the sets and graphed them to see \
what happened. Note that ",
 StyleBox["rndData",
  FontSlant->"Italic"],
 " is the random data, while ",
 StyleBox["mdlData",
  FontSlant->"Italic"],
 " is the model data."
}], "Text",
 CellChangeTimes->{{3.848077603375307*^9, 3.848077726369551*^9}, 
   3.8480952402120333`*^9, {3.8481493048944845`*^9, 3.848149321339732*^9}, {
   3.848333471429751*^9, 3.8483334921014*^9}, {3.84833397095827*^9, 
   3.848333973580435*^9}, {3.848698539897752*^9, 3.848698561161725*^9}},
 CellID->347600131],

Cell["Identify the max value of each game in the sets:", "CodeText",
 CellChangeTimes->{{3.8479059408836613`*^9, 3.8479059714545836`*^9}, {
   3.8480770709346576`*^9, 3.8480770980463*^9}, {3.8480771503453436`*^9, 
   3.8480771870847864`*^9}, {3.848077738527142*^9, 3.848077746748356*^9}, {
   3.8480778387579193`*^9, 3.8480778600879683`*^9}, {3.8480778954096055`*^9, 
   3.848077933582453*^9}, {3.848077972060461*^9, 3.8480780071732144`*^9}, {
   3.8480781916270638`*^9, 3.848078206535535*^9}, 3.848095245539843*^9, {
   3.848096692632222*^9, 3.8480966935391893`*^9}, {3.848149378323166*^9, 
   3.848149380367238*^9}},
 CellID->67437103],

Cell[BoxData[{
 RowBox[{
  RowBox[{"rndmaxvalues", "=", 
   RowBox[{"Map", "[", 
    RowBox[{"Max", ",", 
     RowBox[{"Map", "[", 
      RowBox[{"Max", ",", "rndData", ",", 
       RowBox[{"{", "2", "}"}]}], "]"}], ",", 
     RowBox[{"{", "1", "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"mdlmaxvalues", "=", 
   RowBox[{"Map", "[", 
    RowBox[{"Max", ",", 
     RowBox[{"Map", "[", 
      RowBox[{"Max", ",", "mdlData", ",", 
       RowBox[{"{", "2", "}"}]}], "]"}], ",", 
     RowBox[{"{", "1", "}"}]}], "]"}]}], ";"}]}], "Code",
 CellChangeTimes->{
  3.847903381953949*^9, {3.8479037465956764`*^9, 3.847903760026261*^9}, {
   3.8479042939452744`*^9, 3.847904319022188*^9}, 3.847904531340433*^9, 
   3.8479048635695534`*^9, {3.84790531918123*^9, 3.8479053297725687`*^9}, {
   3.8479057936867123`*^9, 3.847905807196927*^9}, {3.8479059983955154`*^9, 
   3.847906012130056*^9}, 3.848077197761351*^9, {3.8480774086353035`*^9, 
   3.8480774250735207`*^9}, {3.8480774847497034`*^9, 3.8480774934523573`*^9}, 
   3.8480775248406386`*^9, {3.8480777635255957`*^9, 3.8480778260354023`*^9}, {
   3.848078216726848*^9, 3.8480782182151475`*^9}, {3.84807826919108*^9, 
   3.8480782703825817`*^9}, {3.8481493561744323`*^9, 
   3.8481493571083193`*^9}, {3.8486970265329323`*^9, 3.848697033193321*^9}, {
   3.848697274961729*^9, 3.848697279782086*^9}, {3.848699937172256*^9, 
   3.848699954123397*^9}},
 CellID->242483529],

Cell["Find the first occurrence of the maximum value:", "CodeText",
 CellChangeTimes->{{3.8480783945551276`*^9, 3.8480784238162117`*^9}, {
   3.84807879273153*^9, 3.8480788275990133`*^9}, 3.848095264039138*^9, {
   3.848149447354277*^9, 3.8481494546144176`*^9}, {3.8483334665202093`*^9, 
   3.848333468025648*^9}},
 CellID->31072177],

Cell[BoxData[
 RowBox[{
  RowBox[{"PosMaxValue", "[", "list_", "]"}], ":=", " ", 
  RowBox[{"Return", "[", 
   RowBox[{
    RowBox[{"First", "[", 
     RowBox[{"Position", "[", 
      RowBox[{
       RowBox[{"Map", "[", 
        RowBox[{"Max", ",", "list", ",", 
         RowBox[{"{", "1", "}"}]}], "]"}], ",", 
       RowBox[{"Max", "[", 
        RowBox[{"Map", "[", 
         RowBox[{"Max", ",", "list", ",", 
          RowBox[{"{", "1", "}"}]}], "]"}], "]"}]}], "]"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}], "]"}]}]], "Code",
 CellChangeTimes->{
  3.847903381953949*^9, {3.8479037465956764`*^9, 3.847903760026261*^9}, {
   3.8479042939452744`*^9, 3.847904319022188*^9}, 3.847904531340433*^9, 
   3.8479048635695534`*^9, {3.84790531918123*^9, 3.8479053297725687`*^9}, {
   3.8479057936867123`*^9, 3.847905807196927*^9}, {3.8479059983955154`*^9, 
   3.847906012130056*^9}, 3.848077197761351*^9, {3.8480774086353035`*^9, 
   3.8480774250735207`*^9}, {3.8480774847497034`*^9, 3.8480774934523573`*^9}, 
   3.8480775248406386`*^9, {3.8480777635255957`*^9, 3.8480778260354023`*^9}, {
   3.848078216726848*^9, 3.8480782182151475`*^9}, {3.84807826919108*^9, 
   3.8480782703825817`*^9}, {3.8480783289119744`*^9, 3.848078345919037*^9}, {
   3.8480784887234244`*^9, 3.8480785266686196`*^9}, 3.848078857836006*^9, {
   3.8486999616321793`*^9, 3.848699962649098*^9}},
 CellID->632881089],

Cell["Extract the lengths of each game:", "CodeText",
 CellChangeTimes->{{3.8479059408836613`*^9, 3.8479059714545836`*^9}, {
   3.8480770709346576`*^9, 3.8480770980463*^9}, {3.8480771503453436`*^9, 
   3.8480771870847864`*^9}, {3.848077738527142*^9, 3.848077746748356*^9}, {
   3.8480778387579193`*^9, 3.8480778600879683`*^9}, {3.8480778954096055`*^9, 
   3.848077933582453*^9}, {3.848077972060461*^9, 3.8480780071732144`*^9}, {
   3.8480781916270638`*^9, 3.848078206535535*^9}, {3.8480782924822693`*^9, 
   3.8480783118240643`*^9}, 3.8480952513240337`*^9, {3.848096703515482*^9, 
   3.8480967047079973`*^9}, {3.848149383637148*^9, 3.8481493852569036`*^9}},
 CellID->449764321],

Cell[BoxData[{
 RowBox[{
  RowBox[{"rndlengths", "=", 
   RowBox[{"Map", "[", 
    RowBox[{"Length", ",", "rndData", ",", 
     RowBox[{"{", "1", "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"mdllength", "=", 
   RowBox[{"Map", "[", 
    RowBox[{"Length", ",", "mdlData", ",", 
     RowBox[{"{", "1", "}"}]}], "]"}]}], ";"}]}], "Code",
 CellChangeTimes->{
  3.847903381953949*^9, {3.8479037465956764`*^9, 3.847903760026261*^9}, {
   3.8479042939452744`*^9, 3.847904319022188*^9}, 3.847904531340433*^9, 
   3.8479048635695534`*^9, {3.84790531918123*^9, 3.8479053297725687`*^9}, {
   3.8479057936867123`*^9, 3.847905807196927*^9}, {3.8479059983955154`*^9, 
   3.847906012130056*^9}, 3.848077197761351*^9, {3.8480774086353035`*^9, 
   3.8480774250735207`*^9}, {3.8480774847497034`*^9, 3.8480774934523573`*^9}, 
   3.8480775248406386`*^9, {3.8480777635255957`*^9, 3.8480778260354023`*^9}, {
   3.848078216726848*^9, 3.8480782182151475`*^9}, {3.84807826919108*^9, 
   3.8480782703825817`*^9}, {3.8480783289119744`*^9, 3.848078345919037*^9}},
 CellLabel->"(Debug) In[117]:=",
 CellID->358375778],

Cell["\<\
The next step is to make pairs of the maximum value and the length of each \
game in order to graph them against each other: \
\>", "CodeText",
 CellChangeTimes->{{3.8480783945551276`*^9, 3.8480784238162117`*^9}, {
  3.8480952555652847`*^9, 3.8480952565402293`*^9}, {3.8481494006430416`*^9, 
  3.848149407664964*^9}, {3.848177806470728*^9, 3.8481778529969854`*^9}, {
  3.848333499483465*^9, 3.8483335014192057`*^9}},
 CellID->28863224],

Cell[BoxData[{
 RowBox[{
  RowBox[{"rndmaxlengthpairs", "=", 
   RowBox[{"Thread", "[", 
    RowBox[{"{", 
     RowBox[{"rndlengths", ",", "rndmaxvalues"}], "}"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"mdlmaxlengthpairs", "=", 
   RowBox[{"Thread", "[", 
    RowBox[{"{", 
     RowBox[{"mdllength", ",", "mdlmaxvalues"}], "}"}], "]"}]}], 
  ";"}]}], "Code",
 CellChangeTimes->{
  3.847903381953949*^9, {3.8479037465956764`*^9, 3.847903760026261*^9}, {
   3.8479042939452744`*^9, 3.847904319022188*^9}, 3.847904531340433*^9, 
   3.8479048635695534`*^9, {3.84790531918123*^9, 3.8479053297725687`*^9}, {
   3.8479057936867123`*^9, 3.847905807196927*^9}, {3.8479059983955154`*^9, 
   3.847906012130056*^9}, 3.848077197761351*^9, {3.8480774086353035`*^9, 
   3.8480774250735207`*^9}, {3.8480774847497034`*^9, 3.8480774934523573`*^9}, 
   3.8480775248406386`*^9, {3.8480777635255957`*^9, 3.8480778260354023`*^9}, {
   3.848078216726848*^9, 3.8480782182151475`*^9}, {3.84807826919108*^9, 
   3.8480782703825817`*^9}, {3.8480783289119744`*^9, 3.848078345919037*^9}, {
   3.8480784887234244`*^9, 3.8480785266686196`*^9}, {3.8486999709856567`*^9, 
   3.8486999729858103`*^9}},
 CellID->205421547],

Cell["\<\
We used this on both datasets\[LongDash] the random games, and the model \
games that use the Predict function:\
\>", "CodeText",
 CellChangeTimes->{{3.848078880250218*^9, 3.848078887740961*^9}, {
  3.8481778772157164`*^9, 3.8481778866372213`*^9}, {3.848333508107581*^9, 
  3.848333517837058*^9}, {3.848699980466*^9, 3.8486999832593937`*^9}},
 CellID->230823471],

Cell[BoxData[{
 RowBox[{
  RowBox[{"rndposmaxvalues", "=", 
   RowBox[{"Map", "[", 
    RowBox[{"PosMaxValue", ",", "rndData", ",", 
     RowBox[{"{", "1", "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"mdlposmaxvalues", "=", 
   RowBox[{"Map", "[", 
    RowBox[{"PosMaxValue", ",", "mdlData", ",", 
     RowBox[{"{", "1", "}"}]}], "]"}]}], ";"}]}], "Code",
 CellChangeTimes->{
  3.847903381953949*^9, {3.8479037465956764`*^9, 3.847903760026261*^9}, {
   3.8479042939452744`*^9, 3.847904319022188*^9}, 3.847904531340433*^9, 
   3.8479048635695534`*^9, {3.84790531918123*^9, 3.8479053297725687`*^9}, {
   3.8479057936867123`*^9, 3.847905807196927*^9}, {3.8479059983955154`*^9, 
   3.847906012130056*^9}, 3.848077197761351*^9, {3.8480774086353035`*^9, 
   3.8480774250735207`*^9}, {3.8480774847497034`*^9, 3.8480774934523573`*^9}, 
   3.8480775248406386`*^9, {3.8480777635255957`*^9, 3.8480778260354023`*^9}, {
   3.848078216726848*^9, 3.8480782182151475`*^9}, {3.84807826919108*^9, 
   3.8480782703825817`*^9}, {3.8480783289119744`*^9, 3.848078345919037*^9}, {
   3.8480784887234244`*^9, 3.8480785266686196`*^9}, 3.848078857836006*^9, {
   3.8480788971705494`*^9, 3.8480789104188395`*^9}},
 CellLabel->"(Debug) In[121]:=",
 CellID->137112849],

Cell["Threading these results with the max values themselves:", "CodeText",
 CellChangeTimes->{{3.84807897971391*^9, 3.8480790320500975`*^9}, {
  3.84833352262784*^9, 3.8483335359861526`*^9}},
 CellID->539071811],

Cell[BoxData[{
 RowBox[{
  RowBox[{"rndmaxvalpairs", "=", 
   RowBox[{"Thread", "[", 
    RowBox[{"{", 
     RowBox[{"rndposmaxvalues", ",", "rndmaxvalues"}], "}"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"mdlmaxvalpairs", "=", 
   RowBox[{"Thread", "[", 
    RowBox[{"{", 
     RowBox[{"mdlposmaxvalues", ",", "mdlmaxvalues"}], "}"}], "]"}]}], 
  ";"}]}], "Code",
 CellChangeTimes->{
  3.847903381953949*^9, {3.8479037465956764`*^9, 3.847903760026261*^9}, {
   3.8479042939452744`*^9, 3.847904319022188*^9}, 3.847904531340433*^9, 
   3.8479048635695534`*^9, {3.84790531918123*^9, 3.8479053297725687`*^9}, {
   3.8479057936867123`*^9, 3.847905807196927*^9}, {3.8479059983955154`*^9, 
   3.847906012130056*^9}, 3.848077197761351*^9, {3.8480774086353035`*^9, 
   3.8480774250735207`*^9}, {3.8480774847497034`*^9, 3.8480774934523573`*^9}, 
   3.8480775248406386`*^9, {3.8480777635255957`*^9, 3.8480778260354023`*^9}, {
   3.848078216726848*^9, 3.8480782182151475`*^9}, {3.84807826919108*^9, 
   3.8480782703825817`*^9}, {3.8480783289119744`*^9, 3.848078345919037*^9}, {
   3.8480784887234244`*^9, 3.8480785266686196`*^9}, 3.848078857836006*^9, {
   3.8480788971705494`*^9, 3.8480789104188395`*^9}, {3.8480790655017233`*^9, 
   3.8480790765496597`*^9}},
 CellLabel->"(Debug) In[123]:=",
 CellID->869741511],

Cell["\<\
Here is the histogram of the lengths of each game in the datasets, with the \
yellow representing the random move data, the blue representing the model \
data, and the gray representing the overlapping regions. The x axis is the \
length of the game, and the y-axis is the amount of games with that length. \
\>", "Text",
 CellChangeTimes->{{3.8480793808079844`*^9, 3.8480794770885468`*^9}, {
   3.8480967291672945`*^9, 3.848096730073018*^9}, 3.8481494957978783`*^9, {
   3.848333545395925*^9, 3.848333585210998*^9}, {3.84869544900115*^9, 
   3.848695449751781*^9}, {3.8486976564736137`*^9, 3.8486976671323223`*^9}},
 CellID->506116777],

Cell[TextData[StyleBox["Distribution of the game lengths:", "CodeText"]], \
"Text",
 CellChangeTimes->{{3.848177986752486*^9, 3.8481780062898836`*^9}},
 CellID->66951590],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Histogram", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"rndlengths", ",", "mdllength"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "500", ",", "20"}], "}"}], ",", 
   RowBox[{"ScalingFunctions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"None", ",", "\"\<Log\>\""}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8480016904474897`*^9, 3.8480016950034103`*^9}, {
  3.8480017353453054`*^9, 3.848001832784171*^9}, {3.848001884600154*^9, 
  3.8480019519161406`*^9}},
 CellLabel->"In[33]:=",
 CellID->297639739],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.511], Thickness[Small]}], {{}, 
     {RGBColor[0.97858, 0.678934, 0.157834], Opacity[0.5], EdgeForm[{Opacity[
      0.511], Thickness[Small]}], 
      RectangleBox[{20., -1}, 
       NCache[{40., Log[79]}, {40., 4.3694478524670215`}],
       RoundingRadius->0], 
      RectangleBox[{40., -1}, 
       NCache[{60., Log[1991]}, {60., 7.596392304064196}],
       RoundingRadius->0], 
      RectangleBox[{60., -1}, 
       NCache[{80., Log[6263]}, {80., 8.742414582525413}],
       RoundingRadius->0], 
      RectangleBox[{80., -1}, 
       NCache[{100., Log[11312]}, {100., 9.333619388136354}],
       RoundingRadius->0], 
      RectangleBox[{100., -1}, 
       NCache[{120., Log[9229]}, {120., 9.130105979265577}],
       RoundingRadius->0], 
      RectangleBox[{120., -1}, 
       NCache[{140., Log[8408]}, {140., 9.036938912556787}],
       RoundingRadius->0], 
      RectangleBox[{140., -1}, 
       NCache[{160., Log[6771]}, {160., 8.820404065485645}],
       RoundingRadius->0], 
      RectangleBox[{160., -1}, 
       NCache[{180., Log[2949]}, {180., 7.989221408815276}],
       RoundingRadius->0], 
      RectangleBox[{180., -1}, 
       NCache[{200., Log[1328]}, {200., 7.191429330036379}],
       RoundingRadius->0], 
      RectangleBox[{200., -1}, 
       NCache[{220., Log[906]}, {220., 6.80903930604298}],
       RoundingRadius->0], 
      RectangleBox[{220., -1}, 
       NCache[{240., Log[429]}, {240., 6.061456918928017}],
       RoundingRadius->0], 
      RectangleBox[{240., -1}, 
       NCache[{260., Log[222]}, {260., 5.402677381872279}],
       RoundingRadius->0], 
      RectangleBox[{260., -1}, 
       NCache[{280., Log[77]}, {280., 4.343805421853684}],
       RoundingRadius->0], 
      RectangleBox[{280., -1}, 
       NCache[{300., Log[30]}, {300., 3.4011973816621555`}],
       RoundingRadius->0], 
      RectangleBox[{300., -1}, 
       NCache[{320., Log[2]}, {320., 0.6931471805599453}],
       RoundingRadius->0], 
      RectangleBox[{320., -1}, 
       NCache[{340., Log[2]}, {340., 0.6931471805599453}],
       RoundingRadius->0], 
      RectangleBox[{340., -1}, 
       NCache[{360., Log[2]}, {360., 0.6931471805599453}],
       RoundingRadius->0]}, {}, {}}, {{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.5], EdgeForm[{Opacity[
      0.511], Thickness[Small]}], 
      RectangleBox[{20., -1}, 
       NCache[{40., Log[79]}, {40., 4.3694478524670215`}],
       RoundingRadius->0], 
      RectangleBox[{40., -1}, 
       NCache[{60., Log[1597]}, {60., 7.3758821482150125`}],
       RoundingRadius->0], 
      RectangleBox[{60., -1}, 
       NCache[{80., Log[4870]}, {80., 8.490849216076635}],
       RoundingRadius->0], 
      RectangleBox[{80., -1}, 
       NCache[{100., Log[9177]}, {100., 9.124455632819013}],
       RoundingRadius->0], 
      RectangleBox[{100., -1}, 
       NCache[{120., Log[8487]}, {120., 9.046290859969677}],
       RoundingRadius->0], 
      RectangleBox[{120., -1}, 
       NCache[{140., Log[8560]}, {140., 9.054855469135788}],
       RoundingRadius->0], 
      RectangleBox[{140., -1}, 
       NCache[{160., Log[7442]}, {160., 8.914894908906568}],
       RoundingRadius->0], 
      RectangleBox[{160., -1}, 
       NCache[{180., Log[4534]}, {180., 8.419359831067474}],
       RoundingRadius->0], 
      RectangleBox[{180., -1}, 
       NCache[{200., Log[2212]}, {200., 7.701652362642226}],
       RoundingRadius->0], 
      RectangleBox[{200., -1}, 
       NCache[{220., Log[1312]}, {220., 7.179307969504034}],
       RoundingRadius->0], 
      RectangleBox[{220., -1}, 
       NCache[{240., Log[837]}, {240., 6.729824070489475}],
       RoundingRadius->0], 
      RectangleBox[{240., -1}, 
       NCache[{260., Log[450]}, {260., 6.1092475827643655`}],
       RoundingRadius->0], 
      RectangleBox[{260., -1}, 
       NCache[{280., Log[237]}, {280., 5.4680601411351315`}],
       RoundingRadius->0], 
      RectangleBox[{280., -1}, 
       NCache[{300., Log[103]}, {300., 4.634728988229636}],
       RoundingRadius->0], 
      RectangleBox[{300., -1}, 
       NCache[{320., Log[55]}, {320., 4.007333185232471}],
       RoundingRadius->0], 
      RectangleBox[{320., -1}, 
       NCache[{340., Log[25]}, {340., 3.2188758248682006`}],
       RoundingRadius->0], 
      RectangleBox[{340., -1}, 
       NCache[{360., Log[12]}, {360., 2.4849066497880004`}],
       RoundingRadius->0], 
      RectangleBox[{360., -1}, 
       NCache[{380., Log[5]}, {380., 1.6094379124341003`}],
       RoundingRadius->0], 
      RectangleBox[{380., -1}, 
       NCache[{400., Log[2]}, {400., 0.6931471805599453}],
       RoundingRadius->0], 
      RectangleBox[{400., -1}, 
       NCache[{420., Log[3]}, {420., 1.0986122886681098`}],
       RoundingRadius->0], RectangleBox[{440., -1}, {460., 0},
       RoundingRadius->
        0]}, {}, {}}}, {{{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {}}, {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-10., -1},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{
     Charting`ScaledTicks[{Log, Exp}], 
     Charting`ScaledFrameTicks[{Log, Exp}]}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{0., 500.}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->FrontEndValueCache[{Automatic, 
     Charting`ScaledTicks[{Log, Exp}]}, {Automatic, {{0., 
       FormBox["1", TraditionalForm], {0.01, 0.}}, {2.302585092994046, 
       FormBox["10", TraditionalForm], {0.01, 0.}}, {4.605170185988092, 
       FormBox["100", TraditionalForm], {0.01, 0.}}, {6.907755278982137, 
       FormBox["1000", TraditionalForm], {0.01, 0.}}, {9.210340371976184, 
       FormBox[
        TemplateBox[{"10", "4"}, "Superscript", SyntaxForm -> SuperscriptBox],
         TraditionalForm], {0.01, 0.}}, {-2.3025850929940455`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-1.6094379124341003`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-1.2039728043259361`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-0.916290731874155, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-0.6931471805599453, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-0.5108256237659907, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-0.35667494393873245`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-0.2231435513142097, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-0.10536051565782628`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      0.6931471805599453, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      1.0986122886681098`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      1.3862943611198906`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      1.6094379124341003`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      1.791759469228055, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      1.9459101490553132`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      2.0794415416798357`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      2.1972245773362196`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      2.995732273553991, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      3.4011973816621555`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      3.6888794541139363`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      3.912023005428146, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.0943445622221, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.248495242049359, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.382026634673881, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.499809670330265, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      5.298317366548036, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      5.703782474656201, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      5.991464547107982, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      6.214608098422191, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      6.396929655216146, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      6.551080335043404, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      6.684611727667927, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      6.802394763324311, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      7.600902459542082, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      8.006367567650246, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      8.294049640102028, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      8.517193191416238, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      8.699514748210191, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      8.85366542803745, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      8.987196820661973, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      9.104979856318357, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      9.903487552536127, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      10.308952660644293`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      10.596634733096073`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      10.819778284410283`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      11.002099841204238`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      11.156250521031495`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      11.289781913656018`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      11.407564949312402`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      11.512925464970229`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      11.918390573078392`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      12.206072645530174`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}}}]]], "Output",
 CellChangeTimes->{
  3.8480017569089036`*^9, {3.8480017889312367`*^9, 3.848001835556651*^9}, 
   3.8480018882328386`*^9, {3.848001919230508*^9, 3.8480019534896636`*^9}},
 CellLabel->"Out[33]=",
 CellID->299223936]
}, Open  ]],

Cell["\<\
Keep in mind the y-axis log scale! There are 10,000 times more games with \
length 100, than games with a length over 400. \
\>", "Text",
 CellChangeTimes->{{3.848178129720457*^9, 3.8481782083068085`*^9}},
 CellID->603052828],

Cell["\<\
As we can see, the model data (blue) has a longer tail than the random data \
(yellow), showing that games that use the dataset tend to run longer than \
random games. The yellow graph is skewed more to the right than the blue \
graph. \
\>", "Text",
 CellChangeTimes->{{3.8480948224182816`*^9, 3.848094862076288*^9}, {
  3.84809675849321*^9, 3.8480967899964485`*^9}, {3.84814954046177*^9, 
  3.848149568859454*^9}, {3.8481782799775667`*^9, 3.8481783553574405`*^9}},
 CellID->355266128],

Cell["\<\
Here is the histogram of the maximum values with the same color code as the \
previous histogram. The x-axis represents the final value of the game (2, 4, \
8, 16, etc, up to 512). There were no games that actually won (with a maximum \
value of 2048). The y-axis is the amount of games that achieved that final \
value. Most games ended at 64 and 128.  A significant portion of games that \
ended at 8 were a result of the random games. \
\>", "Text",
 CellChangeTimes->{{3.8480796122631116`*^9, 3.848079644296197*^9}, {
  3.8480948661279364`*^9, 3.848094867797496*^9}, {3.848149584602002*^9, 
  3.848149586576112*^9}, {3.8481787269336033`*^9, 3.8481788598015466`*^9}, {
  3.8481788922026467`*^9, 3.848178920502398*^9}, {3.848179109717574*^9, 
  3.8481791099774113`*^9}, {3.84870003472544*^9, 3.848700035114985*^9}},
 CellID->18248537],

Cell["Distribution of the maximum values in the game:", "CodeText",
 CellChangeTimes->{{3.848695280158732*^9, 3.848695286497184*^9}},
 CellID->925199063],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Histogram", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"rndmaxvalues", ",", "mdlmaxvalues"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "600", ",", "10"}], "}"}], ",", 
   RowBox[{"ScalingFunctions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"None", ",", "\"\<Log\>\""}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8480019891276255`*^9, 3.848002006670268*^9}},
 CellLabel->"In[34]:=",
 CellID->293645272],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.26599999999999996`], Thickness[Small]}], {{}, 
     {RGBColor[0.97858, 0.678934, 0.157834], Opacity[0.5], EdgeForm[{Opacity[
      0.26599999999999996`], Thickness[Small]}], 
      RectangleBox[{0., -1}, NCache[{10., Log[3]}, {10., 1.0986122886681098`}],
       RoundingRadius->0], 
      RectangleBox[{10., -1}, 
       NCache[{20., Log[282]}, {20., 5.641907070938114}],
       RoundingRadius->0], 
      RectangleBox[{30., -1}, 
       NCache[{40., Log[4922]}, {40., 8.501470230951002}],
       RoundingRadius->0], 
      RectangleBox[{60., -1}, 
       NCache[{70., Log[21064]}, {70., 9.955320701176145}],
       RoundingRadius->0], 
      RectangleBox[{120., -1}, 
       NCache[{130., Log[21099]}, {130., 9.956980924976127}],
       RoundingRadius->0], 
      RectangleBox[{250., -1}, 
       NCache[{260., Log[2625]}, {260., 7.872836175025724}],
       RoundingRadius->0], 
      RectangleBox[{510., -1}, 
       NCache[{520., Log[5]}, {520., 1.6094379124341003`}],
       RoundingRadius->0]}, {}, {}}, {{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.5], EdgeForm[{Opacity[
      0.26599999999999996`], Thickness[Small]}], 
      RectangleBox[{0., -1}, {10., 0},
       RoundingRadius->0], 
      RectangleBox[{10., -1}, 
       NCache[{20., Log[280]}, {20., 5.634789603169249}],
       RoundingRadius->0], 
      RectangleBox[{30., -1}, 
       NCache[{40., Log[4144]}, {40., 8.329416783939319}],
       RoundingRadius->0], 
      RectangleBox[{60., -1}, 
       NCache[{70., Log[17238]}, {70., 9.754871528207344}],
       RoundingRadius->0], 
      RectangleBox[{120., -1}, 
       NCache[{130., Log[25162]}, {130., 10.133090198911075`}],
       RoundingRadius->0], 
      RectangleBox[{250., -1}, 
       NCache[{260., Log[3168]}, {260., 8.060855752934316}],
       RoundingRadius->0], 
      RectangleBox[{510., -1}, 
       NCache[{520., Log[7]}, {520., 1.9459101490553132`}],
       RoundingRadius->
        0]}, {}, {}}}, {{{{}, {}, {}, {}, {}, {}, {}}, {}}, {{{}, {}, {}, {}, \
{}, {}, {}}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-12., -1},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{
     Charting`ScaledTicks[{Log, Exp}], 
     Charting`ScaledFrameTicks[{Log, Exp}]}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{560., Automatic},
  PlotRange->{{0., 600.}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->FrontEndValueCache[{Automatic, 
     Charting`ScaledTicks[{Log, Exp}]}, {Automatic, {{0., 
       FormBox["1", TraditionalForm], {0.01, 0.}}, {2.302585092994046, 
       FormBox["10", TraditionalForm], {0.01, 0.}}, {4.605170185988092, 
       FormBox["100", TraditionalForm], {0.01, 0.}}, {6.907755278982137, 
       FormBox["1000", TraditionalForm], {0.01, 0.}}, {9.210340371976184, 
       FormBox[
        TemplateBox[{"10", "4"}, "Superscript", SyntaxForm -> SuperscriptBox],
         TraditionalForm], {0.01, 0.}}, {-2.3025850929940455`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-1.6094379124341003`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-1.2039728043259361`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-0.916290731874155, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-0.6931471805599453, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-0.5108256237659907, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-0.35667494393873245`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-0.2231435513142097, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-0.10536051565782628`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      0.6931471805599453, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      1.0986122886681098`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      1.3862943611198906`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      1.6094379124341003`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      1.791759469228055, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      1.9459101490553132`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      2.0794415416798357`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      2.1972245773362196`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      2.995732273553991, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      3.4011973816621555`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      3.6888794541139363`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      3.912023005428146, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.0943445622221, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.248495242049359, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.382026634673881, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.499809670330265, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      5.298317366548036, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      5.703782474656201, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      5.991464547107982, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      6.214608098422191, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      6.396929655216146, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      6.551080335043404, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      6.684611727667927, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      6.802394763324311, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      7.600902459542082, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      8.006367567650246, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      8.294049640102028, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      8.517193191416238, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      8.699514748210191, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      8.85366542803745, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      8.987196820661973, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      9.104979856318357, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      9.903487552536127, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      10.308952660644293`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      10.596634733096073`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      10.819778284410283`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      11.002099841204238`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      11.156250521031495`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      11.289781913656018`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      11.407564949312402`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      11.512925464970229`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      12.206072645530174`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      12.611537753638338`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      12.89921982609012, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      13.122363377404328`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}}}]]], "Output",
 CellChangeTimes->{3.848002012706951*^9},
 CellLabel->"Out[34]=",
 CellID->435850730]
}, Open  ]],

Cell["\<\
In this plot, we can see that although there is some improvement of the \
number of the higher scores using the model,  it doesn\[CloseCurlyQuote]t \
appear to be significant in comparison to the random games. \
\>", "Text",
 CellChangeTimes->{{3.8480948736207423`*^9, 3.848094949825039*^9}, {
  3.8480968080360823`*^9, 3.848096866703295*^9}, {3.8481790099613543`*^9, 
  3.848179013480774*^9}},
 CellID->111310275],

Cell["\<\
Here we have the box and whisker plots of the lengths of the games, separated \
into bins based on the high score of the game, and the different datasets, \
using the same color code as above.\
\>", "Text",
 CellChangeTimes->{{3.848079802805324*^9, 3.8480798849066734`*^9}, {
   3.8480799204551644`*^9, 3.8480799675892763`*^9}, {3.8480950055933876`*^9, 
   3.8480950069341946`*^9}, {3.8480968846354275`*^9, 3.8480968847825418`*^9}, 
   3.8481496040963955`*^9, {3.848697689121429*^9, 3.8486976900334578`*^9}, {
   3.84870015150448*^9, 3.848700153330838*^9}},
 CellID->695329090],

Cell[BoxData[
 RowBox[{"BoxWhiskerChart", "[", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Take", "[", 
          RowBox[{"#", ",", "1"}], "]"}], "&"}], "/@", 
        RowBox[{"Select", "[", 
         RowBox[{"rndmaxlengthpairs", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "==", "8"}], "&"}]}], "]"}]}], 
       "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Take", "[", 
          RowBox[{"#", ",", "1"}], "]"}], "&"}], "/@", 
        RowBox[{"Select", "[", 
         RowBox[{"mdlmaxlengthpairs", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "==", "8"}], "&"}]}], "]"}]}], 
       "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Take", "[", 
          RowBox[{"#", ",", "1"}], "]"}], "&"}], "/@", 
        RowBox[{"Select", "[", 
         RowBox[{"rndmaxlengthpairs", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "==", "16"}], "&"}]}], "]"}]}], 
       "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Take", "[", 
          RowBox[{"#", ",", "1"}], "]"}], "&"}], "/@", 
        RowBox[{"Select", "[", 
         RowBox[{"mdlmaxlengthpairs", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "==", "16"}], "&"}]}], "]"}]}], 
       "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Take", "[", 
          RowBox[{"#", ",", "1"}], "]"}], "&"}], "/@", 
        RowBox[{"Select", "[", 
         RowBox[{"rndmaxlengthpairs", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "==", "32"}], "&"}]}], "]"}]}], 
       "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Take", "[", 
          RowBox[{"#", ",", "1"}], "]"}], "&"}], "/@", 
        RowBox[{"Select", "[", 
         RowBox[{"mdlmaxlengthpairs", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "==", "32"}], "&"}]}], "]"}]}], 
       "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Take", "[", 
          RowBox[{"#", ",", "1"}], "]"}], "&"}], "/@", 
        RowBox[{"Select", "[", 
         RowBox[{"rndmaxlengthpairs", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "==", "64"}], "&"}]}], "]"}]}], 
       "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Take", "[", 
          RowBox[{"#", ",", "1"}], "]"}], "&"}], "/@", 
        RowBox[{"Select", "[", 
         RowBox[{"mdlmaxlengthpairs", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "==", "64"}], "&"}]}], "]"}]}], 
       "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Take", "[", 
          RowBox[{"#", ",", "1"}], "]"}], "&"}], "/@", 
        RowBox[{"Select", "[", 
         RowBox[{"rndmaxlengthpairs", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "==", "128"}], "&"}]}], "]"}]}], 
       "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Take", "[", 
          RowBox[{"#", ",", "1"}], "]"}], "&"}], "/@", 
        RowBox[{"Select", "[", 
         RowBox[{"mdlmaxlengthpairs", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "==", "128"}], "&"}]}], "]"}]}], 
       "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Take", "[", 
          RowBox[{"#", ",", "1"}], "]"}], "&"}], "/@", 
        RowBox[{"Select", "[", 
         RowBox[{"rndmaxlengthpairs", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "==", "256"}], "&"}]}], "]"}]}], 
       "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Take", "[", 
          RowBox[{"#", ",", "1"}], "]"}], "&"}], "/@", 
        RowBox[{"Select", "[", 
         RowBox[{"mdlmaxlengthpairs", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "==", "256"}], "&"}]}], "]"}]}], 
       "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Take", "[", 
          RowBox[{"#", ",", "1"}], "]"}], "&"}], "/@", 
        RowBox[{"Select", "[", 
         RowBox[{"rndmaxlengthpairs", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "==", "512"}], "&"}]}], "]"}]}], 
       "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Take", "[", 
          RowBox[{"#", ",", "1"}], "]"}], "&"}], "/@", 
        RowBox[{"Select", "[", 
         RowBox[{"mdlmaxlengthpairs", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "==", "512"}], "&"}]}], "]"}]}], 
       "]"}]}], "}"}]}], "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.8480033366295595`*^9, 3.8480033720989447`*^9}},
 CellLabel->"(Debug) In[125]:=",
 CellID->147507090],

Cell[TextData[StyleBox["Bins are based on maximum scores (blue is model data, \
yellow is random data):", "CodeText"]], "Text",
 CellChangeTimes->{{3.848179358575167*^9, 3.8481793846371636`*^9}, {
  3.848695296755251*^9, 3.84869531717846*^9}, {3.8487000478740473`*^9, 
  3.848700050044457*^9}, {3.8487001626084747`*^9, 3.848700171728477*^9}},
 CellID->793141435],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], 
    PointBox[{{0.44802198749499955`, 1.8499999999999979`}, {
     15.175714162565008`, 467.15}}]}, 
   {RGBColor[0.982864, 0.7431472, 0.3262672], CapForm[None], {}, {{{}, {{}, {
        {RGBColor[0.982864, 0.7431472, 0.3262672], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GraphicsGroupBox[{Antialiasing -> False, 
                PolygonBox[
                 NCache[{{0.6373034758111047, 
                    Rational[119, 4]}, {1.3626965241888955`, 
                    Rational[119, 4]}, {1.3626965241888955`, 
                    Rational[49, 2]}, {0.6373034758111047, 
                    Rational[49, 2]}}, {{0.6373034758111047, 29.75}, {
                  1.3626965241888955`, 29.75}, {1.3626965241888955`, 24.5}, {
                  0.6373034758111047, 24.5}}]], {}, {{}, {}}, {}, {
                 GrayLevel[0], 
                 GrayLevel[1], 
                 
                 LineBox[{{1.3626965241888955`, 29}, {
                   0.6373034758111046, 29}}]}, {}, {
                 GrayLevel[0], 
                 GrayLevel[0.5], 
                 LineBox[
                  NCache[{{{1., 
                    Rational[49, 2]}, {1., 23}}, {{1., 
                    Rational[119, 4]}, {1., 30}}}, {{{1., 24.5}, {1., 23}}, {{
                    1., 29.75}, {1., 30}}}]]}, {
                 GrayLevel[0], 
                 GrayLevel[0.5], 
                 
                 LineBox[{{{1.1813482620944478`, 23}, {
                    0.8186517379055522, 23}}, {{1.1813482620944478`, 30}, {
                    0.8186517379055522, 30}}}]}, {}}]},
             
             ImageSizeCache->{{39.19172965321981, 57.08360141047761}, {
              79.64972410204437, 85.32171486288459}}],
            "DelayedMouseEffectStyle"],
           StyleBox[
            TagBox[
             GridBox[{{
                StyleBox["\"max\"", Bold, StripOnInput -> False], "30"}, {
                StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                FractionBox["119", "4"]}, {
                StyleBox["\"median\"", Bold, StripOnInput -> False], "29"}, {
                StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                FractionBox["49", "2"]}, {
                StyleBox["\"min\"", Bold, StripOnInput -> False], "23"}}, 
              GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
              AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}, "Rows" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}}, 
              GridBoxFrame -> {
               "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> Directive[
                AbsoluteThickness[1], 
                Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
          Annotation[#, 
           Style[
            Grid[{{
               Style["max", Bold], 30}, {
               Style["75%", Bold], 
               Rational[119, 4]}, {
               Style["median", Bold], 29}, {
               Style["25%", Bold], 
               Rational[49, 2]}, {
               Style["min", Bold], 23}}, Dividers -> {{
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
             Frame -> GrayLevel[0], BaseStyle -> Directive[
               AbsoluteThickness[1], 
               Dashing[{}]]], {}], "Tooltip"]& ]}, {}}}, {}, {}}, {{}, {{}, {
        {RGBColor[0.982864, 0.7431472, 0.3262672], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GraphicsGroupBox[{Antialiasing -> False, 
                
                PolygonBox[{{2.741259500821106, 48}, {
                  3.4666525491988964`, 48}, {3.4666525491988964`, 40}, {
                  2.741259500821106, 40}}], {}, {{}, {}}, {}, {
                 GrayLevel[0], 
                 GrayLevel[1], 
                 
                 LineBox[{{3.466652549198897, 43}, {
                   2.741259500821106, 43}}]}, {}, {
                 GrayLevel[0], 
                 GrayLevel[0.5], 
                 
                 LineBox[{{{3.1039560250100013`, 40}, {
                    3.1039560250100013`, 28}}, {{3.1039560250100013`, 48}, {
                    3.1039560250100013`, 61}}}]}, {
                 GrayLevel[0], 
                 GrayLevel[0.5], 
                 
                 LineBox[{{{3.285304287104449, 28}, {
                    2.9226077629155536`, 28}}, {{3.285304287104449, 61}, {
                    2.9226077629155536`, 61}}}]}, {}}]},
             
             ImageSizeCache->{{82.88228494990011, 100.77415670715791`}, {
              67.05679942791366, 83.29059797996028}}],
            "DelayedMouseEffectStyle"],
           StyleBox[
            TagBox[
             GridBox[{{
                StyleBox["\"max\"", Bold, StripOnInput -> False], "61"}, {
                StyleBox["\"75%\"", Bold, StripOnInput -> False], "48"}, {
                StyleBox["\"median\"", Bold, StripOnInput -> False], "43"}, {
                StyleBox["\"25%\"", Bold, StripOnInput -> False], "40"}, {
                StyleBox["\"min\"", Bold, StripOnInput -> False], "28"}}, 
              GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
              AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}, "Rows" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}}, 
              GridBoxFrame -> {
               "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> Directive[
                AbsoluteThickness[1], 
                Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
          Annotation[#, 
           Style[
            Grid[{{
               Style["max", Bold], 61}, {
               Style["75%", Bold], 48}, {
               Style["median", Bold], 43}, {
               Style["25%", Bold], 40}, {
               Style["min", Bold], 28}}, Dividers -> {{
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
             Frame -> GrayLevel[0], BaseStyle -> Directive[
               AbsoluteThickness[1], 
               Dashing[{}]]], {}], "Tooltip"]& ]}, 
        {RGBColor[0.4992, 0.5552, 0.8309304], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GraphicsGroupBox[{Antialiasing -> False, 
                PolygonBox[
                 
                 NCache[{{3.741259500821106, 49}, {4.466652549198897, 49}, {
                   4.466652549198897, 
                    Rational[79, 2]}, {3.741259500821106, 
                    Rational[79, 2]}}, {{3.741259500821106, 49}, {
                   4.466652549198897, 49}, {4.466652549198897, 39.5}, {
                   3.741259500821106, 39.5}}]], {}, {{}, {}}, {}, {
                 GrayLevel[0], 
                 GrayLevel[1], 
                 
                 LineBox[{{4.466652549198897, 44}, {
                   3.741259500821106, 44}}]}, {}, {
                 GrayLevel[0], 
                 GrayLevel[0.5], 
                 LineBox[
                  NCache[{{{4.103956025010001, 
                    Rational[79, 2]}, {4.103956025010001, 28}}, {{
                    4.103956025010001, 49}, {4.103956025010001, 68}}}, {{{
                    4.103956025010001, 39.5}, {4.103956025010001, 28}}, {{
                    4.103956025010001, 49}, {4.103956025010001, 68}}}]]}, {
                 GrayLevel[0], 
                 GrayLevel[0.5], 
                 
                 LineBox[{{{4.285304287104449, 28}, {
                    3.9226077629155536`, 28}}, {{4.285304287104449, 68}, {
                    3.9226077629155536`, 68}}}]}, {}}]},
             
             ImageSizeCache->{{103.6481920208298, 121.54006377808761`}, {
              64.21323579181961, 83.29059797996028}}],
            "DelayedMouseEffectStyle"],
           StyleBox[
            TagBox[
             GridBox[{{
                StyleBox["\"max\"", Bold, StripOnInput -> False], "68"}, {
                StyleBox["\"75%\"", Bold, StripOnInput -> False], "49"}, {
                StyleBox["\"median\"", Bold, StripOnInput -> False], "44"}, {
                StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                FractionBox["79", "2"]}, {
                StyleBox["\"min\"", Bold, StripOnInput -> False], "28"}}, 
              GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
              AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}, "Rows" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}}, 
              GridBoxFrame -> {
               "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> Directive[
                AbsoluteThickness[1], 
                Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
          Annotation[#, 
           Style[
            Grid[{{
               Style["max", Bold], 68}, {
               Style["75%", Bold], 49}, {
               Style["median", Bold], 44}, {
               Style["25%", Bold], 
               Rational[79, 2]}, {
               Style["min", Bold], 28}}, Dividers -> {{
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
             Frame -> GrayLevel[0], BaseStyle -> Directive[
               AbsoluteThickness[1], 
               Dashing[{}]]], {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {
        {RGBColor[0.982864, 0.7431472, 0.3262672], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GraphicsGroupBox[{Antialiasing -> False, 
                
                PolygonBox[{{4.845215525831107, 70}, {
                  5.570608574208898, 70}, {5.570608574208898, 56}, {
                  4.845215525831107, 56}}], {}, {{}, {}}, {}, {
                 GrayLevel[0], 
                 GrayLevel[1], 
                 
                 LineBox[{{5.570608574208898, 63}, {
                   4.845215525831107, 63}}]}, {}, {
                 GrayLevel[0], 
                 GrayLevel[0.5], 
                 
                 LineBox[{{{5.207912050020003, 56}, {
                    5.207912050020003, 34}}, {{5.207912050020003, 70}, {
                    5.207912050020003, 111}}}]}, {
                 GrayLevel[0], 
                 GrayLevel[0.5], 
                 
                 LineBox[{{{5.38926031211445, 34}, {
                    5.026563787925555, 34}}, {{5.38926031211445, 111}, {
                    5.026563787925555, 111}}}]}, {}}]},
             
             ImageSizeCache->{{126.5728402465804, 144.46471200383823`}, {
              46.745630598670566`, 80.85325772045113}}],
            "DelayedMouseEffectStyle"],
           StyleBox[
            TagBox[
             GridBox[{{
                StyleBox["\"max\"", Bold, StripOnInput -> False], "111"}, {
                StyleBox["\"75%\"", Bold, StripOnInput -> False], "70"}, {
                StyleBox["\"median\"", Bold, StripOnInput -> False], "63"}, {
                StyleBox["\"25%\"", Bold, StripOnInput -> False], "56"}, {
                StyleBox["\"min\"", Bold, StripOnInput -> False], "34"}}, 
              GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
              AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}, "Rows" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}}, 
              GridBoxFrame -> {
               "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> Directive[
                AbsoluteThickness[1], 
                Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
          Annotation[#, 
           Style[
            Grid[{{
               Style["max", Bold], 111}, {
               Style["75%", Bold], 70}, {
               Style["median", Bold], 63}, {
               Style["25%", Bold], 56}, {
               Style["min", Bold], 34}}, Dividers -> {{
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
             Frame -> GrayLevel[0], BaseStyle -> Directive[
               AbsoluteThickness[1], 
               Dashing[{}]]], {}], "Tooltip"]& ]}, 
        {RGBColor[0.4992, 0.5552, 0.8309304], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GraphicsGroupBox[{Antialiasing -> False, 
                
                PolygonBox[{{5.845215525831107, 73}, {
                  6.570608574208898, 73}, {6.570608574208898, 57}, {
                  5.845215525831107, 57}}], {}, {{}, {}}, {}, {
                 GrayLevel[0], 
                 GrayLevel[1], 
                 
                 LineBox[{{6.570608574208898, 65}, {
                   5.845215525831107, 65}}]}, {}, {
                 GrayLevel[0], 
                 GrayLevel[0.5], 
                 
                 LineBox[{{{6.207912050020003, 57}, {
                    6.207912050020003, 35}}, {{6.207912050020003, 73}, {
                    6.207912050020003, 110}}}]}, {
                 GrayLevel[0], 
                 GrayLevel[0.5], 
                 
                 LineBox[{{{6.38926031211445, 35}, {
                    6.026563787925555, 35}}, {{6.38926031211445, 110}, {
                    6.026563787925555, 110}}}]}, {}}]},
             
             ImageSizeCache->{{147.33874731751007`, 165.2306190747679}, {
              47.15185397525543, 80.44703434386626}}],
            "DelayedMouseEffectStyle"],
           StyleBox[
            TagBox[
             GridBox[{{
                StyleBox["\"max\"", Bold, StripOnInput -> False], "110"}, {
                StyleBox["\"75%\"", Bold, StripOnInput -> False], "73"}, {
                StyleBox["\"median\"", Bold, StripOnInput -> False], "65"}, {
                StyleBox["\"25%\"", Bold, StripOnInput -> False], "57"}, {
                StyleBox["\"min\"", Bold, StripOnInput -> False], "35"}}, 
              GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
              AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}, "Rows" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}}, 
              GridBoxFrame -> {
               "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> Directive[
                AbsoluteThickness[1], 
                Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
          Annotation[#, 
           Style[
            Grid[{{
               Style["max", Bold], 110}, {
               Style["75%", Bold], 73}, {
               Style["median", Bold], 65}, {
               Style["25%", Bold], 57}, {
               Style["min", Bold], 35}}, Dividers -> {{
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
             Frame -> GrayLevel[0], BaseStyle -> Directive[
               AbsoluteThickness[1], 
               Dashing[{}]]], {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {
        {RGBColor[0.982864, 0.7431472, 0.3262672], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GraphicsGroupBox[{Antialiasing -> False, 
                
                PolygonBox[{{6.9491715508411085`, 104}, {
                  7.6745645992188996`, 104}, {7.6745645992188996`, 83}, {
                  6.9491715508411085`, 83}}], {}, {{}, {}}, {}, {
                 GrayLevel[0], 
                 GrayLevel[1], 
                 
                 LineBox[{{7.6745645992188996`, 93}, {
                   6.9491715508411085`, 93}}]}, {}, {
                 GrayLevel[0], 
                 GrayLevel[0.5], 
                 
                 LineBox[{{{7.311868075030004, 83}, {
                    7.311868075030004, 48}}, {{7.311868075030004, 104}, {
                    7.311868075030004, 170}}}]}, {
                 GrayLevel[0], 
                 GrayLevel[0.5], 
                 
                 LineBox[{{{7.493216337124451, 48}, {
                    7.130519812935557, 48}}, {{7.493216337124451, 170}, {
                    7.130519812935557, 170}}}]}, {}}]},
             
             ImageSizeCache->{{170.26339554326069`, 188.15526730051852`}, {
              22.77845138016373, 75.16613044826306}}],
            "DelayedMouseEffectStyle"],
           StyleBox[
            TagBox[
             GridBox[{{
                StyleBox["\"max\"", Bold, StripOnInput -> False], "170"}, {
                StyleBox["\"75%\"", Bold, StripOnInput -> False], "104"}, {
                StyleBox["\"median\"", Bold, StripOnInput -> False], "93"}, {
                StyleBox["\"25%\"", Bold, StripOnInput -> False], "83"}, {
                StyleBox["\"min\"", Bold, StripOnInput -> False], "48"}}, 
              GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
              AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}, "Rows" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}}, 
              GridBoxFrame -> {
               "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> Directive[
                AbsoluteThickness[1], 
                Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
          Annotation[#, 
           Style[
            Grid[{{
               Style["max", Bold], 170}, {
               Style["75%", Bold], 104}, {
               Style["median", Bold], 93}, {
               Style["25%", Bold], 83}, {
               Style["min", Bold], 48}}, Dividers -> {{
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
             Frame -> GrayLevel[0], BaseStyle -> Directive[
               AbsoluteThickness[1], 
               Dashing[{}]]], {}], "Tooltip"]& ]}, 
        {RGBColor[0.4992, 0.5552, 0.8309304], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GraphicsGroupBox[{Antialiasing -> False, 
                
                PolygonBox[{{7.9491715508411085`, 106}, {
                  8.674564599218899, 106}, {8.674564599218899, 84}, {
                  7.9491715508411085`, 84}}], {}, {{}, {}}, {}, {
                 GrayLevel[0], 
                 GrayLevel[1], 
                 
                 LineBox[{{8.674564599218899, 94}, {
                   7.949171550841109, 94}}]}, {}, {
                 GrayLevel[0], 
                 GrayLevel[0.5], 
                 
                 LineBox[{{{8.311868075030004, 84}, {
                    8.311868075030004, 52}}, {{8.311868075030004, 106}, {
                    8.311868075030004, 191}}}]}, {
                 GrayLevel[0], 
                 GrayLevel[0.5], 
                 
                 LineBox[{{{8.493216337124451, 52}, {
                    8.130519812935557, 52}}, {{8.493216337124451, 191}, {
                    8.130519812935557, 191}}}]}, {}}]},
             
             ImageSizeCache->{{191.02930261419039`, 208.9211743714482}, {
              14.247760471881634`, 73.54123694192361}}],
            "DelayedMouseEffectStyle"],
           StyleBox[
            TagBox[
             GridBox[{{
                StyleBox["\"max\"", Bold, StripOnInput -> False], "191"}, {
                StyleBox["\"75%\"", Bold, StripOnInput -> False], "106"}, {
                StyleBox["\"median\"", Bold, StripOnInput -> False], "94"}, {
                StyleBox["\"25%\"", Bold, StripOnInput -> False], "84"}, {
                StyleBox["\"min\"", Bold, StripOnInput -> False], "52"}}, 
              GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
              AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}, "Rows" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}}, 
              GridBoxFrame -> {
               "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> Directive[
                AbsoluteThickness[1], 
                Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
          Annotation[#, 
           Style[
            Grid[{{
               Style["max", Bold], 191}, {
               Style["75%", Bold], 106}, {
               Style["median", Bold], 94}, {
               Style["25%", Bold], 84}, {
               Style["min", Bold], 52}}, Dividers -> {{
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
             Frame -> GrayLevel[0], BaseStyle -> Directive[
               AbsoluteThickness[1], 
               Dashing[{}]]], {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {
        {RGBColor[0.982864, 0.7431472, 0.3262672], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GraphicsGroupBox[{Antialiasing -> False, 
                
                PolygonBox[{{9.053127575851109, 153}, {
                  9.7785206242289, 153}, {9.7785206242289, 124}, {
                  9.053127575851109, 124}}], {}, {{}, {}}, {}, {
                 GrayLevel[0], 
                 GrayLevel[1], 
                 
                 LineBox[{{9.7785206242289, 138}, {
                   9.05312757585111, 138}}]}, {}, {
                 GrayLevel[0], 
                 GrayLevel[0.5], 
                 
                 LineBox[{{{9.415824100040005, 124}, {
                    9.415824100040005, 84}}, {{9.415824100040005, 153}, {
                    9.415824100040005, 290}}}]}, {
                 GrayLevel[0], 
                 GrayLevel[0.5], 
                 
                 LineBox[{{{9.597172362134453, 84}, {
                    9.234475837945558, 84}}, {{9.597172362134453, 290}, {
                    9.234475837945558, 290}}}]}, {}}]},
             
             ImageSizeCache->{{213.95395083994097`, 
              231.8458225971988}, {-25.96835381001965, 60.54208889120805}}],
            "DelayedMouseEffectStyle"],
           StyleBox[
            TagBox[
             GridBox[{{
                StyleBox["\"max\"", Bold, StripOnInput -> False], "290"}, {
                StyleBox["\"75%\"", Bold, StripOnInput -> False], "153"}, {
                StyleBox["\"median\"", Bold, StripOnInput -> False], "138"}, {
               
                StyleBox["\"25%\"", Bold, StripOnInput -> False], "124"}, {
                StyleBox["\"min\"", Bold, StripOnInput -> False], "84"}}, 
              GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
              AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}, "Rows" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}}, 
              GridBoxFrame -> {
               "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> Directive[
                AbsoluteThickness[1], 
                Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
          Annotation[#, 
           Style[
            Grid[{{
               Style["max", Bold], 290}, {
               Style["75%", Bold], 153}, {
               Style["median", Bold], 138}, {
               Style["25%", Bold], 124}, {
               Style["min", Bold], 84}}, Dividers -> {{
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
             Frame -> GrayLevel[0], BaseStyle -> Directive[
               AbsoluteThickness[1], 
               Dashing[{}]]], {}], "Tooltip"]& ]}, 
        {RGBColor[0.4992, 0.5552, 0.8309304], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GraphicsGroupBox[{Antialiasing -> False, 
                
                PolygonBox[{{10.053127575851109`, 161}, {
                  10.7785206242289, 161}, {10.7785206242289, 126}, {
                  10.053127575851109`, 126}}], {}, {{}, {}}, {}, {
                 GrayLevel[0], 
                 GrayLevel[1], 
                 
                 LineBox[{{10.7785206242289, 143}, {
                   10.05312757585111, 143}}]}, {}, {
                 GrayLevel[0], 
                 GrayLevel[0.5], 
                 
                 LineBox[{{{10.415824100040005`, 126}, {
                    10.415824100040005`, 83}}, {{10.415824100040005`, 161}, {
                    10.415824100040005`, 289}}}]}, {
                 GrayLevel[0], 
                 GrayLevel[0.5], 
                 
                 LineBox[{{{10.597172362134453`, 83}, {
                    10.234475837945558`, 83}}, {{10.597172362134453`, 289}, {
                    10.234475837945558`, 289}}}]}, {}}]},
             
             ImageSizeCache->{{234.71985791087064`, 
              252.61172966812848`}, {-25.56213043343479, 
              60.948312267792915`}}],
            "DelayedMouseEffectStyle"],
           StyleBox[
            TagBox[
             GridBox[{{
                StyleBox["\"max\"", Bold, StripOnInput -> False], "289"}, {
                StyleBox["\"75%\"", Bold, StripOnInput -> False], "161"}, {
                StyleBox["\"median\"", Bold, StripOnInput -> False], "143"}, {
               
                StyleBox["\"25%\"", Bold, StripOnInput -> False], "126"}, {
                StyleBox["\"min\"", Bold, StripOnInput -> False], "83"}}, 
              GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
              AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}, "Rows" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}}, 
              GridBoxFrame -> {
               "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> Directive[
                AbsoluteThickness[1], 
                Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
          Annotation[#, 
           Style[
            Grid[{{
               Style["max", Bold], 289}, {
               Style["75%", Bold], 161}, {
               Style["median", Bold], 143}, {
               Style["25%", Bold], 126}, {
               Style["min", Bold], 83}}, Dividers -> {{
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
             Frame -> GrayLevel[0], BaseStyle -> Directive[
               AbsoluteThickness[1], 
               Dashing[{}]]], {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {
        {RGBColor[0.982864, 0.7431472, 0.3262672], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GraphicsGroupBox[{Antialiasing -> False, 
                
                PolygonBox[{{11.15708360086111, 222}, {
                  11.882476649238901`, 222}, {11.882476649238901`, 188}, {
                  11.15708360086111, 188}}], {}, {{}, {}}, {}, {
                 GrayLevel[0], 
                 GrayLevel[1], 
                 
                 LineBox[{{11.8824766492389, 204}, {
                   11.15708360086111, 204}}]}, {}, {
                 GrayLevel[0], 
                 GrayLevel[0.5], 
                 
                 LineBox[{{{11.519780125050005`, 188}, {
                    11.519780125050005`, 148}}, {{11.519780125050005`, 222}, {
                    11.519780125050005`, 326}}}]}, {
                 GrayLevel[0], 
                 GrayLevel[0.5], 
                 
                 LineBox[{{{11.701128387144452`, 148}, {
                    11.338431862955558`, 148}}, {{11.701128387144452`, 326}, {
                    11.338431862955558`, 326}}}]}, {}}]},
             
             ImageSizeCache->{{257.64450613662126`, 
              275.5363778938791}, {-40.59239536707469, 34.5437927897769}}],
            "DelayedMouseEffectStyle"],
           StyleBox[
            TagBox[
             GridBox[{{
                StyleBox["\"max\"", Bold, StripOnInput -> False], "326"}, {
                StyleBox["\"75%\"", Bold, StripOnInput -> False], "222"}, {
                StyleBox["\"median\"", Bold, StripOnInput -> False], "204"}, {
               
                StyleBox["\"25%\"", Bold, StripOnInput -> False], "188"}, {
                StyleBox["\"min\"", Bold, StripOnInput -> False], "148"}}, 
              GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
              AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}, "Rows" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}}, 
              GridBoxFrame -> {
               "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> Directive[
                AbsoluteThickness[1], 
                Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
          Annotation[#, 
           Style[
            Grid[{{
               Style["max", Bold], 326}, {
               Style["75%", Bold], 222}, {
               Style["median", Bold], 204}, {
               Style["25%", Bold], 188}, {
               Style["min", Bold], 148}}, Dividers -> {{
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
             Frame -> GrayLevel[0], BaseStyle -> Directive[
               AbsoluteThickness[1], 
               Dashing[{}]]], {}], "Tooltip"]& ]}, 
        {RGBColor[0.4992, 0.5552, 0.8309304], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GraphicsGroupBox[{Antialiasing -> False, 
                PolygonBox[
                 
                 NCache[{{12.15708360086111, 241}, {12.882476649238901`, 241},
                    {12.882476649238901`, 
                    Rational[397, 2]}, {12.15708360086111, 
                    Rational[397, 2]}}, {{12.15708360086111, 241}, {
                   12.882476649238901`, 241}, {12.882476649238901`, 198.5}, {
                   12.15708360086111, 198.5}}]], {}, {{}, {}}, {}, {
                 GrayLevel[0], 
                 GrayLevel[1], 
                 
                 LineBox[{{12.8824766492389, 218}, {
                   12.15708360086111, 218}}]}, {}, {
                 GrayLevel[0], 
                 GrayLevel[0.5], 
                 LineBox[
                  NCache[{{{12.519780125050005`, 
                    Rational[397, 2]}, {12.519780125050005`, 149}}, {{
                    12.519780125050005`, 241}, {
                    12.519780125050005`, 409}}}, {{{12.519780125050005`, 
                    198.5}, {12.519780125050005`, 149}}, {{
                    12.519780125050005`, 241}, {
                    12.519780125050005`, 409}}}]]}, {
                 GrayLevel[0], 
                 GrayLevel[0.5], 
                 
                 LineBox[{{{12.701128387144452`, 149}, {
                    12.338431862955558`, 149}}, {{12.701128387144452`, 409}, {
                    12.338431862955558`, 409}}}]}, {}}]},
             
             ImageSizeCache->{{278.41041320755096`, 
              296.3022849648088}, {-74.3089356236182, 34.13756941319204}}],
            "DelayedMouseEffectStyle"],
           StyleBox[
            TagBox[
             GridBox[{{
                StyleBox["\"max\"", Bold, StripOnInput -> False], "409"}, {
                StyleBox["\"75%\"", Bold, StripOnInput -> False], "241"}, {
                StyleBox["\"median\"", Bold, StripOnInput -> False], "218"}, {
               
                StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                FractionBox["397", "2"]}, {
                StyleBox["\"min\"", Bold, StripOnInput -> False], "149"}}, 
              GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
              AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}, "Rows" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}}, 
              GridBoxFrame -> {
               "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> Directive[
                AbsoluteThickness[1], 
                Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
          Annotation[#, 
           Style[
            Grid[{{
               Style["max", Bold], 409}, {
               Style["75%", Bold], 241}, {
               Style["median", Bold], 218}, {
               Style["25%", Bold], 
               Rational[397, 2]}, {
               Style["min", Bold], 149}}, Dividers -> {{
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
             Frame -> GrayLevel[0], BaseStyle -> Directive[
               AbsoluteThickness[1], 
               Dashing[{}]]], {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {
        {RGBColor[0.982864, 0.7431472, 0.3262672], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GraphicsGroupBox[{Antialiasing -> False, 
                PolygonBox[
                 NCache[{{13.261039625871112`, 
                    Rational[1381, 4]}, {13.986432674248903`, 
                    Rational[1381, 4]}, {13.986432674248903`, 
                    Rational[1219, 4]}, {13.261039625871112`, 
                    Rational[1219, 4]}}, {{13.261039625871112`, 345.25}, {
                  13.986432674248903`, 345.25}, {13.986432674248903`, 
                  304.75}, {13.261039625871112`, 
                  304.75}}]], {}, {{}, {}}, {}, {
                 GrayLevel[0], 
                 GrayLevel[1], 
                 
                 LineBox[{{13.986432674248903`, 332}, {
                   13.261039625871113`, 332}}]}, {}, {
                 GrayLevel[0], 
                 GrayLevel[0.5], 
                 LineBox[
                  NCache[{{{13.623736150060008`, 
                    Rational[1219, 4]}, {13.623736150060008`, 277}}, {{
                    13.623736150060008`, 
                    Rational[1381, 4]}, {13.623736150060008`, 355}}}, {{{
                    13.623736150060008`, 304.75}, {
                    13.623736150060008`, 277}}, {{13.623736150060008`, 
                    345.25}, {13.623736150060008`, 355}}}]]}, {
                 GrayLevel[0], 
                 GrayLevel[0.5], 
                 
                 LineBox[{{{13.805084412154455`, 277}, {
                    13.44238788796556, 277}}, {{13.805084412154455`, 355}, {
                    13.44238788796556, 355}}}]}, {}}]},
             
             ImageSizeCache->{{301.3350614333016, 
              319.2269331905594}, {-52.37287328803566, -17.85902278967025}}],
            "DelayedMouseEffectStyle"],
           StyleBox[
            TagBox[
             GridBox[{{
                StyleBox["\"max\"", Bold, StripOnInput -> False], "355"}, {
                StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                FractionBox["1381", "4"]}, {
                StyleBox["\"median\"", Bold, StripOnInput -> False], "332"}, {
               
                StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                FractionBox["1219", "4"]}, {
                StyleBox["\"min\"", Bold, StripOnInput -> False], "277"}}, 
              GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
              AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}, "Rows" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}}, 
              GridBoxFrame -> {
               "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> Directive[
                AbsoluteThickness[1], 
                Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
          Annotation[#, 
           Style[
            Grid[{{
               Style["max", Bold], 355}, {
               Style["75%", Bold], 
               Rational[1381, 4]}, {
               Style["median", Bold], 332}, {
               Style["25%", Bold], 
               Rational[1219, 4]}, {
               Style["min", Bold], 277}}, Dividers -> {{
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
             Frame -> GrayLevel[0], BaseStyle -> Directive[
               AbsoluteThickness[1], 
               Dashing[{}]]], {}], "Tooltip"]& ]}, 
        {RGBColor[0.4992, 0.5552, 0.8309304], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GraphicsGroupBox[{Antialiasing -> False, 
                PolygonBox[
                 NCache[{{14.261039625871112`, 
                    Rational[1543, 4]}, {14.986432674248903`, 
                    Rational[1543, 4]}, {14.986432674248903`, 338}, {
                   14.261039625871112`, 338}}, {{14.261039625871112`, 
                   385.75}, {14.986432674248903`, 385.75}, {
                   14.986432674248903`, 338}, {
                   14.261039625871112`, 338}}]], {}, {{}, {}}, {}, {
                 GrayLevel[0], 
                 GrayLevel[1], 
                 
                 LineBox[{{14.986432674248903`, 348}, {
                   14.261039625871113`, 348}}]}, {}, {
                 GrayLevel[0], 
                 GrayLevel[0.5], 
                 LineBox[
                  
                  NCache[{{{14.623736150060008`, 338}, {
                    14.623736150060008`, 315}}, {{14.623736150060008`, 
                    Rational[1543, 4]}, {14.623736150060008`, 446}}}, {{{
                    14.623736150060008`, 338}, {14.623736150060008`, 315}}, {{
                    14.623736150060008`, 385.75}, {
                    14.623736150060008`, 446}}}]]}, {
                 GrayLevel[0], 
                 GrayLevel[0.5], 
                 
                 LineBox[{{{14.805084412154455`, 315}, {
                    14.44238788796556, 315}}, {{14.805084412154455`, 446}, {
                    14.44238788796556, 446}}}]}, {}}]},
             
             ImageSizeCache->{{322.1009685042313, 
              339.9928402614891}, {-89.33920055725808, -33.295511099894995`}}],
            "DelayedMouseEffectStyle"],
           StyleBox[
            TagBox[
             GridBox[{{
                StyleBox["\"max\"", Bold, StripOnInput -> False], "446"}, {
                StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                FractionBox["1543", "4"]}, {
                StyleBox["\"median\"", Bold, StripOnInput -> False], "348"}, {
               
                StyleBox["\"25%\"", Bold, StripOnInput -> False], "338"}, {
                StyleBox["\"min\"", Bold, StripOnInput -> False], "315"}}, 
              GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
              AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}, "Rows" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}}, 
              GridBoxFrame -> {
               "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> Directive[
                AbsoluteThickness[1], 
                Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
          Annotation[#, 
           Style[
            Grid[{{
               Style["max", Bold], 446}, {
               Style["75%", Bold], 
               Rational[1543, 4]}, {
               Style["median", Bold], 348}, {
               Style["25%", Bold], 338}, {
               Style["min", Bold], 315}}, Dividers -> {{
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
             Frame -> GrayLevel[0], BaseStyle -> Directive[
               AbsoluteThickness[1], 
               Dashing[{}]]], {}], 
           "Tooltip"]& ]}}}, {}, {}}}, {}, {}}, {{{{{{{{{}, {}}, {}}, {}}, \
{}}, {}}, {}}, {{{{{{{}, {}}, {}}, {{{}, {}}, {}}}, {}}, {}}, {}}, {{{{{{{}, \
{}}, {}}, {{{}, {}}, {}}}, {}}, {}}, {}}, {{{{{{{}, {}}, {}}, {{{}, {}}, \
{}}}, {}}, {}}, {}}, {{{{{{{}, {}}, {}}, {{{}, {}}, {}}}, {}}, {}}, {}}, \
{{{{{{{}, {}}, {}}, {{{}, {}}, {}}}, {}}, {}}, {}}, {{{{{{{}, {}}, {}}, {{{}, \
{}}, {}}}, {}}, {}}, {}}}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{-0.0801529841107852, 1.8499999999999979`},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {{{1., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {2., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      0.6373034758111047, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
      2.3626965241888955`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
      3.1039560250100013`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      4.103956025010001, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      2.741259500821106, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
      4.466652549198897, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
      5.207912050020003, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      6.207912050020003, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      4.845215525831107, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
      6.570608574208898, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
      7.311868075030004, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      8.311868075030004, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      6.9491715508411085`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
      8.674564599218899, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
      9.415824100040005, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      10.415824100040005`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      9.053127575851109, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
      10.7785206242289, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
      11.519780125050005`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      12.519780125050005`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      11.15708360086111, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
      12.882476649238901`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
      13.623736150060008`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      14.623736150060008`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      13.261039625871112`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
      14.986432674248903`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
      0.6373034758111047, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
      14.986432674248903`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}, {{1., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {2., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      0.6373034758111047, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
      2.3626965241888955`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
      3.1039560250100013`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      4.103956025010001, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      2.741259500821106, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
      4.466652549198897, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
      5.207912050020003, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      6.207912050020003, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      4.845215525831107, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
      6.570608574208898, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
      7.311868075030004, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      8.311868075030004, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      6.9491715508411085`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
      8.674564599218899, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
      9.415824100040005, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      10.415824100040005`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      9.053127575851109, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
      10.7785206242289, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
      11.519780125050005`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      12.519780125050005`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      11.15708360086111, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
      12.882476649238901`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
      13.623736150060008`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      14.623736150060008`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      13.261039625871112`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
      14.986432674248903`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
      0.6373034758111047, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
      14.986432674248903`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{{{1., 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {2., 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     0.6373034758111047, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
     2.3626965241888955`, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
     3.1039560250100013`, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     4.103956025010001, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     2.741259500821106, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
     4.466652549198897, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
     5.207912050020003, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     6.207912050020003, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     4.845215525831107, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
     6.570608574208898, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
     7.311868075030004, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     8.311868075030004, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     6.9491715508411085`, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
     8.674564599218899, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
     9.415824100040005, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     10.415824100040005`, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     9.053127575851109, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
     10.7785206242289, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
     11.519780125050005`, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     12.519780125050005`, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     11.15708360086111, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
     12.882476649238901`, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
     13.623736150060008`, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     14.623736150060008`, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     13.261039625871112`, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
     14.986432674248903`, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
     0.6373034758111047, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
     14.986432674248903`, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}, 
    Automatic}]], "Output",
 CellChangeTimes->{3.8480033765318556`*^9},
 CellLabel->"Out[47]=",
 CellID->308095879],

Cell["\<\
As we can see, each bin of games (e.g. max score of 8, 16, etc...) generally \
has very similar distributions whether the games are played randomly or using \
the Predict model, though the highest two bins (max scores of 256 and 512) \
show increased game lengths compared with the random move games.\
\>", "Text",
 CellChangeTimes->{{3.8480950120973535`*^9, 3.848095075679813*^9}, {
  3.84809694152677*^9, 3.848097020136366*^9}, {3.8481790694639344`*^9, 
  3.8481790810876207`*^9}, {3.848333655271566*^9, 3.848333657260417*^9}},
 CellID->281362675],

Cell["\<\
The plot below uses the first occurrence of the max value rather than the \
length of the game.\
\>", "Text",
 CellChangeTimes->{{3.848080039893446*^9, 3.848080083107958*^9}, {
  3.8480950939734125`*^9, 3.8480950953121476`*^9}, {3.848700075678987*^9, 
  3.848700087789056*^9}, {3.8487001912714653`*^9, 3.8487002182976103`*^9}},
 CellID->953394228],

Cell[BoxData[
 RowBox[{"BoxWhiskerChart", "[", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Take", "[", 
          RowBox[{"#", ",", "1"}], "]"}], "&"}], "/@", 
        RowBox[{"Select", "[", 
         RowBox[{"rndmaxvalpairs", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "==", "8"}], "&"}]}], "]"}]}], 
       "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Take", "[", 
          RowBox[{"#", ",", "1"}], "]"}], "&"}], "/@", 
        RowBox[{"Select", "[", 
         RowBox[{"mdlmaxvalpairs", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "==", "8"}], "&"}]}], "]"}]}], 
       "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Take", "[", 
          RowBox[{"#", ",", "1"}], "]"}], "&"}], "/@", 
        RowBox[{"Select", "[", 
         RowBox[{"rndmaxvalpairs", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "==", "16"}], "&"}]}], "]"}]}], 
       "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Take", "[", 
          RowBox[{"#", ",", "1"}], "]"}], "&"}], "/@", 
        RowBox[{"Select", "[", 
         RowBox[{"mdlmaxvalpairs", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "==", "16"}], "&"}]}], "]"}]}], 
       "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Take", "[", 
          RowBox[{"#", ",", "1"}], "]"}], "&"}], "/@", 
        RowBox[{"Select", "[", 
         RowBox[{"rndmaxvalpairs", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "==", "32"}], "&"}]}], "]"}]}], 
       "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Take", "[", 
          RowBox[{"#", ",", "1"}], "]"}], "&"}], "/@", 
        RowBox[{"Select", "[", 
         RowBox[{"mdlmaxvalpairs", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "==", "32"}], "&"}]}], "]"}]}], 
       "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Take", "[", 
          RowBox[{"#", ",", "1"}], "]"}], "&"}], "/@", 
        RowBox[{"Select", "[", 
         RowBox[{"rndmaxvalpairs", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "==", "64"}], "&"}]}], "]"}]}], 
       "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Take", "[", 
          RowBox[{"#", ",", "1"}], "]"}], "&"}], "/@", 
        RowBox[{"Select", "[", 
         RowBox[{"mdlmaxvalpairs", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "==", "64"}], "&"}]}], "]"}]}], 
       "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Take", "[", 
          RowBox[{"#", ",", "1"}], "]"}], "&"}], "/@", 
        RowBox[{"Select", "[", 
         RowBox[{"rndmaxvalpairs", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "==", "128"}], "&"}]}], "]"}]}], 
       "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Take", "[", 
          RowBox[{"#", ",", "1"}], "]"}], "&"}], "/@", 
        RowBox[{"Select", "[", 
         RowBox[{"mdlmaxvalpairs", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "==", "128"}], "&"}]}], "]"}]}], 
       "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Take", "[", 
          RowBox[{"#", ",", "1"}], "]"}], "&"}], "/@", 
        RowBox[{"Select", "[", 
         RowBox[{"rndmaxvalpairs", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "==", "256"}], "&"}]}], "]"}]}], 
       "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Take", "[", 
          RowBox[{"#", ",", "1"}], "]"}], "&"}], "/@", 
        RowBox[{"Select", "[", 
         RowBox[{"mdlmaxvalpairs", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "==", "256"}], "&"}]}], "]"}]}], 
       "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Take", "[", 
          RowBox[{"#", ",", "1"}], "]"}], "&"}], "/@", 
        RowBox[{"Select", "[", 
         RowBox[{"rndmaxvalpairs", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "==", "512"}], "&"}]}], "]"}]}], 
       "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Take", "[", 
          RowBox[{"#", ",", "1"}], "]"}], "&"}], "/@", 
        RowBox[{"Select", "[", 
         RowBox[{"mdlmaxvalpairs", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "==", "512"}], "&"}]}], "]"}]}], 
       "]"}]}], "}"}]}], "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.848003149613159*^9, 3.848003264133382*^9}},
 CellLabel->"In[46]:=",
 CellID->19950555],

Cell["First occurrence of the maximum values:", "CodeText",
 CellChangeTimes->{{3.848695354488261*^9, 3.848695362862831*^9}},
 CellID->63119132],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], 
    PointBox[{{0.44802198749499955`, -16.3}, {15.175714162565008`, 
     408.3}}]}, 
   {RGBColor[0.982864, 0.7431472, 0.3262672], CapForm[None], {}, {{{}, {{}, {
        {RGBColor[0.982864, 0.7431472, 0.3262672], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GraphicsGroupBox[{Antialiasing -> False, 
                PolygonBox[
                 NCache[{{0.6373034758111047, 
                    Rational[15, 2]}, {1.3626965241888955`, 
                    Rational[15, 2]}, {1.3626965241888955`, 
                    Rational[15, 4]}, {0.6373034758111047, 
                    Rational[15, 4]}}, {{0.6373034758111047, 7.5}, {
                  1.3626965241888955`, 7.5}, {1.3626965241888955`, 3.75}, {
                  0.6373034758111047, 3.75}}]], {}, {{}, {}}, {}, {
                 GrayLevel[0], 
                 GrayLevel[1], 
                 
                 LineBox[{{1.3626965241888955`, 6}, {
                   0.6373034758111046, 6}}]}, {}, {
                 GrayLevel[0], 
                 GrayLevel[0.5], 
                 LineBox[
                  NCache[{{{1., 
                    Rational[15, 4]}, {1., 3}}, {{1., 
                    Rational[15, 2]}, {1., 8}}}, {{{1., 3.75}, {1., 3}}, {{1.,
                     7.5}, {1., 8}}}]]}, {
                 GrayLevel[0], 
                 GrayLevel[0.5], 
                 
                 LineBox[{{{1.1813482620944478`, 3}, {
                    0.8186517379055522, 3}}, {{1.1813482620944478`, 8}, {
                    0.8186517379055522, 8}}}]}, {}}]},
             
             ImageSizeCache->{{39.19172965321981, 57.083601410477605`}, {
              80.26747830426022, 85.3217148628846}}],
            "DelayedMouseEffectStyle"],
           StyleBox[
            TagBox[
             GridBox[{{
                StyleBox["\"max\"", Bold, StripOnInput -> False], "8"}, {
                StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                FractionBox["15", "2"]}, {
                StyleBox["\"median\"", Bold, StripOnInput -> False], "6"}, {
                StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                FractionBox["15", "4"]}, {
                StyleBox["\"min\"", Bold, StripOnInput -> False], "3"}}, 
              GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
              AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}, "Rows" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}}, 
              GridBoxFrame -> {
               "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> Directive[
                AbsoluteThickness[1], 
                Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
          Annotation[#, 
           Style[
            Grid[{{
               Style["max", Bold], 8}, {
               Style["75%", Bold], 
               Rational[15, 2]}, {
               Style["median", Bold], 6}, {
               Style["25%", Bold], 
               Rational[15, 4]}, {
               Style["min", Bold], 3}}, Dividers -> {{
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
             Frame -> GrayLevel[0], BaseStyle -> Directive[
               AbsoluteThickness[1], 
               Dashing[{}]]], {}], "Tooltip"]& ]}, {}}}, {}, {}}, {{}, {{}, {
        {RGBColor[0.982864, 0.7431472, 0.3262672], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GraphicsGroupBox[{Antialiasing -> False, 
                
                PolygonBox[{{2.741259500821106, 19}, {
                  3.4666525491988964`, 19}, {3.4666525491988964`, 12}, {
                  2.741259500821106, 12}}], {}, {{}, {}}, {}, {
                 GrayLevel[0], 
                 GrayLevel[1], 
                 
                 LineBox[{{3.466652549198897, 15}, {
                   2.741259500821106, 15}}]}, {}, {
                 GrayLevel[0], 
                 GrayLevel[0.5], 
                 
                 LineBox[{{{3.1039560250100013`, 12}, {
                    3.1039560250100013`, 8}}, {{3.1039560250100013`, 19}, {
                    3.1039560250100013`, 39}}}]}, {
                 GrayLevel[0], 
                 GrayLevel[0.5], 
                 
                 LineBox[{{{3.285304287104449, 8}, {
                    2.9226077629155536`, 8}}, {{3.285304287104449, 39}, {
                    2.9226077629155536`, 39}}}]}, {}}]},
             
             ImageSizeCache->{{82.88228494990011, 100.77415670715791`}, {
              66.46745981421543, 83.09590542900641}}],
            "DelayedMouseEffectStyle"],
           StyleBox[
            TagBox[
             GridBox[{{
                StyleBox["\"max\"", Bold, StripOnInput -> False], "39"}, {
                StyleBox["\"75%\"", Bold, StripOnInput -> False], "19"}, {
                StyleBox["\"median\"", Bold, StripOnInput -> False], "15"}, {
                StyleBox["\"25%\"", Bold, StripOnInput -> False], "12"}, {
                StyleBox["\"min\"", Bold, StripOnInput -> False], "8"}}, 
              GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
              AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}, "Rows" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}}, 
              GridBoxFrame -> {
               "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> Directive[
                AbsoluteThickness[1], 
                Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
          Annotation[#, 
           Style[
            Grid[{{
               Style["max", Bold], 39}, {
               Style["75%", Bold], 19}, {
               Style["median", Bold], 15}, {
               Style["25%", Bold], 12}, {
               Style["min", Bold], 8}}, Dividers -> {{
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
             Frame -> GrayLevel[0], BaseStyle -> Directive[
               AbsoluteThickness[1], 
               Dashing[{}]]], {}], "Tooltip"]& ]}, 
        {RGBColor[0.4992, 0.5552, 0.8309304], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GraphicsGroupBox[{Antialiasing -> False, 
                PolygonBox[
                 NCache[{{3.741259500821106, 
                    Rational[37, 2]}, {4.466652549198897, 
                    Rational[37, 2]}, {4.466652549198897, 13}, {
                   3.741259500821106, 13}}, {{3.741259500821106, 18.5}, {
                   4.466652549198897, 18.5}, {4.466652549198897, 13}, {
                   3.741259500821106, 13}}]], {}, {{}, {}}, {}, {
                 GrayLevel[0], 
                 GrayLevel[1], 
                 
                 LineBox[{{4.466652549198897, 15}, {
                   3.741259500821106, 15}}]}, {}, {
                 GrayLevel[0], 
                 GrayLevel[0.5], 
                 LineBox[
                  
                  NCache[{{{4.103956025010001, 13}, {
                    4.103956025010001, 7}}, {{4.103956025010001, 
                    Rational[37, 2]}, {4.103956025010001, 30}}}, {{{
                    4.103956025010001, 13}, {4.103956025010001, 7}}, {{
                    4.103956025010001, 18.5}, {4.103956025010001, 30}}}]]}, {
                 GrayLevel[0], 
                 GrayLevel[0.5], 
                 
                 LineBox[{{{4.285304287104449, 7}, {
                    3.9226077629155536`, 7}}, {{4.285304287104449, 30}, {
                    3.9226077629155536`, 30}}}]}, {}}]},
             
             ImageSizeCache->{{103.6481920208298, 121.54006377808761`}, {
              70.47391679519617, 83.54106731578204}}],
            "DelayedMouseEffectStyle"],
           StyleBox[
            TagBox[
             GridBox[{{
                StyleBox["\"max\"", Bold, StripOnInput -> False], "30"}, {
                StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                FractionBox["37", "2"]}, {
                StyleBox["\"median\"", Bold, StripOnInput -> False], "15"}, {
                StyleBox["\"25%\"", Bold, StripOnInput -> False], "13"}, {
                StyleBox["\"min\"", Bold, StripOnInput -> False], "7"}}, 
              GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
              AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}, "Rows" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}}, 
              GridBoxFrame -> {
               "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> Directive[
                AbsoluteThickness[1], 
                Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
          Annotation[#, 
           Style[
            Grid[{{
               Style["max", Bold], 30}, {
               Style["75%", Bold], 
               Rational[37, 2]}, {
               Style["median", Bold], 15}, {
               Style["25%", Bold], 13}, {
               Style["min", Bold], 7}}, Dividers -> {{
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
             Frame -> GrayLevel[0], BaseStyle -> Directive[
               AbsoluteThickness[1], 
               Dashing[{}]]], {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {
        {RGBColor[0.982864, 0.7431472, 0.3262672], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GraphicsGroupBox[{Antialiasing -> False, 
                
                PolygonBox[{{4.845215525831107, 36}, {
                  5.570608574208898, 36}, {5.570608574208898, 26}, {
                  4.845215525831107, 26}}], {}, {{}, {}}, {}, {
                 GrayLevel[0], 
                 GrayLevel[1], 
                 
                 LineBox[{{5.570608574208898, 30}, {
                   4.845215525831107, 30}}]}, {}, {
                 GrayLevel[0], 
                 GrayLevel[0.5], 
                 
                 LineBox[{{{5.207912050020003, 26}, {
                    5.207912050020003, 14}}, {{5.207912050020003, 36}, {
                    5.207912050020003, 83}}}]}, {
                 GrayLevel[0], 
                 GrayLevel[0.5], 
                 
                 LineBox[{{{5.38926031211445, 14}, {
                    5.026563787925555, 14}}, {{5.38926031211445, 83}, {
                    5.026563787925555, 83}}}]}, {}}]},
             
             ImageSizeCache->{{126.5728402465804, 144.46471200383823`}, {
              46.88033679608731, 80.42493410835259}}],
            "DelayedMouseEffectStyle"],
           StyleBox[
            TagBox[
             GridBox[{{
                StyleBox["\"max\"", Bold, StripOnInput -> False], "83"}, {
                StyleBox["\"75%\"", Bold, StripOnInput -> False], "36"}, {
                StyleBox["\"median\"", Bold, StripOnInput -> False], "30"}, {
                StyleBox["\"25%\"", Bold, StripOnInput -> False], "26"}, {
                StyleBox["\"min\"", Bold, StripOnInput -> False], "14"}}, 
              GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
              AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}, "Rows" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}}, 
              GridBoxFrame -> {
               "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> Directive[
                AbsoluteThickness[1], 
                Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
          Annotation[#, 
           Style[
            Grid[{{
               Style["max", Bold], 83}, {
               Style["75%", Bold], 36}, {
               Style["median", Bold], 30}, {
               Style["25%", Bold], 26}, {
               Style["min", Bold], 14}}, Dividers -> {{
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
             Frame -> GrayLevel[0], BaseStyle -> Directive[
               AbsoluteThickness[1], 
               Dashing[{}]]], {}], "Tooltip"]& ]}, 
        {RGBColor[0.4992, 0.5552, 0.8309304], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GraphicsGroupBox[{Antialiasing -> False, 
                
                PolygonBox[{{5.845215525831107, 37}, {
                  6.570608574208898, 37}, {6.570608574208898, 26}, {
                  5.845215525831107, 26}}], {}, {{}, {}}, {}, {
                 GrayLevel[0], 
                 GrayLevel[1], 
                 
                 LineBox[{{6.570608574208898, 31}, {
                   5.845215525831107, 31}}]}, {}, {
                 GrayLevel[0], 
                 GrayLevel[0.5], 
                 
                 LineBox[{{{6.207912050020003, 26}, {
                    6.207912050020003, 15}}, {{6.207912050020003, 37}, {
                    6.207912050020003, 75}}}]}, {
                 GrayLevel[0], 
                 GrayLevel[0.5], 
                 
                 LineBox[{{{6.38926031211445, 15}, {
                    6.026563787925555, 15}}, {{6.38926031211445, 75}, {
                    6.026563787925555, 75}}}]}, {}}]},
             
             ImageSizeCache->{{147.33874731751007`, 165.2306190747679}, {
              50.44163189029242, 79.97977222157695}}],
            "DelayedMouseEffectStyle"],
           StyleBox[
            TagBox[
             GridBox[{{
                StyleBox["\"max\"", Bold, StripOnInput -> False], "75"}, {
                StyleBox["\"75%\"", Bold, StripOnInput -> False], "37"}, {
                StyleBox["\"median\"", Bold, StripOnInput -> False], "31"}, {
                StyleBox["\"25%\"", Bold, StripOnInput -> False], "26"}, {
                StyleBox["\"min\"", Bold, StripOnInput -> False], "15"}}, 
              GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
              AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}, "Rows" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}}, 
              GridBoxFrame -> {
               "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> Directive[
                AbsoluteThickness[1], 
                Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
          Annotation[#, 
           Style[
            Grid[{{
               Style["max", Bold], 75}, {
               Style["75%", Bold], 37}, {
               Style["median", Bold], 31}, {
               Style["25%", Bold], 26}, {
               Style["min", Bold], 15}}, Dividers -> {{
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
             Frame -> GrayLevel[0], BaseStyle -> Directive[
               AbsoluteThickness[1], 
               Dashing[{}]]], {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {
        {RGBColor[0.982864, 0.7431472, 0.3262672], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GraphicsGroupBox[{Antialiasing -> False, 
                
                PolygonBox[{{6.9491715508411085`, 63}, {
                  7.6745645992188996`, 63}, {7.6745645992188996`, 48}, {
                  6.9491715508411085`, 48}}], {}, {{}, {}}, {}, {
                 GrayLevel[0], 
                 GrayLevel[1], 
                 LineBox[{{7.6745645992188996`, 54}, {
                   6.9491715508411085`, 54}}]}, {}, {
                 GrayLevel[0], 
                 GrayLevel[0.5], 
                 
                 LineBox[{{{7.311868075030004, 48}, {
                    7.311868075030004, 30}}, {{7.311868075030004, 63}, {
                    7.311868075030004, 108}}}]}, {
                 GrayLevel[0], 
                 GrayLevel[0.5], 
                 
                 LineBox[{{{7.493216337124451, 30}, {
                    7.130519812935557, 30}}, {{7.493216337124451, 108}, {
                    7.130519812935557, 108}}}]}, {}}]},
             
             ImageSizeCache->{{170.26339554326069`, 188.15526730051852`}, {
              35.75128962669635, 73.30234391994237}}],
            "DelayedMouseEffectStyle"],
           StyleBox[
            TagBox[
             GridBox[{{
                StyleBox["\"max\"", Bold, StripOnInput -> False], "108"}, {
                StyleBox["\"75%\"", Bold, StripOnInput -> False], "63"}, {
                StyleBox["\"median\"", Bold, StripOnInput -> False], "54"}, {
                StyleBox["\"25%\"", Bold, StripOnInput -> False], "48"}, {
                StyleBox["\"min\"", Bold, StripOnInput -> False], "30"}}, 
              GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
              AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}, "Rows" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}}, 
              GridBoxFrame -> {
               "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> Directive[
                AbsoluteThickness[1], 
                Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
          Annotation[#, 
           Style[
            Grid[{{
               Style["max", Bold], 108}, {
               Style["75%", Bold], 63}, {
               Style["median", Bold], 54}, {
               Style["25%", Bold], 48}, {
               Style["min", Bold], 30}}, Dividers -> {{
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
             Frame -> GrayLevel[0], BaseStyle -> Directive[
               AbsoluteThickness[1], 
               Dashing[{}]]], {}], "Tooltip"]& ]}, 
        {RGBColor[0.4992, 0.5552, 0.8309304], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GraphicsGroupBox[{Antialiasing -> False, 
                
                PolygonBox[{{7.9491715508411085`, 64}, {
                  8.674564599218899, 64}, {8.674564599218899, 48}, {
                  7.9491715508411085`, 48}}], {}, {{}, {}}, {}, {
                 GrayLevel[0], 
                 GrayLevel[1], 
                 
                 LineBox[{{8.674564599218899, 55}, {
                   7.949171550841109, 55}}]}, {}, {
                 GrayLevel[0], 
                 GrayLevel[0.5], 
                 
                 LineBox[{{{8.311868075030004, 48}, {
                    8.311868075030004, 29}}, {{8.311868075030004, 64}, {
                    8.311868075030004, 116}}}]}, {
                 GrayLevel[0], 
                 GrayLevel[0.5], 
                 
                 LineBox[{{{8.493216337124451, 29}, {
                    8.130519812935557, 29}}, {{8.493216337124451, 116}, {
                    8.130519812935557, 116}}}]}, {}}]},
             
             ImageSizeCache->{{191.02930261419039`, 208.9211743714482}, {
              32.18999453249124, 73.74750580671801}}],
            "DelayedMouseEffectStyle"],
           StyleBox[
            TagBox[
             GridBox[{{
                StyleBox["\"max\"", Bold, StripOnInput -> False], "116"}, {
                StyleBox["\"75%\"", Bold, StripOnInput -> False], "64"}, {
                StyleBox["\"median\"", Bold, StripOnInput -> False], "55"}, {
                StyleBox["\"25%\"", Bold, StripOnInput -> False], "48"}, {
                StyleBox["\"min\"", Bold, StripOnInput -> False], "29"}}, 
              GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
              AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}, "Rows" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}}, 
              GridBoxFrame -> {
               "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> Directive[
                AbsoluteThickness[1], 
                Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
          Annotation[#, 
           Style[
            Grid[{{
               Style["max", Bold], 116}, {
               Style["75%", Bold], 64}, {
               Style["median", Bold], 55}, {
               Style["25%", Bold], 48}, {
               Style["min", Bold], 29}}, Dividers -> {{
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
             Frame -> GrayLevel[0], BaseStyle -> Directive[
               AbsoluteThickness[1], 
               Dashing[{}]]], {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {
        {RGBColor[0.982864, 0.7431472, 0.3262672], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GraphicsGroupBox[{Antialiasing -> False, 
                
                PolygonBox[{{9.053127575851109, 104}, {
                  9.7785206242289, 104}, {9.7785206242289, 85}, {
                  9.053127575851109, 85}}], {}, {{}, {}}, {}, {
                 GrayLevel[0], 
                 GrayLevel[1], 
                 
                 LineBox[{{9.7785206242289, 93}, {
                   9.05312757585111, 93}}]}, {}, {
                 GrayLevel[0], 
                 GrayLevel[0.5], 
                 
                 LineBox[{{{9.415824100040005, 85}, {
                    9.415824100040005, 59}}, {{9.415824100040005, 104}, {
                    9.415824100040005, 166}}}]}, {
                 GrayLevel[0], 
                 GrayLevel[0.5], 
                 
                 LineBox[{{{9.597172362134453, 59}, {
                    9.234475837945558, 59}}, {{9.597172362134453, 166}, {
                    9.234475837945558, 166}}}]}, {}}]},
             
             ImageSizeCache->{{213.95395083994097`, 231.8458225971988}, {
              9.931900193709325, 60.392649203448855`}}],
            "DelayedMouseEffectStyle"],
           StyleBox[
            TagBox[
             GridBox[{{
                StyleBox["\"max\"", Bold, StripOnInput -> False], "166"}, {
                StyleBox["\"75%\"", Bold, StripOnInput -> False], "104"}, {
                StyleBox["\"median\"", Bold, StripOnInput -> False], "93"}, {
                StyleBox["\"25%\"", Bold, StripOnInput -> False], "85"}, {
                StyleBox["\"min\"", Bold, StripOnInput -> False], "59"}}, 
              GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
              AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}, "Rows" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}}, 
              GridBoxFrame -> {
               "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> Directive[
                AbsoluteThickness[1], 
                Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
          Annotation[#, 
           Style[
            Grid[{{
               Style["max", Bold], 166}, {
               Style["75%", Bold], 104}, {
               Style["median", Bold], 93}, {
               Style["25%", Bold], 85}, {
               Style["min", Bold], 59}}, Dividers -> {{
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
             Frame -> GrayLevel[0], BaseStyle -> Directive[
               AbsoluteThickness[1], 
               Dashing[{}]]], {}], "Tooltip"]& ]}, 
        {RGBColor[0.4992, 0.5552, 0.8309304], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GraphicsGroupBox[{Antialiasing -> False, 
                
                PolygonBox[{{10.053127575851109`, 105}, {
                  10.7785206242289, 105}, {10.7785206242289, 86}, {
                  10.053127575851109`, 86}}], {}, {{}, {}}, {}, {
                 GrayLevel[0], 
                 GrayLevel[1], 
                 
                 LineBox[{{10.7785206242289, 95}, {
                   10.05312757585111, 95}}]}, {}, {
                 GrayLevel[0], 
                 GrayLevel[0.5], 
                 
                 LineBox[{{{10.415824100040005`, 86}, {
                    10.415824100040005`, 59}}, {{10.415824100040005`, 105}, {
                    10.415824100040005`, 192}}}]}, {
                 GrayLevel[0], 
                 GrayLevel[0.5], 
                 
                 LineBox[{{{10.597172362134453`, 59}, {
                    10.234475837945558`, 59}}, {{10.597172362134453`, 192}, {
                    10.234475837945558`, 192}}}]}, {}}]},
             
             ImageSizeCache->{{234.71985791087064`, 
              252.61172966812848`}, {-1.6423088624572912`, 
              60.392649203448855`}}],
            "DelayedMouseEffectStyle"],
           StyleBox[
            TagBox[
             GridBox[{{
                StyleBox["\"max\"", Bold, StripOnInput -> False], "192"}, {
                StyleBox["\"75%\"", Bold, StripOnInput -> False], "105"}, {
                StyleBox["\"median\"", Bold, StripOnInput -> False], "95"}, {
                StyleBox["\"25%\"", Bold, StripOnInput -> False], "86"}, {
                StyleBox["\"min\"", Bold, StripOnInput -> False], "59"}}, 
              GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
              AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}, "Rows" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}}, 
              GridBoxFrame -> {
               "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> Directive[
                AbsoluteThickness[1], 
                Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
          Annotation[#, 
           Style[
            Grid[{{
               Style["max", Bold], 192}, {
               Style["75%", Bold], 105}, {
               Style["median", Bold], 95}, {
               Style["25%", Bold], 86}, {
               Style["min", Bold], 59}}, Dividers -> {{
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
             Frame -> GrayLevel[0], BaseStyle -> Directive[
               AbsoluteThickness[1], 
               Dashing[{}]]], {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {
        {RGBColor[0.982864, 0.7431472, 0.3262672], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GraphicsGroupBox[{Antialiasing -> False, 
                
                PolygonBox[{{11.15708360086111, 169}, {
                  11.882476649238901`, 169}, {11.882476649238901`, 149}, {
                  11.15708360086111, 149}}], {}, {{}, {}}, {}, {
                 GrayLevel[0], 
                 GrayLevel[1], 
                 
                 LineBox[{{11.8824766492389, 158}, {
                   11.15708360086111, 158}}]}, {}, {
                 GrayLevel[0], 
                 GrayLevel[0.5], 
                 
                 LineBox[{{{11.519780125050005`, 149}, {
                    11.519780125050005`, 124}}, {{11.519780125050005`, 169}, {
                    11.519780125050005`, 227}}}]}, {
                 GrayLevel[0], 
                 GrayLevel[0.5], 
                 
                 LineBox[{{{11.701128387144452`, 124}, {
                    11.338431862955558`, 124}}, {{11.701128387144452`, 227}, {
                    11.338431862955558`, 227}}}]}, {}}]},
             
             ImageSizeCache->{{257.64450613662126`, 
              275.5363778938791}, {-17.222974899604623`, 
              31.457126563032354`}}],
            "DelayedMouseEffectStyle"],
           StyleBox[
            TagBox[
             GridBox[{{
                StyleBox["\"max\"", Bold, StripOnInput -> False], "227"}, {
                StyleBox["\"75%\"", Bold, StripOnInput -> False], "169"}, {
                StyleBox["\"median\"", Bold, StripOnInput -> False], "158"}, {
               
                StyleBox["\"25%\"", Bold, StripOnInput -> False], "149"}, {
                StyleBox["\"min\"", Bold, StripOnInput -> False], "124"}}, 
              GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
              AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}, "Rows" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}}, 
              GridBoxFrame -> {
               "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> Directive[
                AbsoluteThickness[1], 
                Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
          Annotation[#, 
           Style[
            Grid[{{
               Style["max", Bold], 227}, {
               Style["75%", Bold], 169}, {
               Style["median", Bold], 158}, {
               Style["25%", Bold], 149}, {
               Style["min", Bold], 124}}, Dividers -> {{
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
             Frame -> GrayLevel[0], BaseStyle -> Directive[
               AbsoluteThickness[1], 
               Dashing[{}]]], {}], "Tooltip"]& ]}, 
        {RGBColor[0.4992, 0.5552, 0.8309304], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GraphicsGroupBox[{Antialiasing -> False, 
                
                PolygonBox[{{12.15708360086111, 184}, {
                  12.882476649238901`, 184}, {12.882476649238901`, 157}, {
                  12.15708360086111, 157}}], {}, {{}, {}}, {}, {
                 GrayLevel[0], 
                 GrayLevel[1], 
                 
                 LineBox[{{12.8824766492389, 169}, {
                   12.15708360086111, 169}}]}, {}, {
                 GrayLevel[0], 
                 GrayLevel[0.5], 
                 
                 LineBox[{{{12.519780125050005`, 157}, {
                    12.519780125050005`, 125}}, {{12.519780125050005`, 184}, {
                    12.519780125050005`, 299}}}]}, {
                 GrayLevel[0], 
                 GrayLevel[0.5], 
                 
                 LineBox[{{{12.701128387144452`, 125}, {
                    12.338431862955558`, 125}}, {{12.701128387144452`, 299}, {
                    12.338431862955558`, 299}}}]}, {}}]},
             
             ImageSizeCache->{{278.41041320755096`, 
              296.3022849648088}, {-49.27463074745057, 31.011964676256724`}}],
            
            "DelayedMouseEffectStyle"],
           StyleBox[
            TagBox[
             GridBox[{{
                StyleBox["\"max\"", Bold, StripOnInput -> False], "299"}, {
                StyleBox["\"75%\"", Bold, StripOnInput -> False], "184"}, {
                StyleBox["\"median\"", Bold, StripOnInput -> False], "169"}, {
               
                StyleBox["\"25%\"", Bold, StripOnInput -> False], "157"}, {
                StyleBox["\"min\"", Bold, StripOnInput -> False], "125"}}, 
              GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
              AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}, "Rows" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}}, 
              GridBoxFrame -> {
               "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> Directive[
                AbsoluteThickness[1], 
                Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
          Annotation[#, 
           Style[
            Grid[{{
               Style["max", Bold], 299}, {
               Style["75%", Bold], 184}, {
               Style["median", Bold], 169}, {
               Style["25%", Bold], 157}, {
               Style["min", Bold], 125}}, Dividers -> {{
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
             Frame -> GrayLevel[0], BaseStyle -> Directive[
               AbsoluteThickness[1], 
               Dashing[{}]]], {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {
        {RGBColor[0.982864, 0.7431472, 0.3262672], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GraphicsGroupBox[{Antialiasing -> False, 
                PolygonBox[
                 
                 NCache[{{13.261039625871112`, 305}, {
                   13.986432674248903`, 305}, {13.986432674248903`, 
                    Rational[565, 2]}, {13.261039625871112`, 
                    Rational[565, 2]}}, {{13.261039625871112`, 305}, {
                   13.986432674248903`, 305}, {13.986432674248903`, 282.5}, {
                   13.261039625871112`, 282.5}}]], {}, {{}, {}}, {}, {
                 GrayLevel[0], 
                 GrayLevel[1], 
                 
                 LineBox[{{13.986432674248903`, 294}, {
                   13.261039625871113`, 294}}]}, {}, {
                 GrayLevel[0], 
                 GrayLevel[0.5], 
                 LineBox[
                  NCache[{{{13.623736150060008`, 
                    Rational[565, 2]}, {13.623736150060008`, 266}}, {{
                    13.623736150060008`, 305}, {
                    13.623736150060008`, 332}}}, {{{13.623736150060008`, 
                    282.5}, {13.623736150060008`, 266}}, {{
                    13.623736150060008`, 305}, {
                    13.623736150060008`, 332}}}]]}, {
                 GrayLevel[0], 
                 GrayLevel[0.5], 
                 
                 LineBox[{{{13.805084412154455`, 266}, {
                    13.44238788796556, 266}}, {{13.805084412154455`, 332}, {
                    13.44238788796556, 332}}}]}, {}}]},
             
             ImageSizeCache->{{301.3350614333016, 
              319.2269331905594}, {-63.964973011046666`, -31.75586135910831}}],
            "DelayedMouseEffectStyle"],
           StyleBox[
            TagBox[
             GridBox[{{
                StyleBox["\"max\"", Bold, StripOnInput -> False], "332"}, {
                StyleBox["\"75%\"", Bold, StripOnInput -> False], "305"}, {
                StyleBox["\"median\"", Bold, StripOnInput -> False], "294"}, {
               
                StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                FractionBox["565", "2"]}, {
                StyleBox["\"min\"", Bold, StripOnInput -> False], "266"}}, 
              GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
              AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}, "Rows" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}}, 
              GridBoxFrame -> {
               "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> Directive[
                AbsoluteThickness[1], 
                Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
          Annotation[#, 
           Style[
            Grid[{{
               Style["max", Bold], 332}, {
               Style["75%", Bold], 305}, {
               Style["median", Bold], 294}, {
               Style["25%", Bold], 
               Rational[565, 2]}, {
               Style["min", Bold], 266}}, Dividers -> {{
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
             Frame -> GrayLevel[0], BaseStyle -> Directive[
               AbsoluteThickness[1], 
               Dashing[{}]]], {}], "Tooltip"]& ]}, 
        {RGBColor[0.4992, 0.5552, 0.8309304], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GraphicsGroupBox[{Antialiasing -> False, 
                PolygonBox[
                 
                 NCache[{{14.261039625871112`, 340}, {
                   14.986432674248903`, 340}, {14.986432674248903`, 
                    Rational[547, 2]}, {14.261039625871112`, 
                    Rational[547, 2]}}, {{14.261039625871112`, 340}, {
                   14.986432674248903`, 340}, {14.986432674248903`, 273.5}, {
                   14.261039625871112`, 273.5}}]], {}, {{}, {}}, {}, {
                 GrayLevel[0], 
                 GrayLevel[1], 
                 
                 LineBox[{{14.986432674248903`, 291}, {
                   14.261039625871113`, 291}}]}, {}, {
                 GrayLevel[0], 
                 GrayLevel[0.5], 
                 LineBox[
                  NCache[{{{14.623736150060008`, 
                    Rational[547, 2]}, {14.623736150060008`, 271}}, {{
                    14.623736150060008`, 340}, {
                    14.623736150060008`, 389}}}, {{{14.623736150060008`, 
                    273.5}, {14.623736150060008`, 271}}, {{
                    14.623736150060008`, 340}, {
                    14.623736150060008`, 389}}}]]}, {
                 GrayLevel[0], 
                 GrayLevel[0.5], 
                 
                 LineBox[{{{14.805084412154455`, 271}, {
                    14.44238788796556, 271}}, {{14.805084412154455`, 389}, {
                    14.44238788796556, 389}}}]}, {}}]},
             
             ImageSizeCache->{{322.1009685042313, 
              339.9928402614891}, {-89.33920055725805, -33.981670792986506`}}],
            "DelayedMouseEffectStyle"],
           StyleBox[
            TagBox[
             GridBox[{{
                StyleBox["\"max\"", Bold, StripOnInput -> False], "389"}, {
                StyleBox["\"75%\"", Bold, StripOnInput -> False], "340"}, {
                StyleBox["\"median\"", Bold, StripOnInput -> False], "291"}, {
               
                StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                FractionBox["547", "2"]}, {
                StyleBox["\"min\"", Bold, StripOnInput -> False], "271"}}, 
              GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
              AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}, "Rows" -> {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}}, 
              GridBoxFrame -> {
               "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> Directive[
                AbsoluteThickness[1], 
                Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
          Annotation[#, 
           Style[
            Grid[{{
               Style["max", Bold], 389}, {
               Style["75%", Bold], 340}, {
               Style["median", Bold], 291}, {
               Style["25%", Bold], 
               Rational[547, 2]}, {
               Style["min", Bold], 271}}, Dividers -> {{
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
             Frame -> GrayLevel[0], BaseStyle -> Directive[
               AbsoluteThickness[1], 
               Dashing[{}]]], {}], 
           "Tooltip"]& ]}}}, {}, {}}}, {}, {}}, {{{{{{{{{}, {}}, {}}, {}}, \
{}}, {}}, {}}, {{{{{{{}, {}}, {}}, {{{}, {}}, {}}}, {}}, {}}, {}}, {{{{{{{}, \
{}}, {}}, {{{}, {}}, {}}}, {}}, {}}, {}}, {{{{{{{}, {}}, {}}, {{{}, {}}, \
{}}}, {}}, {}}, {}}, {{{{{{{}, {}}, {}}, {{{}, {}}, {}}}, {}}, {}}, {}}, \
{{{{{{{}, {}}, {}}, {{{}, {}}, {}}}, {}}, {}}, {}}, {{{{{{{}, {}}, {}}, {{{}, \
{}}, {}}}, {}}, {}}, {}}}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{-0.0801529841107852, -16.3},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {{{1., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {2., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      0.6373034758111047, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
      2.3626965241888955`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
      3.1039560250100013`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      4.103956025010001, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      2.741259500821106, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
      4.466652549198897, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
      5.207912050020003, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      6.207912050020003, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      4.845215525831107, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
      6.570608574208898, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
      7.311868075030004, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      8.311868075030004, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      6.9491715508411085`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
      8.674564599218899, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
      9.415824100040005, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      10.415824100040005`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      9.053127575851109, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
      10.7785206242289, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
      11.519780125050005`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      12.519780125050005`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      11.15708360086111, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
      12.882476649238901`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
      13.623736150060008`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      14.623736150060008`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      13.261039625871112`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
      14.986432674248903`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
      0.6373034758111047, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
      14.986432674248903`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}, {{1., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {2., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      0.6373034758111047, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
      2.3626965241888955`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
      3.1039560250100013`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      4.103956025010001, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      2.741259500821106, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
      4.466652549198897, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
      5.207912050020003, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      6.207912050020003, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      4.845215525831107, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
      6.570608574208898, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
      7.311868075030004, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      8.311868075030004, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      6.9491715508411085`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
      8.674564599218899, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
      9.415824100040005, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      10.415824100040005`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      9.053127575851109, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
      10.7785206242289, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
      11.519780125050005`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      12.519780125050005`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      11.15708360086111, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
      12.882476649238901`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
      13.623736150060008`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      14.623736150060008`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      13.261039625871112`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
      14.986432674248903`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
      0.6373034758111047, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
      14.986432674248903`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{{{1., 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {2., 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     0.6373034758111047, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
     2.3626965241888955`, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
     3.1039560250100013`, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     4.103956025010001, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     2.741259500821106, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
     4.466652549198897, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
     5.207912050020003, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     6.207912050020003, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     4.845215525831107, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
     6.570608574208898, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
     7.311868075030004, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     8.311868075030004, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     6.9491715508411085`, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
     8.674564599218899, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
     9.415824100040005, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     10.415824100040005`, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     9.053127575851109, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
     10.7785206242289, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
     11.519780125050005`, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     12.519780125050005`, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     11.15708360086111, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
     12.882476649238901`, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
     13.623736150060008`, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     14.623736150060008`, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     13.261039625871112`, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
     14.986432674248903`, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
     0.6373034758111047, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
     14.986432674248903`, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}, 
    Automatic}]], "Output",
 CellChangeTimes->{3.8480032691981974`*^9},
 CellLabel->"Out[46]=",
 CellID->672469377],

Cell["\<\
In this plot, we can see no real difference between the model-played and \
random move games, demonstrating that the model doesn\[CloseCurlyQuote]t lead \
to the games reaching their max value faster, as we had hypothesized.\
\>", "Text",
 CellChangeTimes->{{3.8480951526126904`*^9, 3.848095196175068*^9}, {
  3.848097058450302*^9, 3.848097118839284*^9}},
 CellID->19576836],

Cell["\<\
As we can see from the graphs, the model learned how to increase the length \
of the games rather than bringing them to a higher score faster or more \
efficiently. This was an unforeseen outcome, but was still fascinating to \
observe. \
\>", "Text",
 CellChangeTimes->{{3.848080185799198*^9, 3.848080273240911*^9}, {
  3.8480971252500215`*^9, 3.848097135148963*^9}, {3.848333676316215*^9, 
  3.848333684864674*^9}},
 CellID->448194139],

Cell["\<\
The clear conclusion to this work is that the model using the RandomForest \
distribution made the games run longer, rather than more efficiently, despite \
being trained solely based on the high score of games. This makes sense, \
because as the games go on, the values never decrease, so a longer game will \
have a higher chance of getting a higher score. \
\>", "Text",
 CellChangeTimes->{{3.8480805712911663`*^9, 3.848080818554288*^9}, {
   3.848095296896001*^9, 3.8480953279773407`*^9}, {3.8480954005113964`*^9, 
   3.8480956822208443`*^9}, {3.848095720461957*^9, 3.8480959062247133`*^9}, {
   3.8480971582678905`*^9, 3.8480972515111933`*^9}, {3.848097284587261*^9, 
   3.848097317051261*^9}, {3.8481496725312448`*^9, 3.848149673169243*^9}, {
   3.8481497088549395`*^9, 3.848149770547138*^9}, 3.8481502325131617`*^9, {
   3.8481507506801143`*^9, 3.8481507712421103`*^9}, {3.848179459450642*^9, 
   3.8481794621364713`*^9}, {3.8481794923459063`*^9, 3.848179500641118*^9}},
 CellID->59959185]
}, Open  ]],

Cell[CellGroupData[{

Cell["Conclusions and Future Work", "Section",
 CellChangeTimes->{{3.848333988169385*^9, 3.84833399348346*^9}},
 CellID->1372503113],

Cell["\<\
We're very proud of our work!

We want to thank Rory for all their help throughout this project. We couldn't \
have accomplished this without them.

While our dataset approach for tic-tac-toe didn't use the Classify or Predict \
functions, it is still a unique approach that functions well in predicting \
the player's next logical move. This approach functions\[LongDash] given a \
good training dataset with a significant amount of winning games. We are \
curious how we could use those functions (Classify, Predict, \
LearnDistribution), however, to see whether the results would change for \
tic-tac-toe. The results of the training data can be seen in the manipulate, \
which makes logical moves most of the time! However, the manipulate was \
tricky to build in regards to giving enough time for the human to make a move. 

With the 2048, we would have liked to train the model directly on the game \
lengths rather than on the high scores, to see if it can more significantly \
increase the length of the played games. It would have also been interesting \
to see if with more data the AI could produce intelligent strategies as a \
human would, rather than just increasing the length of the games to increase \
the probability of getting a higher score (which is still logical!). It would \
also be interesting to see whether different neural net models, as opposed to \
the RandomForest model, would increase the accuracy. As opposed to using the \
Predict function, it may be less time-consuming to run each of the 4 possible \
moves (up, down, left, right), and take the board with the highest resulting \
value (using if-statements) for each move. The reason for including this \
would be as a control, to see if the machine learning model can outperform a \
simpler approach. 

Future work involves running a lot more random training games, so that \
neither player 1 nor player 2 wins (in tic-tac-toe if both players make \
logical moves it\[CloseCurlyQuote]s a draw, and in 2048 you actually reach \
the max value of 2048). It\[CloseCurlyQuote]d be great to apply this approach \
to more complex games as well, such as chess, Nim, or Scrabble. The hardest \
part is setting up the game\[LongDash]running the random training games and \
then using that dataset is shown how to do in this project.

To any intrigued readers, we wish you the best of luck in your future \
endeavours to further develop our work\[LongDash] if you and your computer \
are up to the challenge.

\
\>", "Text",
 CellChangeTimes->{{3.8471438243924417`*^9, 3.8471438288127174`*^9}, {
   3.8471438977505155`*^9, 3.8471439296833053`*^9}, {3.847143981069177*^9, 
   3.8471441161071787`*^9}, {3.847144175847097*^9, 3.8471443898788853`*^9}, {
   3.8471444279685874`*^9, 3.8471444879929414`*^9}, {3.8471445585848203`*^9, 
   3.8471446079540806`*^9}, {3.848146660583644*^9, 3.8481466655106263`*^9}, 
   3.848150296210088*^9, {3.84815078608875*^9, 3.8481508774975753`*^9}, {
   3.8481794666304855`*^9, 3.8481794750266376`*^9}, {3.8481795389637175`*^9, 
   3.848179633565447*^9}, {3.84817966425545*^9, 3.8481797119958534`*^9}, {
   3.8481797912245812`*^9, 3.848179913842373*^9}, {3.848179986704984*^9, 
   3.848180086770852*^9}, {3.848180121183988*^9, 3.848180138548848*^9}, {
   3.848333704513074*^9, 3.8483338522899847`*^9}, 3.848491666357196*^9, {
   3.8487002488777533`*^9, 3.848700292861567*^9}},
 CellID->158811160]
}, Open  ]]
},
WindowSize->{1012.5, 507.75},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"13.0 for Microsoft Windows (64-bit) (December 6, 2021)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Abstract"->{
  Cell[1364, 45, 866, 14, 70, "Text",ExpressionUUID->"3e87cf84-8566-4a1c-8a0b-114e5ae7a1cc",
   CellTags->{"Abstract", "TemplateCell"},
   CellID->587432573]},
 "TemplateCell"->{
  Cell[1364, 45, 866, 14, 70, "Text",ExpressionUUID->"3e87cf84-8566-4a1c-8a0b-114e5ae7a1cc",
   CellTags->{"Abstract", "TemplateCell"},
   CellID->587432573]},
 "SectionHeader"->{
  Cell[2267, 64, 162, 3, 70, "Section",ExpressionUUID->"b455d792-1528-41a3-aff4-ff56537c9b88",
   CellTags->"SectionHeader",
   CellID->453852445]},
 "ExampleTopicSentence"->{
  Cell[2432, 69, 361, 7, 70, "Text",ExpressionUUID->"5582da03-1fef-4a33-835b-794076065e9a",
   CellTags->"ExampleTopicSentence",
   CellID->816667160]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Abstract", 391545, 9540},
 {"TemplateCell", 391724, 9544},
 {"SectionHeader", 391904, 9548},
 {"ExampleTopicSentence", 392080, 9552}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[561, 20, 680, 18, 70, "Text",ExpressionUUID->"758b47a3-6df4-4f37-863d-dccc607472f2"],
Cell[CellGroupData[{
Cell[1266, 42, 95, 1, 70, "Section",ExpressionUUID->"7cf35bdc-5d7b-4a9c-86aa-257017bdd86f"],
Cell[1364, 45, 866, 14, 70, "Text",ExpressionUUID->"3e87cf84-8566-4a1c-8a0b-114e5ae7a1cc",
 CellTags->{"Abstract", "TemplateCell"},
 CellID->587432573]
}, Open  ]],
Cell[CellGroupData[{
Cell[2267, 64, 162, 3, 70, "Section",ExpressionUUID->"b455d792-1528-41a3-aff4-ff56537c9b88",
 CellTags->"SectionHeader",
 CellID->453852445],
Cell[2432, 69, 361, 7, 70, "Text",ExpressionUUID->"5582da03-1fef-4a33-835b-794076065e9a",
 CellTags->"ExampleTopicSentence",
 CellID->816667160],
Cell[CellGroupData[{
Cell[2818, 80, 160, 3, 70, "Subsection",ExpressionUUID->"3ac7cb3a-5640-4ad4-809c-4e72d608783e",
 CellID->1665523621],
Cell[2981, 85, 505, 9, 70, "Text",ExpressionUUID->"b399bce8-c271-405a-a2dd-9a4d15b1f1ca",
 CellID->2121022790],
Cell[3489, 96, 166, 2, 70, "CodeText",ExpressionUUID->"b031570c-2512-4536-bbae-b98c89a70c61",
 CellID->1848786286],
Cell[3658, 100, 326, 10, 70, "Code",ExpressionUUID->"80c4d183-b892-42d6-8c5c-02181da810fc",
 CellID->951509299],
Cell[3987, 112, 308, 6, 70, "Text",ExpressionUUID->"1393f748-ebc4-4664-8ec5-2c584b3222df",
 CellID->64231012],
Cell[4298, 120, 144, 2, 70, "CodeText",ExpressionUUID->"1d6929c9-c42a-4800-b81d-a5b677786903",
 CellID->143754574],
Cell[4445, 124, 1635, 52, 70, "Code",ExpressionUUID->"7a39026a-a751-4ffd-919a-109e500b4dcb",
 CellID->905364578],
Cell[6083, 178, 412, 8, 70, "Text",ExpressionUUID->"2c224d99-4a0d-4b7b-93f5-637f519e4a2b",
 CellID->1528857719],
Cell[6498, 188, 145, 2, 70, "CodeText",ExpressionUUID->"2975dae4-807c-4d6c-850f-5126d18699a1",
 CellID->599186372],
Cell[6646, 192, 1596, 46, 70, "Code",ExpressionUUID->"f49f35b6-4940-4cfe-91ec-dc622f40f5f0",
 CellID->1526008277],
Cell[8245, 240, 279, 6, 70, "Text",ExpressionUUID->"9f40d384-3b9c-471f-9b40-bd4fb3a5f671",
 CellID->1881406668],
Cell[8527, 248, 308, 10, 70, "Code",ExpressionUUID->"3f5d9ac4-2c9b-424d-8dd4-1140c423a2b9",
 CellID->1656111440],
Cell[8838, 260, 296, 6, 70, "Text",ExpressionUUID->"cf1e6c89-016c-43e5-90d8-f3f7963d8990",
 CellID->1579451548],
Cell[9137, 268, 219, 4, 70, "CodeText",ExpressionUUID->"aa8e838b-8c03-40a2-8809-df76eadda544",
 CellID->86044198],
Cell[9359, 274, 1974, 56, 70, "Code",ExpressionUUID->"383a88ec-68ff-495f-9de5-d7fa2d6de031",
 CellID->56096805],
Cell[11336, 332, 208, 5, 70, "Text",ExpressionUUID->"b0929ca7-c31c-48d3-8a80-ab4e90723ecc",
 CellID->1466788968],
Cell[CellGroupData[{
Cell[11569, 341, 332, 8, 70, "Input",ExpressionUUID->"6b878964-9599-45a9-b42a-a4578451e9ca",
 CellID->1885885928],
Cell[11904, 351, 422, 11, 70, "Output",ExpressionUUID->"e117c9ab-8053-455a-aa85-165ad19af379"]
}, Open  ]],
Cell[12341, 365, 255, 7, 70, "Text",ExpressionUUID->"f3c07fd8-a55f-4aed-8e93-8917d536a500",
 CellID->1103073532]
}, Open  ]],
Cell[CellGroupData[{
Cell[12633, 377, 163, 3, 70, "Subsection",ExpressionUUID->"277b9d5a-7657-4dbf-b3b2-5ab4e08946cf",
 CellID->1653826862],
Cell[12799, 382, 391, 7, 70, "Text",ExpressionUUID->"489845d9-e08f-4d28-86f2-6c75f43e8742",
 CellID->1877555278],
Cell[13193, 391, 149, 2, 70, "Text",ExpressionUUID->"3cd7cfa3-8112-49eb-b486-de59e1870c60",
 CellID->1032133852],
Cell[13345, 395, 138, 2, 70, "CodeText",ExpressionUUID->"0fb3c6a6-e48d-464d-92be-7f1b35502916",
 CellID->756212602],
Cell[13486, 399, 308, 9, 70, "Code",ExpressionUUID->"197beaaa-cf1e-4ff9-8a56-b8cacf74027a",
 CellID->467849115],
Cell[13797, 410, 510, 9, 70, "Text",ExpressionUUID->"6df86580-d5a4-4b03-8c99-629cbcc84e28",
 CellID->517298584],
Cell[14310, 421, 295, 6, 70, "CodeText",ExpressionUUID->"657c1666-68e6-4f38-8a32-8cbeb8abe13b",
 CellID->1259367048],
Cell[14608, 429, 3678, 95, 70, "Code",ExpressionUUID->"b990c881-c1a9-47ec-bbc9-6a4343e021f5",
 CellID->1203844417],
Cell[18289, 526, 456, 7, 70, "Text",ExpressionUUID->"819623ed-23fa-4b13-834a-da9e576e58b9",
 CellID->1454519220],
Cell[18748, 535, 803, 19, 70, "Input",ExpressionUUID->"6a465c7a-89e5-4ab3-a5e8-46d905688fdd",
 InitializationCell->True,
 CellID->1391277730],
Cell[19554, 556, 267, 6, 70, "Text",ExpressionUUID->"a20a5ca6-5e4a-4ca7-8428-3682d240ebca",
 CellID->1786400792],
Cell[CellGroupData[{
Cell[19846, 566, 381, 10, 70, "Input",ExpressionUUID->"14e2c859-d54e-4bcc-8937-b03bfd1903a9",
 CellID->812086743],
Cell[20230, 578, 287, 6, 70, "Output",ExpressionUUID->"99d04a6f-21a8-4010-af47-ca2a69daef8f"]
}, Open  ]],
Cell[20532, 587, 151, 2, 70, "Text",ExpressionUUID->"e7f50de9-2401-44a8-b60c-70dad5542393",
 CellID->1845140062],
Cell[CellGroupData[{
Cell[20708, 593, 193, 5, 70, "Input",ExpressionUUID->"6e713384-b43b-4c02-949e-294a8c17910b",
 CellID->1590284773],
Cell[20904, 600, 2985, 92, 70, "Output",ExpressionUUID->"090d7200-37b3-4977-a709-47b4e20d4c87",
 CellID->1726988935]
}, Open  ]],
Cell[23904, 695, 232, 5, 70, "Text",ExpressionUUID->"6cc8d948-9ae4-4318-8fe6-ac28b5b5d8ec",
 CellID->274975898]
}, Open  ]],
Cell[CellGroupData[{
Cell[24173, 705, 126, 2, 70, "Subsection",ExpressionUUID->"6b51b40f-7fa1-4310-a1ee-6b02c5853b57",
 CellID->1575367380],
Cell[24302, 709, 402, 8, 70, "Text",ExpressionUUID->"5f38d988-4580-4bef-9229-5aaf15138c8b",
 CellID->1273357800],
Cell[24707, 719, 362, 7, 70, "Text",ExpressionUUID->"05d64908-0b20-454f-be78-9d4260d45d6e",
 CellID->1875876687],
Cell[25072, 728, 313, 6, 70, "Text",ExpressionUUID->"bdbb2e97-3e51-43a2-908e-0ae70021c098",
 CellID->679346143],
Cell[CellGroupData[{
Cell[25410, 738, 283, 8, 70, "Input",ExpressionUUID->"0e8e3b97-d340-41ac-8624-05e68770b3b2",
 CellID->513305077],
Cell[25696, 748, 38795, 642, 70, "Output",ExpressionUUID->"a7e60dfc-5b8c-48de-8c7b-e8ee69c6fc0e"]
}, Open  ]],
Cell[64506, 1393, 427, 8, 70, "Text",ExpressionUUID->"0cecf3ce-2b7f-45cc-a1ec-f5147683ca39",
 CellID->1339879196],
Cell[64936, 1403, 142, 2, 70, "CodeText",ExpressionUUID->"d7002423-9f35-4b7f-af62-57a5f1d5b20e",
 CellID->1413525546],
Cell[65081, 1407, 308, 9, 70, "Code",ExpressionUUID->"f125d14d-1ab1-4e55-b2c1-b7a42172956e",
 CellID->1219362104],
Cell[65392, 1418, 292, 6, 70, "Text",ExpressionUUID->"3fb6b92b-f955-46c5-b9f2-b249616e6068",
 CellID->2070518296],
Cell[65687, 1426, 189, 4, 70, "CodeText",ExpressionUUID->"2d2e36ac-a3ff-4c0c-82c1-56c71ce2393d",
 CellID->83480143],
Cell[65879, 1432, 7153, 171, 70, "Code",ExpressionUUID->"2be180cd-5f94-4742-9356-71e2a22aac46",
 CellID->1288223993],
Cell[73035, 1605, 196, 5, 70, "Text",ExpressionUUID->"32fc85bf-bb67-41b4-a3b5-950fd40fa759",
 CellID->523567195],
Cell[CellGroupData[{
Cell[73256, 1614, 311, 7, 70, "Input",ExpressionUUID->"81960e8e-b0f0-423e-9f42-d0504217185e",
 CellID->2019926968],
Cell[73570, 1623, 139, 3, 70, "Output",ExpressionUUID->"da9c6194-83dc-4299-884a-68b508e72f74",
 CellID->1626045621]
}, Open  ]],
Cell[CellGroupData[{
Cell[73746, 1631, 173, 4, 70, "Input",ExpressionUUID->"4befe160-3d97-48cb-b440-8237a3532dee",
 CellID->143837241],
Cell[73922, 1637, 182, 4, 70, "Output",ExpressionUUID->"0684c5fb-b59f-4d7f-b759-1aa288abaf43",
 CellID->772080258]
}, Open  ]],
Cell[74119, 1644, 220, 5, 70, "Text",ExpressionUUID->"68c2c324-1bdd-4599-bf65-e342f1630858",
 CellID->1226711109],
Cell[CellGroupData[{
Cell[74364, 1653, 225, 6, 70, "Input",ExpressionUUID->"dc19d345-a246-418d-a4fa-9aeab619dfd1",
 CellID->577525321],
Cell[74592, 1661, 2333, 85, 70, "Output",ExpressionUUID->"58f03a92-c160-4874-9303-f378d2aa09eb",
 CellID->228737890]
}, Open  ]],
Cell[76940, 1749, 228, 5, 70, "Text",ExpressionUUID->"f022c284-008e-41f8-82d9-ff36dbfa332e",
 CellID->2050025899],
Cell[CellGroupData[{
Cell[77193, 1758, 224, 6, 70, "Input",ExpressionUUID->"2b975456-c239-454c-9403-4bd983959adc",
 CellID->1627026230],
Cell[77420, 1766, 1682, 61, 70, "Output",ExpressionUUID->"cc2d1a6d-3e00-47d6-9bf5-c663f7aaff96",
 CellID->153893121]
}, Open  ]],
Cell[79117, 1830, 247, 5, 70, "Text",ExpressionUUID->"fcbde4a6-675a-4eea-a233-793ffc1870af",
 CellID->1792012359],
Cell[79367, 1837, 352, 7, 70, "CodeText",ExpressionUUID->"0131a299-b3fb-4b00-8ea6-e204a76b789b",
 CellID->1412174324],
Cell[79722, 1846, 1195, 28, 70, "Code",ExpressionUUID->"1d9c8cab-f84f-4f6f-b5f4-7a2a12f94b20",
 CellID->1221535445]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[80966, 1880, 148, 2, 70, "Section",ExpressionUUID->"0d84c694-9ae7-4f2a-ba66-ed6fceea5265",
 CellID->526697667],
Cell[81117, 1884, 347, 7, 70, "Text",ExpressionUUID->"a51f21fb-2400-46b9-bc53-d7bff53c4cf9",
 CellID->381864143],
Cell[CellGroupData[{
Cell[81489, 1895, 121, 2, 70, "Subsection",ExpressionUUID->"6ae93ac6-015a-49e2-b251-12905b889db4",
 CellID->1279974883],
Cell[81613, 1899, 405, 8, 70, "Text",ExpressionUUID->"b7ad50e9-1d3c-4954-9130-ff16cd943ea8",
 CellID->2000255852],
Cell[CellGroupData[{
Cell[82043, 1911, 655, 19, 70, "Input",ExpressionUUID->"12487508-530e-4c68-ad49-0e865622e086",
 CellID->660957651],
Cell[82701, 1932, 2905, 95, 70, "Output",ExpressionUUID->"7f140799-a4d3-4d1e-886e-9f463a81a9d8",
 CellID->1295225543]
}, Open  ]],
Cell[85621, 2030, 371, 7, 70, "Text",ExpressionUUID->"8cec019c-33e1-455b-b130-df5ce1817154",
 CellID->723069845],
Cell[CellGroupData[{
Cell[86017, 2041, 708, 20, 70, "Input",ExpressionUUID->"ac90f3bf-66c8-4204-81e3-2cdc3d43841d",
 CellID->252059935],
Cell[86728, 2063, 2641, 86, 70, "Output",ExpressionUUID->"f109f349-4616-419b-9fd7-6165b766c04e",
 CellID->546141053]
}, Open  ]],
Cell[89384, 2152, 213, 3, 70, "Text",ExpressionUUID->"9fd8cf07-2593-4007-99fe-aa3a246cf1f1",
 CellID->348680123]
}, Open  ]],
Cell[CellGroupData[{
Cell[89634, 2160, 116, 2, 70, "Subsection",ExpressionUUID->"02a4dbe1-42c5-4959-92d2-35488dc2be4b",
 CellID->754560175],
Cell[89753, 2164, 209, 5, 70, "Text",ExpressionUUID->"c73eae41-1755-4346-848b-59d9b7f12f23",
 CellID->1492464785],
Cell[89965, 2171, 430, 8, 70, "Text",ExpressionUUID->"f81283ef-a0a8-4953-b17d-36e6cb9751fb",
 CellID->1339171086],
Cell[90398, 2181, 737, 21, 70, "Input",ExpressionUUID->"86944abf-40a6-44d0-8d64-e80abad0cf88",
 InitializationCell->True,
 CellID->288104324],
Cell[CellGroupData[{
Cell[91160, 2206, 353, 10, 70, "Input",ExpressionUUID->"095c2b66-a670-49a4-a271-49ad4c6c85fa",
 CellID->42831611],
Cell[91516, 2218, 2858, 69, 70, "Output",ExpressionUUID->"2a802f0e-e064-4a0b-94ac-4e34bda19b5c",
 CellID->422891078]
}, Open  ]],
Cell[94389, 2290, 541, 9, 70, "Text",ExpressionUUID->"0e630f90-fcac-49b9-bd6d-1e891938af14",
 CellID->2047171016],
Cell[94933, 2301, 505, 9, 70, "Text",ExpressionUUID->"d7a26c7f-1325-4493-b79b-56a4ebab6ba6",
 CellID->426567460],
Cell[95441, 2312, 352, 10, 70, "Input",ExpressionUUID->"0d5d555d-f8ce-4ad6-97d6-d41648cf053b",
 InitializationCell->True,
 CellID->501145362],
Cell[95796, 2324, 1177, 27, 70, "Input",ExpressionUUID->"ce5c38b8-b4ba-47b5-91b2-106e2933ea40",
 CellID->820260347],
Cell[96976, 2353, 745, 18, 70, "Input",ExpressionUUID->"7322d983-37be-4a6b-8d29-8dfb65060f2a",
 CellID->178614384],
Cell[97724, 2373, 8467, 185, 70, "Input",ExpressionUUID->"2d307a8b-a9d7-46dc-845b-daa3573110b2",
 CellID->975971071],
Cell[106194, 2560, 589, 10, 70, "Text",ExpressionUUID->"5f1cc81e-e9aa-4b68-923d-139ce2fd4c07",
 CellID->152898462]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[106832, 2576, 199, 3, 70, "Section",ExpressionUUID->"2ac6256c-bf42-4e68-8800-7be87907f968",
 CellID->1399506534],
Cell[107034, 2581, 410, 8, 70, "Text",ExpressionUUID->"f41ecc67-1abc-475c-8e5e-7842cf8bc038",
 CellID->1674613182],
Cell[107447, 2591, 385, 7, 70, "Text",ExpressionUUID->"06aa9457-5189-4c22-b132-f4340776abb0",
 CellID->93438981],
Cell[107835, 2600, 683, 11, 70, "Text",ExpressionUUID->"9e0f7484-9fba-4141-8cff-b54543676a1a",
 CellID->579703631],
Cell[108521, 2613, 468, 8, 70, "Text",ExpressionUUID->"bf5da8bd-f153-4fa2-9d4d-ed702423202d",
 CellID->145065036],
Cell[CellGroupData[{
Cell[109014, 2625, 2500, 69, 70, "Input",ExpressionUUID->"c038bc69-a89f-42a8-99b5-cec0e6531f2e",
 CellID->377221359],
Cell[111517, 2696, 4514, 98, 70, "Output",ExpressionUUID->"8ba00c47-124a-40ad-844b-caf94dbb66cf"],
Cell[116034, 2796, 901, 18, 70, "Output",ExpressionUUID->"e5b3654f-c95c-4474-8547-3ba41cfc530b"]
}, Open  ]],
Cell[116950, 2817, 233, 5, 70, "Text",ExpressionUUID->"daf37f69-977e-4bef-bb41-5f2e15c9cf03",
 CellID->243481472],
Cell[117186, 2824, 202, 3, 70, "Text",ExpressionUUID->"cdcf7d6b-4286-4c0d-9de3-0f614aa1ff72",
 CellID->198711203],
Cell[CellGroupData[{
Cell[117413, 2831, 4220, 106, 70, "Input",ExpressionUUID->"0c9df2eb-d87f-4171-a336-a5fdcd9703ad",
 CellID->361346000],
Cell[121636, 2939, 5169, 113, 70, "Output",ExpressionUUID->"b346d3a5-bd43-4a3d-9d40-d3f113142621"],
Cell[126808, 3054, 989, 20, 70, "Output",ExpressionUUID->"6a2e4188-4225-4765-a255-6c1fae4d2cc3"]
}, Open  ]],
Cell[127812, 3077, 207, 3, 70, "Text",ExpressionUUID->"f715d617-3d6d-430b-9ec1-646df020ef0c",
 CellID->602890565],
Cell[CellGroupData[{
Cell[128044, 3084, 4315, 107, 70, "Input",ExpressionUUID->"d39072fb-752c-41f6-b5be-8fe041503a2b",
 CellID->364543504],
Cell[132362, 3193, 4841, 109, 70, "Output",ExpressionUUID->"425cba70-28a2-4b0b-b25e-26b11880a4c2"],
Cell[137206, 3304, 659, 16, 70, "Output",ExpressionUUID->"f6c6ee81-7cb6-4b65-a2eb-115f736b80b1"]
}, Open  ]],
Cell[137880, 3323, 257, 4, 70, "Text",ExpressionUUID->"ed202629-40c8-4385-b2d6-8c8a94c25f27",
 CellID->1454869],
Cell[138140, 3329, 193, 5, 70, "Text",ExpressionUUID->"2e63b930-b6f1-4e26-94de-4c50b1af7340",
 CellID->1053247246]
}, Open  ]],
Cell[CellGroupData[{
Cell[138370, 3339, 178, 3, 70, "Section",ExpressionUUID->"c575843a-aaf5-41ca-a926-5170aa359627",
 CellID->547084083],
Cell[138551, 3344, 573, 12, 70, "Text",ExpressionUUID->"06ae99d3-7421-4507-a9d7-f87e9cfeb1b0",
 CellID->561895008],
Cell[139127, 3358, 738, 12, 70, "Text",ExpressionUUID->"fd742882-2876-4941-99d6-eb70a94089d7",
 CellID->754217914],
Cell[139868, 3372, 304, 6, 70, "Text",ExpressionUUID->"80067c7d-a9bc-4fc0-b3fb-18a7bf7228c1",
 CellID->1371255406],
Cell[CellGroupData[{
Cell[140197, 3382, 129, 2, 70, "Subsection",ExpressionUUID->"0dc22b3f-8f8c-4f5e-a3fd-1d2c5657846a",
 CellID->114696474],
Cell[140329, 3386, 486, 8, 70, "Text",ExpressionUUID->"2e4144f6-964b-465d-a6a5-ec3a92a07838",
 CellID->132952791],
Cell[140818, 3396, 499, 9, 70, "CodeText",ExpressionUUID->"b12e1b62-8768-4c19-b9d4-b9ee27e7f223",
 CellID->9243925],
Cell[141320, 3407, 1588, 43, 70, "Code",ExpressionUUID->"98df62ae-3898-41ef-9177-0d968b8bc28a",
 CellID->82561856],
Cell[142911, 3452, 457, 9, 70, "Text",ExpressionUUID->"66506fb8-5f06-48c2-8f2c-216d13909f59",
 CellID->594618377],
Cell[143371, 3463, 379, 8, 70, "CodeText",ExpressionUUID->"0322e3d1-60ab-4689-b7c5-d84d3d3006c8",
 CellID->77745233],
Cell[143753, 3473, 6092, 149, 70, "Code",ExpressionUUID->"62b55c0b-daeb-4085-9ff6-912e7e4670d0",
 CellID->486400159],
Cell[149848, 3624, 6141, 150, 70, "Code",ExpressionUUID->"9cb1e32d-28b1-41d2-a142-5a78bce3d161",
 CellID->453962415],
Cell[155992, 3776, 444, 8, 70, "CodeText",ExpressionUUID->"49952aec-233b-48b8-a78d-23f0fd560994",
 CellID->209635958],
Cell[156439, 3786, 620, 16, 70, "Code",ExpressionUUID->"b3ce383b-75b9-4207-965b-8658a320bf05",
 CellID->20332529],
Cell[157062, 3804, 650, 17, 70, "Code",ExpressionUUID->"9bbba3d4-406c-4524-971c-0f150149f309",
 CellID->64395571],
Cell[157715, 3823, 391, 8, 70, "CodeText",ExpressionUUID->"5b2e171d-5da9-4881-b565-1955c2c618d2",
 CellID->1322850],
Cell[158109, 3833, 4877, 122, 70, "Code",ExpressionUUID->"0228bc0f-12e6-431a-8a12-787ab274d5a4",
 CellID->116558480],
Cell[162989, 3957, 1376, 20, 70, "Text",ExpressionUUID->"a64b713b-53ac-42d1-b94e-71880a7d9df0",
 CellID->642665709],
Cell[164368, 3979, 168, 2, 70, "CodeText",ExpressionUUID->"5f2f18fb-37ef-4ca0-8905-cc05544b6c9b",
 CellID->1055149887],
Cell[164539, 3983, 2851, 73, 70, "Code",ExpressionUUID->"5b1366a6-9159-4358-ba2e-e91974d5b0d2",
 CellID->536374213],
Cell[167393, 4058, 174, 3, 70, "CodeText",ExpressionUUID->"beeb74c9-b5e3-4beb-93a3-1c5dc4cdada1",
 CellID->683037422],
Cell[167570, 4063, 3068, 79, 70, "Code",ExpressionUUID->"b86d12a0-319f-4a50-90a1-fac69b658f3f",
 CellID->129554515],
Cell[170641, 4144, 172, 3, 70, "CodeText",ExpressionUUID->"5554ca25-f924-47b2-8966-47c9c56a8c98",
 CellID->160813878],
Cell[170816, 4149, 3568, 91, 70, "Code",ExpressionUUID->"9f7ff114-af30-4fdd-9690-2349e3d366bf",
 CellID->755470916]
}, Open  ]],
Cell[CellGroupData[{
Cell[174421, 4245, 245, 4, 70, "Subsection",ExpressionUUID->"ba34b171-4482-493c-b7e2-1b95a1119ac7",
 CellID->125483006],
Cell[174669, 4251, 580, 10, 70, "Text",ExpressionUUID->"f26a93b4-f347-4547-bde8-029a2af71aa8",
 CellID->36454207],
Cell[175252, 4263, 311, 7, 70, "CodeText",ExpressionUUID->"0ac1b279-fbcb-4a11-85e4-b3d399a2240a",
 CellID->18620316],
Cell[175566, 4272, 853, 22, 70, "Code",ExpressionUUID->"2439926f-2fc7-469e-87e0-531fe717d316",
 CellID->376335899],
Cell[176422, 4296, 537, 10, 70, "Input",ExpressionUUID->"88df7609-c3e3-466c-8499-0643f4dfcc0c",
 CellID->11879177],
Cell[176962, 4308, 212, 3, 70, "Text",ExpressionUUID->"532faeed-ecd8-477f-90d5-d1b4e73b8e18",
 CellID->269926532],
Cell[177177, 4313, 592, 10, 70, "Text",ExpressionUUID->"308312a4-c162-4964-9c6c-4afc90032e0c",
 CellID->992452613],
Cell[177772, 4325, 496, 7, 70, "CodeText",ExpressionUUID->"6372d4eb-abbd-4318-80ee-d0df4cde9fc2",
 CellID->292347291],
Cell[178271, 4334, 646, 16, 70, "Code",ExpressionUUID->"b62d3e93-319a-4d51-9688-fe275ce3bd1c",
 CellID->19289947],
Cell[178920, 4352, 399, 10, 70, "Text",ExpressionUUID->"a38c5a3f-3da6-4925-acb3-280735ecdbe6",
 CellID->1877038100],
Cell[CellGroupData[{
Cell[179344, 4366, 286, 8, 70, "Input",ExpressionUUID->"8180ebd6-e710-4041-919a-14322bb14b94",
 CellID->712835649],
Cell[179633, 4376, 18552, 451, 70, "Output",ExpressionUUID->"785c919e-1007-4e0b-8fef-841139fe43c2",
 CellID->644958616]
}, Open  ]],
Cell[198200, 4830, 200, 5, 70, "Text",ExpressionUUID->"dfa37132-d231-4063-9c57-ee0cfd8d5b8f",
 CellID->1945578282],
Cell[198403, 4837, 301, 7, 70, "CodeText",ExpressionUUID->"4b353f65-1fd5-43d2-9bc5-8daa5fc5c608",
 CellID->57866239],
Cell[198707, 4846, 1849, 50, 70, "Code",ExpressionUUID->"4c5183af-91fb-410f-a7dc-fa3f1308c0d9",
 CellID->393854336],
Cell[200559, 4898, 334, 6, 70, "CodeText",ExpressionUUID->"47bd5c56-0a46-4203-a19a-1062d7cd2ce4",
 CellID->428018796],
Cell[200896, 4906, 678, 14, 70, "Code",ExpressionUUID->"354668fc-bbc4-49a5-a3a3-79ef5f7ad640",
 CellID->601462861],
Cell[201577, 4922, 384, 7, 70, "Text",ExpressionUUID->"4b5477ff-6135-4010-afa6-5c050c35a359",
 CellID->1199369189],
Cell[201964, 4931, 448, 6, 70, "CodeText",ExpressionUUID->"28bb8844-bd15-4c48-b69b-6605c8f30f46",
 CellID->32836953],
Cell[202415, 4939, 2901, 72, 70, "Code",ExpressionUUID->"328c8733-b93b-48a4-a9f9-67c248c11ecc",
 CellID->27489355],
Cell[205319, 5013, 331, 5, 70, "CodeText",ExpressionUUID->"6bfb464f-867a-4a20-a80b-dddef1b43839",
 CellID->389476259],
Cell[205653, 5020, 1031, 23, 70, "Code",ExpressionUUID->"0445af6a-e38b-4d81-917e-d795f6d651f4",
 CellID->155392234],
Cell[206687, 5045, 377, 7, 70, "Text",ExpressionUUID->"4c7f655a-7974-4255-940a-a2cdb7f55a6f",
 CellID->510787878],
Cell[207067, 5054, 800, 16, 70, "Code",ExpressionUUID->"83dca62f-342d-4637-89f9-cf8f1e5c75d3",
 InitializationCell->False,
 CellID->154628078],
Cell[207870, 5072, 274, 6, 70, "Text",ExpressionUUID->"8c34e433-f932-4294-bf67-65d8b93a7187",
 CellID->22225333],
Cell[208147, 5080, 661, 13, 70, "Code",ExpressionUUID->"b09ade5f-a46e-4cac-956a-cc0ea4c268ae",
 InitializationCell->False,
 CellID->459130415]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[208857, 5099, 130, 2, 70, "Section",ExpressionUUID->"137310b4-b1af-49eb-af77-24c82ba533de",
 CellID->516477932],
Cell[208990, 5103, 661, 15, 70, "Text",ExpressionUUID->"bf356fb6-fcb3-41a1-ac65-e2d520f60295",
 CellID->347600131],
Cell[209654, 5120, 637, 9, 70, "CodeText",ExpressionUUID->"51dde71b-f6cb-4fe1-bf50-e3f9c0201d82",
 CellID->67437103],
Cell[210294, 5131, 1416, 30, 70, "Code",ExpressionUUID->"8fc9158d-0a12-4a5e-a267-362fcedb7037",
 CellID->242483529],
Cell[211713, 5163, 333, 5, 70, "CodeText",ExpressionUUID->"c2df504c-2c0b-4e77-9c77-772f47153c18",
 CellID->31072177],
Cell[212049, 5170, 1387, 28, 70, "Code",ExpressionUUID->"0914f6e5-734f-4cde-9908-b87d5a9413e6",
 CellID->632881089],
Cell[213439, 5200, 677, 9, 70, "CodeText",ExpressionUUID->"e6ce2a78-a22b-4980-ae18-2bd60aa89309",
 CellID->449764321],
Cell[214119, 5211, 1096, 22, 70, "Code",ExpressionUUID->"8d635152-cccf-4c87-810e-a30a8d981895",
 CellID->358375778],
Cell[215218, 5235, 445, 8, 70, "CodeText",ExpressionUUID->"3475f224-d327-44d4-9cbb-9f3ae050d999",
 CellID->28863224],
Cell[215666, 5245, 1192, 24, 70, "Code",ExpressionUUID->"15ee82cb-b7d0-4336-b088-f0092798b895",
 CellID->205421547],
Cell[216861, 5271, 372, 7, 70, "CodeText",ExpressionUUID->"bd12595d-6c47-4e3b-a13a-2bfc77cff726",
 CellID->230823471],
Cell[217236, 5280, 1247, 24, 70, "Code",ExpressionUUID->"4fe65d5a-9c1d-445a-bc0c-f6daafc4db9f",
 CellID->137112849],
Cell[218486, 5306, 212, 3, 70, "CodeText",ExpressionUUID->"79e07c56-0815-42e9-a36e-fb8505f36b69",
 CellID->539071811],
Cell[218701, 5311, 1309, 27, 70, "Code",ExpressionUUID->"006ccab8-7713-493a-97b2-1182bf11552b",
 CellID->869741511],
Cell[220013, 5340, 646, 10, 70, "Text",ExpressionUUID->"41f1f25a-b7e2-4e4d-bb5a-7aa5035870b5",
 CellID->506116777],
Cell[220662, 5352, 170, 3, 70, "Text",ExpressionUUID->"98efefb7-0cb0-4c1d-b5d2-0199f90f9de9",
 CellID->66951590],
Cell[CellGroupData[{
Cell[220857, 5359, 548, 14, 70, "Input",ExpressionUUID->"d3838c5e-942f-4442-80cd-6230df000fa0",
 CellID->297639739],
Cell[221408, 5375, 12588, 309, 70, "Output",ExpressionUUID->"85440d60-e7d2-45e5-b869-200988276164",
 CellID->299223936]
}, Open  ]],
Cell[234011, 5687, 235, 5, 70, "Text",ExpressionUUID->"d3eaf082-702c-4547-89ca-301ed4a51251",
 CellID->603052828],
Cell[234249, 5694, 496, 9, 70, "Text",ExpressionUUID->"2cd303d7-7925-4da3-86b1-7006ed5ab1a8",
 CellID->355266128],
Cell[234748, 5705, 846, 13, 70, "Text",ExpressionUUID->"2f69b830-02e2-40d1-bb6a-7721a8febbea",
 CellID->18248537],
Cell[235597, 5720, 153, 2, 70, "CodeText",ExpressionUUID->"4471bd4c-6da1-439f-86d1-29a43f28dd1f",
 CellID->925199063],
Cell[CellGroupData[{
Cell[235775, 5726, 449, 12, 70, "Input",ExpressionUUID->"63290543-8283-4e6e-a864-bdc2528dd5ca",
 CellID->293645272],
Cell[236227, 5740, 9782, 241, 70, "Output",ExpressionUUID->"63f945b3-ffd8-4d70-a5e9-6975a5eac831",
 CellID->435850730]
}, Open  ]],
Cell[246024, 5984, 424, 8, 70, "Text",ExpressionUUID->"9cc21df3-a740-4227-8e0a-100aa13b76fc",
 CellID->111310275],
Cell[246451, 5994, 587, 10, 70, "Text",ExpressionUUID->"5a7e5dc3-5482-4259-a200-78bb327a8105",
 CellID->695329090],
Cell[247041, 6006, 6410, 189, 70, "Input",ExpressionUUID->"55fbc594-1a13-4d2a-9ead-23b6e83c7eb9",
 CellID->147507090],
Cell[253454, 6197, 362, 5, 70, "Text",ExpressionUUID->"d39e73b1-f77b-47ef-9433-d5188e5516d2",
 CellID->793141435],
Cell[253819, 6204, 62672, 1509, 70, "Output",ExpressionUUID->"d69439f5-ea58-45c6-b9de-0b239510134c",
 CellID->308095879],
Cell[316494, 7715, 559, 9, 70, "Text",ExpressionUUID->"8e2f84c0-54ca-4c9f-9e40-e0cc030ece1e",
 CellID->281362675],
Cell[317056, 7726, 357, 7, 70, "Text",ExpressionUUID->"6c045fc8-c05c-4c7f-8d0b-f0946b63058f",
 CellID->953394228],
Cell[317416, 7735, 6354, 189, 70, "Input",ExpressionUUID->"87577c70-c1ee-40fb-889a-31646a93a236",
 CellID->19950555],
Cell[323773, 7926, 144, 2, 70, "CodeText",ExpressionUUID->"874f7477-ea01-48ba-bbd5-fc0c5c3d14d4",
 CellID->63119132],
Cell[323920, 7930, 61881, 1495, 70, "Output",ExpressionUUID->"f5ad44c9-77ff-4f1f-bc7d-8df0fbce6b73",
 CellID->672469377],
Cell[385804, 9427, 384, 7, 70, "Text",ExpressionUUID->"d6a216ea-ce5a-4e95-b46d-b02af76a4ae6",
 CellID->19576836],
Cell[386191, 9436, 447, 9, 70, "Text",ExpressionUUID->"ba7ef0ff-ef93-4ce1-984e-b6368a785a29",
 CellID->448194139],
Cell[386641, 9447, 1006, 15, 70, "Text",ExpressionUUID->"4516b398-7d09-4bf6-8df8-8ef4dd42fcc6",
 CellID->59959185]
}, Open  ]],
Cell[CellGroupData[{
Cell[387684, 9467, 132, 2, 70, "Section",ExpressionUUID->"ebe7a067-d60e-44a3-9417-1b6c677706a7",
 CellID->1372503113],
Cell[387819, 9471, 3411, 56, 70, "Text",ExpressionUUID->"092accf8-ad97-4684-b759-58750c30f935",
 CellID->158811160]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
