(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='WolframDesktop 12.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       161,          7]
NotebookDataLength[    434362,       9300]
NotebookOptionsPosition[    405296,       8705]
NotebookOutlinePosition[    409667,       8795]
CellTagsIndexPosition[    409548,       8789]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[TextData[{
 StyleBox[ButtonBox["Implementing counter machines",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://community.wolfram.com/groups/-/m/t/2317490"], None},
  ButtonNote->"https://community.wolfram.com/groups/-/m/t/2317490"],
  FontWeight->"Bold"],
 StyleBox["\[LineSeparator]",
  FontWeight->"Bold"],
 StyleBox["by ",
  FontSlant->"Italic"],
 StyleBox[ButtonBox["Sam Natarajan",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://community.wolfram.com/web/saminat975"], None},
  ButtonNote->"https://community.wolfram.com/web/saminat975"],
  FontSlant->"Italic"]
}], "Text",
 CellChangeTimes->{{3.835458467133258*^9, 3.8354585118052855`*^9}},
 CellID->267554873],

Cell["\<\
The objective of this project was to implement counter machines in the \
Wolfram Language and establish which counter machine was the most \
unpredictable. I designed a general counter machine function and used this \
function to demonstrate 5 types of counter machines. Finally, I determined \
which counter machines were unpredictable and explored complexity by adding \
more registers.\
\>", "Text",
 TaggingRules->{},
 CellChangeTimes->{3.83536262452136*^9},
 CellID->1479544474],

Cell[CellGroupData[{

Cell["An Introduction to Counter Machines", "Section",
 TaggingRules->{},
 CellChangeTimes->{{3.834849153540751*^9, 3.834849168607637*^9}},
 CellTags->"SectionHeader",
 CellID->453852445],

Cell["\<\
Counter machines operate on a list of numbers based off a set of \
instructions. They have multiple registers, or slots, each of which holds a \
single non-negative integer. In this project, the main focus is counter \
machines with two registers, but three-register counter machines are analyzed \
as well.  Each type of counter machine has a defined set of instructions, and \
the counter machine executes these instructions on the registers. There are \
many different types of counter machines, characterized by their instruction \
sets.\
\>", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.834849169946419*^9, 3.834849307054071*^9}, {
  3.834849360450725*^9, 3.834849539047326*^9}, {3.8349186450203*^9, 
  3.834918686135601*^9}, {3.834920804856948*^9, 3.834920965021443*^9}, {
  3.835261360605619*^9, 3.835261364147509*^9}, {3.835275488255508*^9, 
  3.835275493000288*^9}, {3.835275575340561*^9, 3.835275600208775*^9}, {
  3.835346883735046*^9, 3.835346904821887*^9}, {3.8353491376169863`*^9, 
  3.835349153704314*^9}, {3.835356810933032*^9, 3.8353568300242653`*^9}, {
  3.83536343372661*^9, 3.835363434348489*^9}},
 CellTags->"ExampleTopicSentence",
 CellID->816667160],

Cell[TextData[{
 "Each instruction for a counter machine references an operator, such as \
increment (",
 StyleBox["inc",
  FontSlant->"Italic"],
 "), decrement (",
 StyleBox["dec",
  FontSlant->"Italic"],
 "), and jump (",
 StyleBox["j",
  FontSlant->"Italic"],
 ")."
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{3.835349157064805*^9},
 CellID->1059244510],

Cell["Show an example of a counter machine instruction set:", "CodeText",
 TaggingRules->{},
 CellChangeTimes->{{3.835275515136931*^9, 3.835275538448855*^9}, 
   3.83527612794672*^9, {3.835347743566019*^9, 3.835347746729454*^9}, {
   3.83536195335646*^9, 3.8353619622693357`*^9}},
 CellID->1829909618],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"inc", "[", "r1", "]"}], ",", " ", 
    RowBox[{"dec", "[", "r2", "]"}], ",", " ", 
    RowBox[{"j", "[", "1", "]"}]}], "}"}], ";"}]], "Input",
 TaggingRules->{},
 InitializationCell->True,
 CellChangeTimes->{{3.835275506119465*^9, 3.835275510248752*^9}, {
   3.835275543549231*^9, 3.835275561848778*^9}, 3.835276146660215*^9},
 CellLabel->"In[1]:=",
 CellID->1402695421],

Cell["\<\
These operators change the values of each register and/or the current \
instruction. There are approximately 10 operators: 5 are standard operators \
and the rest are conditional operators. Most counter machine instructions \
reference a couple standard operators and one conditional operator.\
\>", "Text",
 TaggingRules->{},
 CellChangeTimes->{3.835275565417696*^9},
 CellID->2082107417]
}, Open  ]],

Cell[CellGroupData[{

Cell["Creating a Counter Machine Function", "Section",
 TaggingRules->{},
 CellChangeTimes->{{3.834849153540751*^9, 3.834849168607637*^9}, {
  3.83491881108554*^9, 3.834918820779845*^9}, {3.834919411820912*^9, 
  3.8349194264353733`*^9}},
 CellTags->"SectionHeader",
 CellID->821570430],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Creating and Running a Counter Machine", \
"Subsection"]], "Subsection",
 TaggingRules->{},
 CellChangeTimes->{{3.834921773163451*^9, 3.8349217919367123`*^9}, {
  3.83492184064552*^9, 3.8349218457222643`*^9}},
 CellLabel->"In[173]:=",
 CellID->1263816455],

Cell[TextData[{
 "A counter machine is expressed in the form ",
 StyleBox["{z, {r1, r2, r3 ...}}",
  FontSlant->"Italic"],
 ". The first item, ",
 StyleBox["z,",
  FontSlant->"Italic"],
 " represents the current instruction the counter machine is evaluating, and ",
 StyleBox["{r1, r2, r3...}",
  FontSlant->"Italic"],
 " are the registers. Using this information, one can create a generic \
counter machine using ",
 ButtonBox["Table",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://reference.wolfram.com/language/ref/Table.html"], None},
  ButtonNote->"https://reference.wolfram.com/language/ref/Table.html"],
 ", shown in the code below."
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.834849169946419*^9, 3.834849307054071*^9}, {
   3.834849360450725*^9, 3.834849539047326*^9}, {3.8349186450203*^9, 
   3.834918686135601*^9}, {3.83491882234191*^9, 3.834918877238456*^9}, 
   3.834918936677685*^9, {3.8349191745819902`*^9, 3.834919210774876*^9}, {
   3.834919524622922*^9, 3.834919550441235*^9}, {3.834919608083397*^9, 
   3.834919791193317*^9}, {3.835350420033893*^9, 3.835350432025198*^9}, {
   3.835363495709606*^9, 3.8353635079680033`*^9}},
 CellTags->"ExampleTopicSentence",
 CellID->1753531110],

Cell["Create an empty counter machine with Table:", "CodeText",
 TaggingRules->{},
 CellChangeTimes->{{3.8349204334133463`*^9, 3.8349204691987953`*^9}, 
   3.8351060207961817`*^9, {3.83526140265958*^9, 3.835261405023024*^9}, {
   3.835275617740037*^9, 3.8352756345916157`*^9}, 3.835276114785254*^9, {
   3.835347706467185*^9, 3.835347707432294*^9}, {3.8353504138633127`*^9, 
   3.835350413865049*^9}, {3.835361993304084*^9, 3.835362000757084*^9}},
 CellID->1040274273],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"counterMachine", "[", "n_Integer", "]"}], ":=", " ", 
   RowBox[{"{", 
    RowBox[{"1", ",", " ", 
     RowBox[{"Table", "[", 
      RowBox[{"0", ",", " ", "n"}], "]"}]}], "}"}]}], ";"}]], "Input",
 TaggingRules->{},
 InitializationCell->True,
 CellChangeTimes->{{3.834919792137023*^9, 3.8349198211871367`*^9}, 
   3.834921116696203*^9},
 CellLabel->"In[2]:=",
 CellID->1801375566],

Cell[TextData[{
 "In Stephen Wolfram's book, ",
 StyleBox[ButtonBox["A New Kind of Science",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://www.wolframscience.com/nks/notes-3-9--implementation-of-\
register-machines/"], None},
  ButtonNote->
   "https://www.wolframscience.com/nks/notes-3-9--implementation-of-register-\
machines/"],
  FontSlant->"Italic"],
 ", he writes the following two functions to run a generic counter machine."
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.8349198258594437`*^9, 3.834919828887333*^9}, {
  3.834919859855194*^9, 3.8349198615151052`*^9}, {3.834919922410918*^9, 
  3.8349199778236713`*^9}, {3.835275728121523*^9, 3.8352757342516623`*^9}, {
  3.835275770160598*^9, 3.835275770161951*^9}, {3.835347000071702*^9, 
  3.835347005811742*^9}},
 CellID->130883855],

Cell["\<\
Evolve a counter machine by nesting steps from an instruction set:\
\>", "CodeText",
 TaggingRules->{},
 CellChangeTimes->{{3.8349204334133463`*^9, 3.834920477074094*^9}, {
   3.835106022311088*^9, 3.835106023164093*^9}, {3.835261429255993*^9, 
   3.835261432594368*^9}, {3.83527564341197*^9, 3.835275664718082*^9}, 
   3.835276116280649*^9, {3.835347759661569*^9, 3.8353477622976017`*^9}, {
   3.835362004914701*^9, 3.835362021477899*^9}},
 CellID->1636180942],

Cell[BoxData[{
 RowBox[{
  RowBox[{"cmEvolveList", "[", 
   RowBox[{"program_", ",", " ", 
    RowBox[{"init", ":", " ", 
     RowBox[{"{", 
      RowBox[{"_Integer", ",", " ", "_List"}], "}"}]}], ",", " ", 
    "t_Integer"}], "]"}], ":=", " ", 
  RowBox[{"NestList", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"cmStep", "[", 
      RowBox[{"program", ",", " ", "#"}], "]"}], "&"}], ",", " ", "init", ",",
     " ", "t"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"cmStep", "[", 
   RowBox[{"program_", ",", " ", 
    RowBox[{"{", 
     RowBox[{"n_Integer", ",", " ", "list_List"}], "}"}]}], "]"}], ":=", " ", 
  
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"n", " ", ">", " ", 
     RowBox[{"Length", "[", "program", "]"}]}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"1", ",", " ", "list"}], "}"}], ",", " ", 
    RowBox[{"cmExecute", "[", 
     RowBox[{
      RowBox[{"program", "[", 
       RowBox[{"[", "n", "]"}], "]"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"n", ",", " ", "list"}], "}"}]}], "]"}]}], "]"}]}]}], "Input",
 TaggingRules->{},
 InitializationCell->True,
 CellChangeTimes->{{3.834919979316003*^9, 3.83492001912714*^9}, {
  3.8349200703827257`*^9, 3.834920073333869*^9}, {3.834921118660027*^9, 
  3.8349211242325983`*^9}, {3.835347045873453*^9, 3.8353470476425943`*^9}},
 CellLabel->"In[3]:=",
 CellID->1214356693],

Cell[TextData[{
 "Given a list of instructions, an initial counter machine, and the number of \
times to run the counter machine, the first function above utilizes a ",
 ButtonBox["NestList",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://reference.wolfram.com/language/ref/NestList.html"], None},
  ButtonNote->"https://reference.wolfram.com/language/ref/NestList.html"],
 " to run the counter machine. The second function runs each individual \
iteration of the counter machine. If the current instruction is beyond the \
amount of instructions provided, the current instruction ",
 StyleBox["z",
  FontSlant->"Italic"],
 " resets to 1; otherwise, the function executes the current instruction.  "
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.834920033073851*^9, 3.8349203302224903`*^9}, {
  3.83526145650596*^9, 3.835261475420158*^9}, {3.8352756773792267`*^9, 
  3.8352756781821136`*^9}, {3.835350374663816*^9, 3.835350374665172*^9}, {
  3.835350447941577*^9, 3.8353504479434013`*^9}},
 CellID->535636722]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Counter Machine Operators", "Subsection"]], \
"Subsection",
 TaggingRules->{},
 CellChangeTimes->{{3.834921751882745*^9, 3.8349217568269653`*^9}},
 CellLabel->"In[4]:=",
 CellID->1120178040],

Cell["\<\
Each instruction references a counter machine operator. There are many \
operators for counter machines; each is explained below with its code.\
\>", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.834849169946419*^9, 3.834849307054071*^9}, {
   3.834849360450725*^9, 3.834849539047326*^9}, {3.8349186450203*^9, 
   3.834918686135601*^9}, {3.83491882234191*^9, 3.834918877238456*^9}, 
   3.834918936677685*^9, {3.8349191745819902`*^9, 3.834919210774876*^9}, {
   3.834919524622922*^9, 3.834919527001095*^9}, 3.8349200297098093`*^9, {
   3.834920339339944*^9, 3.834920353488141*^9}, {3.834920481008924*^9, 
   3.8349205046307287`*^9}, {3.834920796103812*^9, 3.8349208016807423`*^9}, {
   3.834920981347969*^9, 3.834921003237516*^9}},
 CellTags->"ExampleTopicSentence",
 CellID->1961850447],

Cell[TextData[{
 StyleBox["Increment (INC) - Increase the value of register ", "CodeText"],
 StyleBox["r ", "CodeText",
  FontSlant->"Italic"],
 StyleBox["by 1: ", "CodeText"]
}], "CodeText",
 TaggingRules->{},
 CellChangeTimes->{
  3.835275856195478*^9, {3.83527600040396*^9, 3.8352760023629417`*^9}, {
   3.835349188526372*^9, 3.835349194320702*^9}},
 CellID->2109205021],

Cell[BoxData[{
 RowBox[{
  RowBox[{"cmExecute", "[", 
   RowBox[{
    RowBox[{"inc", "[", 
     RowBox[{"r_", ",", "z_"}], "]"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"n_", ",", " ", "list_"}], "}"}]}], "]"}], ":=", " ", 
  RowBox[{"{", 
   RowBox[{"z", ",", " ", 
    RowBox[{"MapAt", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"#", "+", "1"}], ")"}], "&"}], ",", " ", "list", ",", " ", 
      "r"}], "]"}]}], "}"}]}], "\n", 
 RowBox[{
  RowBox[{"cmExecute", "[", 
   RowBox[{
    RowBox[{"inc", "[", "r_", "]"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"n_", ",", " ", "list_"}], "}"}]}], "]"}], ":=", " ", 
  RowBox[{"cmExecute", "[", 
   RowBox[{
    RowBox[{"inc", "[", 
     RowBox[{"r", ",", 
      RowBox[{"(", 
       RowBox[{"n", "+", "1"}], ")"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "list"}], "}"}]}], "]"}]}]}], "Input",
 TaggingRules->{},
 InitializationCell->True,
 CellChangeTimes->{{3.834919054767391*^9, 3.8349191434211073`*^9}, {
   3.8349210078216133`*^9, 3.834921038587611*^9}, {3.834921080446941*^9, 
   3.834921112194808*^9}, {3.835261568052948*^9, 3.835261583282237*^9}, {
   3.835275801654155*^9, 3.8352758321567097`*^9}, 3.835275946765148*^9},
 CellLabel->"In[5]:=",
 CellID->281936552],

Cell["\<\
The first increment function has the next instruction explicitly specified.\
\>", "Item",
 TaggingRules->{},
 CellChangeTimes->{{3.835362050196774*^9, 3.835362085420823*^9}, {
   3.835362179557869*^9, 3.835362183737954*^9}, 3.835363584581491*^9},
 CellID->469239786],

Cell["\<\
The second increment function simply goes to the next instruction.\
\>", "Item",
 TaggingRules->{},
 CellChangeTimes->{{3.835362050196774*^9, 3.835362139178072*^9}, 
   3.835363585740032*^9},
 CellID->138547003],

Cell[TextData[{
 "Decrement (DEC) - Decrease the value of register ",
 StyleBox["r",
  FontSlant->"Italic"],
 " by 1: "
}], "CodeText",
 TaggingRules->{},
 CellChangeTimes->{
  3.835275887517906*^9, {3.8352760041631117`*^9, 3.835276005769144*^9}},
 CellID->1356163277],

Cell[BoxData[{
 RowBox[{
  RowBox[{"cmExecute", "[", 
   RowBox[{
    RowBox[{"dec", "[", 
     RowBox[{"r_", ",", " ", "z_"}], "]"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"n_", ",", " ", "list_"}], "}"}]}], "]"}], ":=", " ", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"list", "[", 
      RowBox[{"[", "r", "]"}], "]"}], " ", "\[LessEqual]", " ", "0"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"n", "+", "1"}], ",", "list"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"z", ",", " ", 
      RowBox[{"MapAt", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"#", "-", "1"}], ")"}], "&"}], ",", " ", "list", ",", " ", 
        "r"}], "]"}]}], "}"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"cmExecute", "[", 
   RowBox[{
    RowBox[{"dec", "[", "r_", "]"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"n_", ",", " ", "list_"}], "}"}]}], "]"}], ":=", " ", 
  RowBox[{"cmExecute", "[", 
   RowBox[{
    RowBox[{"dec", "[", 
     RowBox[{"r", ",", 
      RowBox[{"(", 
       RowBox[{"n", "+", "1"}], ")"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "list"}], "}"}]}], "]"}]}]}], "Input",
 TaggingRules->{},
 InitializationCell->True,
 CellChangeTimes->{{3.834921056361504*^9, 3.834921066532453*^9}, {
  3.8349210970696793`*^9, 3.834921104401743*^9}, {3.834921304708364*^9, 
  3.8349213076061068`*^9}, {3.835275905842033*^9, 3.835275943547504*^9}, {
  3.835349424143622*^9, 3.8353494249706793`*^9}},
 CellLabel->"In[7]:=",
 CellID->1757172338],

Cell["\<\
The first decrement function has the next instruction explicitly specified.\
\>", "Item",
 TaggingRules->{},
 CellChangeTimes->{{3.835362050196774*^9, 3.835362085420823*^9}, {
   3.835362128477216*^9, 3.835362129551029*^9}, 3.8353635876972637`*^9},
 CellID->1569954796],

Cell["\<\
The second decrement function simply goes to the next instruction.\
\>", "Item",
 TaggingRules->{},
 CellChangeTimes->{{3.835362050196774*^9, 3.835362134056991*^9}, 
   3.8353635889153957`*^9},
 CellID->98685683],

Cell[TextData[{
 "Clear (CLR) - Set register ",
 StyleBox["r",
  FontSlant->"Italic"],
 " to 0:"
}], "CodeText",
 TaggingRules->{},
 CellChangeTimes->{
  3.835275900766876*^9, {3.835276008911975*^9, 3.835276010281798*^9}},
 CellID->1284659909],

Cell[BoxData[
 RowBox[{
  RowBox[{"cmExecute", "[", 
   RowBox[{
    RowBox[{"clr", "[", "r_", "]"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"n_", ",", " ", "list_"}], "}"}]}], "]"}], ":=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"n", "+", "1"}], ",", " ", 
    RowBox[{"MapAt", "[", 
     RowBox[{
      RowBox[{"0", " ", "&"}], ",", " ", "list", ",", " ", "r"}], "]"}]}], 
   "}"}]}]], "Input",
 TaggingRules->{},
 InitializationCell->True,
 CellChangeTimes->{{3.834921133290251*^9, 3.8349211780655613`*^9}, {
  3.834921295793755*^9, 3.8349212998100348`*^9}},
 CellLabel->"In[9]:=",
 CellID->683541111],

Cell[TextData[{
 "Copy (CPY) - Copy the value of register ",
 StyleBox["r1",
  FontSlant->"Italic"],
 " to register ",
 StyleBox["r2",
  FontSlant->"Italic"],
 ":"
}], "CodeText",
 TaggingRules->{},
 CellChangeTimes->{
  3.835275954575367*^9, {3.835276012165503*^9, 3.83527601652698*^9}},
 CellID->2107835368],

Cell[BoxData[
 RowBox[{
  RowBox[{"cmExecute", "[", 
   RowBox[{
    RowBox[{"cpy", "[", 
     RowBox[{"r1_", ",", " ", "r2_"}], "]"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"n_", ",", " ", "list_"}], "}"}]}], "]"}], ":=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"n", "+", "1"}], ",", " ", 
    RowBox[{"MapAt", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"list", "[", 
        RowBox[{"[", "r1", "]"}], "]"}], "&"}], ",", " ", "list", ",", " ", 
      "r2"}], "]"}]}], "}"}]}]], "Input",
 TaggingRules->{},
 InitializationCell->True,
 CellChangeTimes->{{3.834921139881616*^9, 3.8349211755444098`*^9}, {
  3.834921293910551*^9, 3.834921294773006*^9}},
 CellLabel->"In[10]:=",
 CellID->881984356],

Cell[TextData[{
 "Jump (J) - Jump to instruction ",
 StyleBox["z",
  FontSlant->"Italic"],
 ": "
}], "CodeText",
 TaggingRules->{},
 CellChangeTimes->{
  3.835275961110998*^9, {3.835276018271504*^9, 3.835276022054186*^9}},
 CellID->1301616201],

Cell[BoxData[
 RowBox[{
  RowBox[{"cmExecute", "[", 
   RowBox[{
    RowBox[{"j", "[", "z_", "]"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"n_", ",", " ", "list_"}], "}"}]}], "]"}], ":=", " ", 
  RowBox[{"{", 
   RowBox[{"z", ",", " ", "list"}], "}"}]}]], "Input",
 TaggingRules->{},
 InitializationCell->True,
 CellChangeTimes->{{3.834921150119075*^9, 3.83492115701364*^9}, {
  3.83492128952241*^9, 3.8349212924265537`*^9}},
 CellLabel->"In[11]:=",
 CellID->502121321],

Cell[TextData[{
 "Jump if Zero (JZ) - If the value in register ",
 StyleBox["r",
  FontSlant->"Italic"],
 " is 0, then jump to instruction ",
 StyleBox["z",
  FontSlant->"Italic"],
 "; otherwise continue to the next instruction:"
}], "CodeText",
 TaggingRules->{},
 CellChangeTimes->{
  3.8352759706913548`*^9, {3.8352760259254313`*^9, 3.8352760279135723`*^9}},
 CellID->1999049857],

Cell[BoxData[
 RowBox[{
  RowBox[{"cmExecute", "[", 
   RowBox[{
    RowBox[{"jz", "[", 
     RowBox[{"r_", ",", " ", "zTrue_", ",", " ", "zFalse_"}], "]"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"n_", ",", " ", "list_"}], "}"}]}], "]"}], ":=", " ", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"list", "[", 
      RowBox[{"[", "r", "]"}], "]"}], " ", "\[Equal]", " ", "0"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"zTrue", ",", " ", "list"}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"zFalse", ",", " ", "list"}], "}"}]}], "]"}]}]], "Input",
 TaggingRules->{},
 InitializationCell->True,
 CellChangeTimes->{{3.834921263761695*^9, 3.834921267510043*^9}},
 CellLabel->"In[12]:=",
 CellID->889511982],

Cell[TextData[{
 "Jump if Not Zero (JNZ) - If the value in register ",
 StyleBox["r",
  FontSlant->"Italic"],
 " is not 0, then jump to instruction ",
 StyleBox["z",
  FontSlant->"Italic"],
 "; otherwise continue to the next instruction:"
}], "CodeText",
 TaggingRules->{},
 CellChangeTimes->{
  3.835275979916039*^9, {3.835276030185013*^9, 3.835276032020546*^9}},
 CellID->606492544],

Cell[BoxData[
 RowBox[{
  RowBox[{"cmExecute", "[", 
   RowBox[{
    RowBox[{"jnz", "[", 
     RowBox[{"r_", ",", " ", "zTrue_", ",", " ", "zFalse_"}], "]"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"n_", ",", "list_"}], "}"}]}], "]"}], ":=", " ", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"list", "[", 
      RowBox[{"[", "r", "]"}], "]"}], " ", "\[NotEqual]", " ", "0"}], ",", 
    RowBox[{"{", 
     RowBox[{"zTrue", ",", "list"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"zFalse", ",", "list"}], "}"}]}], "]"}]}]], "Input",
 TaggingRules->{},
 InitializationCell->True,
 CellChangeTimes->{{3.834921281553833*^9, 3.8349212873238373`*^9}, {
  3.834921362997507*^9, 3.8349213646573563`*^9}},
 CellLabel->"In[13]:=",
 CellID->131382175],

Cell[TextData[{
 "Jump if Zero or Decrement (JZDEC) - If the value in register ",
 StyleBox["r",
  FontSlant->"Italic"],
 " is 0, then jump to instruction ",
 StyleBox["z",
  FontSlant->"Italic"],
 "; otherwise decrement the value in register ",
 StyleBox["r:",
  FontSlant->"Italic"]
}], "CodeText",
 TaggingRules->{},
 CellChangeTimes->{
  3.835275985404311*^9, {3.8352760343229733`*^9, 3.835276038481906*^9}},
 CellID->253414594],

Cell[BoxData[
 RowBox[{
  RowBox[{"cmExecute", "[", 
   RowBox[{
    RowBox[{"jzdec", "[", 
     RowBox[{"r_", ",", " ", "zTrue_", ",", " ", "zFalse_"}], "]"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"n_", ",", " ", "list_"}], "}"}]}], "]"}], ":=", " ", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"list", "[", 
      RowBox[{"[", "r", "]"}], "]"}], " ", "\[Equal]", " ", "0"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"zTrue", ",", " ", "list"}], "}"}], ",", " ", 
    RowBox[{"cmExecute", "[", 
     RowBox[{
      RowBox[{"dec", "[", 
       RowBox[{"r", ",", " ", "zFalse"}], "]"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"n", ",", " ", "list"}], "}"}]}], "]"}]}], "]"}]}]], "Input",
 TaggingRules->{},
 InitializationCell->True,
 CellChangeTimes->{{3.834921330667568*^9, 3.834921356489049*^9}},
 CellLabel->"In[14]:=",
 CellID->99276548],

Cell[TextData[{
 "Jump if Equal (JE) - If the value in register ",
 StyleBox["r1",
  FontSlant->"Italic"],
 " is equal to the value in register ",
 StyleBox["r2",
  FontSlant->"Italic"],
 ", then jump to instruction ",
 StyleBox["z",
  FontSlant->"Italic"],
 "; otherwise continue to the next instruction:"
}], "CodeText",
 TaggingRules->{},
 CellChangeTimes->{
  3.835275991533991*^9, {3.835276045256776*^9, 3.835276047674446*^9}},
 CellID->2081829360],

Cell[BoxData[
 RowBox[{
  RowBox[{"cmExecute", "[", 
   RowBox[{
    RowBox[{"je", "[", 
     RowBox[{"r1_", ",", " ", "r2_", ",", " ", "zTrue_", ",", "zFalse_"}], 
     "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"n_", ",", "list_"}], "}"}]}], "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"list", "[", 
      RowBox[{"[", "r1", "]"}], "]"}], "\[Equal]", 
     RowBox[{"list", "[", 
      RowBox[{"[", "r2", "]"}], "]"}]}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"zTrue", ",", "list"}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"zFalse", ",", "list"}], "}"}]}], "]"}]}]], "Input",
 TaggingRules->{},
 InitializationCell->True,
 CellChangeTimes->{3.834921384571377*^9},
 CellLabel->"In[15]:=",
 CellID->208013769]
}, Open  ]],

Cell[CellGroupData[{

Cell["Final Counter Machine Function", "Subsection",
 TaggingRules->{},
 CellChangeTimes->{{3.8349218225986757`*^9, 3.834921827573778*^9}},
 CellLabel->"In[12]:=",
 CellID->782082663],

Cell["\<\
Putting all these functions together creates a generic counter machine \
function.\
\>", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.834921394021665*^9, 3.834921456905342*^9}, {
  3.834921493043675*^9, 3.8349214938677883`*^9}, {3.835276088329918*^9, 
  3.835276106158362*^9}},
 CellID->1408053156],

Cell["Create the final counter machine function:", "CodeText",
 TaggingRules->{},
 CellChangeTimes->{{3.8349214845834417`*^9, 3.8349214912237167`*^9}, {
  3.835106006431859*^9, 3.835106009514332*^9}, {3.835261846122786*^9, 
  3.835261848518866*^9}, {3.835276061690062*^9, 3.8352760648035507`*^9}, {
  3.835347779248043*^9, 3.835347784574637*^9}, {3.8353621906817837`*^9, 
  3.835362194494343*^9}},
 CellID->853593659],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"counterMachine", "[", "n_Integer", "]"}], ":=", " ", 
    RowBox[{"{", 
     RowBox[{"1", ",", " ", 
      RowBox[{"Table", "[", 
       RowBox[{"0", ",", " ", "n"}], "]"}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cmEvolveList", "[", 
   RowBox[{"program_", ",", " ", 
    RowBox[{"init", ":", 
     RowBox[{"{", 
      RowBox[{"_Integer", ",", " ", "_List"}], "}"}]}], ",", " ", 
    "t_Integer"}], "]"}], ":=", " ", 
  RowBox[{"NestList", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"cmStep", "[", 
      RowBox[{"program", ",", " ", "#"}], "]"}], "&"}], ",", "init", ",", 
    "t"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"cmStep", "[", 
    RowBox[{"program_", ",", " ", 
     RowBox[{"{", 
      RowBox[{"n_Integer", ",", " ", "list_List"}], "}"}]}], "]"}], ":=", " ", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"n", " ", ">", " ", 
      RowBox[{"Length", "[", "program", "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "list"}], "}"}], ",", 
     RowBox[{"cmExecute", "[", 
      RowBox[{
       RowBox[{"program", "[", 
        RowBox[{"[", "n", "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", " ", "list"}], "}"}]}], "]"}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cmExecute", "[", 
   RowBox[{
    RowBox[{"inc", "[", 
     RowBox[{"r_", ",", "z_"}], "]"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"n_", ",", " ", "list_"}], "}"}]}], "]"}], ":=", " ", 
  RowBox[{"{", 
   RowBox[{"z", ",", " ", 
    RowBox[{"MapAt", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"#", "+", "1"}], ")"}], "&"}], ",", "list", ",", "r"}], 
     "]"}]}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cmExecute", "[", 
   RowBox[{
    RowBox[{"inc", "[", "r_", "]"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"n_", ",", " ", "list_"}], "}"}]}], "]"}], ":=", " ", 
  RowBox[{"cmExecute", "[", 
   RowBox[{
    RowBox[{"inc", "[", 
     RowBox[{"r", ",", 
      RowBox[{"(", 
       RowBox[{"n", "+", "1"}], ")"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "list"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cmExecute", "[", 
   RowBox[{
    RowBox[{"dec", "[", 
     RowBox[{"r_", ",", " ", "z_"}], "]"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"n_", ",", " ", "list_"}], "}"}]}], "]"}], ":=", " ", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"list", "[", 
      RowBox[{"[", "r", "]"}], "]"}], " ", "\[LessEqual]", " ", "0"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"n", "+", "1"}], ",", "list"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"z", ",", " ", 
      RowBox[{"MapAt", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"#", "-", "1"}], ")"}], "&"}], ",", " ", "list", ",", " ", 
        "r"}], "]"}]}], "}"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"cmExecute", "[", 
   RowBox[{
    RowBox[{"dec", "[", "r_", "]"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"n_", ",", " ", "list_"}], "}"}]}], "]"}], ":=", " ", 
  RowBox[{"cmExecute", "[", 
   RowBox[{
    RowBox[{"dec", "[", 
     RowBox[{"r", ",", 
      RowBox[{"(", 
       RowBox[{"n", "+", "1"}], ")"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "list"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cmExecute", "[", 
   RowBox[{
    RowBox[{"clr", "[", "r_", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"n_", ",", "list_"}], "}"}]}], "]"}], ":=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"n", "+", "1"}], ",", " ", 
    RowBox[{"MapAt", "[", 
     RowBox[{
      RowBox[{"0", " ", "&"}], ",", "list", ",", "r"}], "]"}]}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cmExecute", "[", 
   RowBox[{
    RowBox[{"cpy", "[", 
     RowBox[{"r1_", ",", " ", "r2_"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"n_", ",", "list_"}], "}"}]}], "]"}], ":=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"n", "+", "1"}], ",", " ", 
    RowBox[{"MapAt", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"list", "[", 
        RowBox[{"[", "r1", "]"}], "]"}], "&"}], ",", "list", ",", "r2"}], 
     "]"}]}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cmExecute", "[", 
   RowBox[{
    RowBox[{"j", "[", "z_", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"n_", ",", "list_"}], "}"}]}], "]"}], ":=", " ", 
  RowBox[{"{", 
   RowBox[{"z", ",", " ", "list"}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cmExecute", "[", 
   RowBox[{
    RowBox[{"jz", "[", 
     RowBox[{"r_", ",", " ", "zTrue_", ",", " ", "zFalse_"}], "]"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"n_", ",", " ", "list_"}], "}"}]}], "]"}], ":=", " ", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"list", "[", 
      RowBox[{"[", "r", "]"}], "]"}], " ", "\[Equal]", " ", "0"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"zTrue", ",", " ", "list"}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"zFalse", ",", " ", "list"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cmExecute", "[", 
   RowBox[{
    RowBox[{"jnz", "[", 
     RowBox[{"r_", ",", "zTrue_", ",", "zFalse_"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"n_", ",", "list_"}], "}"}]}], "]"}], ":=", " ", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"list", "[", 
      RowBox[{"[", "r", "]"}], "]"}], " ", "\[NotEqual]", " ", "0"}], ",", 
    RowBox[{"{", 
     RowBox[{"zTrue", ",", "list"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"zFalse", ",", "list"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cmExecute", "[", 
   RowBox[{
    RowBox[{"jzdec", "[", 
     RowBox[{"r_", ",", "zTrue_", ",", "zFalse_"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"n_", ",", "list_"}], "}"}]}], "]"}], ":=", " ", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"list", "[", 
      RowBox[{"[", "r", "]"}], "]"}], " ", "\[Equal]", " ", "0"}], ",", 
    RowBox[{"{", 
     RowBox[{"zTrue", ",", "list"}], "}"}], ",", 
    RowBox[{"cmExecute", "[", 
     RowBox[{
      RowBox[{"dec", "[", 
       RowBox[{"r", ",", "zFalse"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "list"}], "}"}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cmExecute", "[", 
   RowBox[{
    RowBox[{"je", "[", 
     RowBox[{"r1_", ",", " ", "r2_", ",", " ", "zTrue_", ",", "zFalse_"}], 
     "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"n_", ",", "list_"}], "}"}]}], "]"}], ":=", " ", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"list", "[", 
      RowBox[{"[", "r1", "]"}], "]"}], " ", "\[Equal]", " ", 
     RowBox[{"list", "[", 
      RowBox[{"[", "r2", "]"}], "]"}]}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"zTrue", ",", "list"}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"zFalse", ",", "list"}], "}"}]}], "]"}]}]}], "Input",
 TaggingRules->{},
 InitializationCell->True,
 CellChangeTimes->{{3.834921502212352*^9, 3.834921559728771*^9}, {
  3.835347133701426*^9, 3.835347149595209*^9}, {3.835349288929534*^9, 
  3.835349290754404*^9}, {3.835349417596932*^9, 3.835349419010374*^9}},
 CellLabel->"In[16]:=",
 CellID->1733166568],

Cell["\<\
The function above, when tested on a random counter machine, works perfectly.\
\
\>", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.834921571922185*^9, 3.8349216129733152`*^9}, {
  3.8349216697187843`*^9, 3.8349217008548927`*^9}},
 CellID->1930276930],

Cell["\<\
Run a two-register counter machine with 5 instructions for 10 steps:\
\>", "CodeText",
 TaggingRules->{},
 CellChangeTimes->{{3.835347171158533*^9, 3.835347204325864*^9}, 
   3.8353477003034773`*^9, {3.8353621966439257`*^9, 3.83536220627605*^9}},
 CellID->297626143],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"cm", " ", "=", " ", 
   RowBox[{"counterMachine", "[", "2", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"instructions", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"inc", "[", "1", "]"}], ",", 
     RowBox[{"dec", "[", 
      RowBox[{"2", ",", "1"}], "]"}], ",", 
     RowBox[{"inc", "[", "2", "]"}], ",", 
     RowBox[{"dec", "[", 
      RowBox[{"1", ",", "3"}], "]"}], ",", 
     RowBox[{"dec", "[", 
      RowBox[{"2", ",", "1"}], "]"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cmEvolveList", "[", 
   RowBox[{"instructions", ",", "cm", ",", " ", "10"}], "]"}], 
  " "}]}], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.834921704163639*^9, 3.834921711316717*^9}},
 CellLabel->"In[195]:=",
 CellID->74769374],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "0"}], "}"}]}], "}"}]}], "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.8349217165253267`*^9, 3.8351023441538687`*^9, 
  3.835276082669454*^9, 3.835276755342942*^9, 3.8353473557379007`*^9, 
  3.835349261726137*^9, 3.835349430787094*^9},
 CellLabel->"Out[197]=",
 CellID->1117358094]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Types of Counter Machines", "Section",
 TaggingRules->{},
 CellChangeTimes->{{3.834849153540751*^9, 3.834849168607637*^9}, {
  3.8349218638705807`*^9, 3.834921869625236*^9}},
 CellTags->"SectionHeader",
 CellID->848062633],

Cell[CellGroupData[{

Cell["Counter Machine Instruction Sets", "Subsection",
 TaggingRules->{},
 CellChangeTimes->{{3.8349229821165657`*^9, 3.834922984641756*^9}, {
  3.834923069153837*^9, 3.834923093248249*^9}},
 CellLabel->"In[18]:=",
 CellID->881654245],

Cell["\<\
There are 5 main types of counter machines, characterized by their \
instruction sets. Essentially, each type of counter machine has a specific \
set of instructions in a specific order. These 5 types are the \
Shepherdson-Sturgis machine, the Minsky machine (aka the Abacus \
machine/Lambek machine), the Program machine/Program computer, the Successor \
machine, and the Elgot-Robinson model. Each counter machine's instruction is \
shown below.

Note: The variables used in the machine instruction set are arbitrary; the \
instructions in the set and the order of the instructions is what matters. \
\>", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.834849169946419*^9, 3.834849307054071*^9}, {
   3.834849360450725*^9, 3.834849539047326*^9}, {3.8349186450203*^9, 
   3.834918686135601*^9}, {3.834920804856948*^9, 3.834920965021443*^9}, {
   3.8349218761016407`*^9, 3.83492190449441*^9}, {3.834922299787401*^9, 
   3.834922389432645*^9}, {3.834922488894356*^9, 3.834922602777663*^9}, {
   3.8349227772517433`*^9, 3.834922828074647*^9}, 3.8351059200486383`*^9, {
   3.835361710256927*^9, 3.835361772580296*^9}, {3.835363656453588*^9, 
   3.835363656661819*^9}},
 CellTags->"ExampleTopicSentence",
 CellID->539707692],

Cell["Show the instruction set for a Shepherdson-Sturgis machine:", "CodeText",
 TaggingRules->{},
 CellChangeTimes->{{3.8352761962297993`*^9, 3.835276197206133*^9}, {
  3.83534779312967*^9, 3.8353477944132643`*^9}, {3.8353622160667267`*^9, 
  3.83536222068821*^9}},
 CellID->1320868250],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"INC", "[", "r", "]"}], ",", " ", 
    RowBox[{"DEC", "[", "r", "]"}], ",", " ", 
    RowBox[{"CLR", "[", "r", "]"}], ",", " ", 
    RowBox[{"CPY", "[", 
     RowBox[{"r1", ",", " ", "r2"}], "]"}], ",", " ", 
    RowBox[{"JNZ", "[", 
     RowBox[{"r", ",", " ", "z"}], "]"}], ",", " ", 
    RowBox[{"J", "[", "z", "]"}]}], "}"}], ";"}]], "Input",
 TaggingRules->{},
 InitializationCell->True,
 CellChangeTimes->{{3.8349223929331017`*^9, 3.834922407987105*^9}, {
   3.834922450641646*^9, 3.834922484917694*^9}, {3.835261965811122*^9, 
   3.835261969590261*^9}, {3.835276162062171*^9, 3.835276170110505*^9}, 
   3.835276345416533*^9},
 CellLabel->"In[30]:=",
 CellID->1964062737],

Cell["\<\
Show the instruction set for a Minsky machine (aka Abacus machine/Lambek \
machine):\
\>", "CodeText",
 TaggingRules->{},
 CellChangeTimes->{{3.835276216341249*^9, 3.835276218290434*^9}, 
   3.835347796844076*^9, {3.8353622219003973`*^9, 3.8353622296508837`*^9}},
 CellID->1999786238],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"INC", "[", 
     RowBox[{"r", ",", " ", "z"}], "]"}], ",", " ", 
    RowBox[{"JZDEC", "[", 
     RowBox[{"r", ",", " ", "zTrue", ",", " ", "zFalse"}], "]"}]}], "}"}], 
  ";"}]], "Input",
 TaggingRules->{},
 InitializationCell->True,
 CellChangeTimes->{{3.8349223929331017`*^9, 3.834922414066802*^9}, {
   3.834922646194141*^9, 3.834922666065319*^9}, {3.8352762199904337`*^9, 
   3.835276230372402*^9}, 3.835276350124865*^9},
 CellLabel->"In[31]:=",
 CellID->822603526],

Cell["\<\
Show the instruction set for a Program machine/Program computer:\
\>", "CodeText",
 TaggingRules->{},
 CellChangeTimes->{{3.8352762480428343`*^9, 3.835276249505665*^9}, 
   3.8353477982158413`*^9, {3.8353622380670633`*^9, 3.835362242346848*^9}},
 CellID->1363953232],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"INC", "[", "r", "]"}], ",", " ", 
    RowBox[{"DEC", "[", "r", "]"}], ",", " ", 
    RowBox[{"JZ", "[", 
     RowBox[{"r", ",", " ", "rTrue"}], "]"}]}], "}"}], ";"}]], "Input",
 TaggingRules->{},
 InitializationCell->True,
 CellChangeTimes->{{3.8349223929331017`*^9, 3.834922422193822*^9}, {
   3.834922669411212*^9, 3.83492268253935*^9}, {3.8352762521255493`*^9, 
   3.835276257271406*^9}, 3.835276354734519*^9},
 CellLabel->"In[32]:=",
 CellID->505863584],

Cell["Show the instruction set for a Successor machine:", "CodeText",
 TaggingRules->{},
 CellChangeTimes->{
  3.835276271714596*^9, 3.835347799210598*^9, {3.8353622458851757`*^9, 
   3.835362247637891*^9}},
 CellID->456471451],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"CLR", "[", "r", "]"}], ",", " ", 
    RowBox[{"INC", "[", "r", "]"}], ",", " ", 
    RowBox[{"JE", "[", 
     RowBox[{"r1", ",", " ", "r2", ",", " ", "z"}], "]"}]}], "}"}], 
  ";"}]], "Input",
 TaggingRules->{},
 InitializationCell->True,
 CellChangeTimes->{{3.834922923329348*^9, 3.834922954110985*^9}, {
   3.8352762740482893`*^9, 3.835276279649062*^9}, 3.835276358327544*^9},
 CellLabel->"In[33]:=",
 CellID->640530816],

Cell["Show the instruction set for an Elgot-Robinson model:", "CodeText",
 TaggingRules->{},
 CellChangeTimes->{{3.8352763003465137`*^9, 3.8352763008199463`*^9}, 
   3.8353478002978897`*^9, {3.835362248952661*^9, 3.8353622550976257`*^9}},
 CellID->51008330],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"INC", "[", "r", "]"}], ",", " ", 
    RowBox[{"CPY", "[", 
     RowBox[{"r1", ",", " ", "r2"}], "]"}], ",", " ", 
    RowBox[{"JE", "[", 
     RowBox[{"r1", ",", " ", "r1", ",", " ", "z"}], "]"}]}], "}"}], 
  ";"}]], "Input",
 TaggingRules->{},
 InitializationCell->True,
 CellChangeTimes->{{3.834922960436504*^9, 3.834922974761016*^9}, {
  3.835276303003611*^9, 3.8352763074254227`*^9}, {3.835276365605709*^9, 
  3.835276367137856*^9}},
 CellLabel->"In[34]:=",
 CellID->1547502507]
}, Open  ]],

Cell[CellGroupData[{

Cell["Modeling Counter Machines", "Subsection",
 TaggingRules->{},
 CellChangeTimes->{{3.834923105153385*^9, 3.834923116297077*^9}, {
  3.8349332936015453`*^9, 3.8349332946705713`*^9}},
 CellLabel->"In[6]:=",
 CellID->396863793],

Cell[TextData[{
 "Using the counter machine and the instruction set created above, the \
different counter machines can be evaluated for any number of steps. The \
counter machine is expressed with ",
 ButtonBox["Grid",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://reference.wolfram.com/language/ref/Grid.html"], None},
  ButtonNote->"https://reference.wolfram.com/language/ref/Grid.html"],
 " and ",
 ButtonBox["ArrayPlot",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://reference.wolfram.com/language/ref/ArrayPlot.html"], None},
  ButtonNote->"https://reference.wolfram.com/language/ref/ArrayPlot.html"],
 ", displayed side-by-side with ",
 ButtonBox["GraphicsRow",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://reference.wolfram.com/language/ref/GraphicsRow.html"], None},
  
  ButtonNote->"https://reference.wolfram.com/language/ref/GraphicsRow.html"],
 ". For the grid, the left side shows the current instruction and the right \
side shows the registers. For the ArrayPlot, the leftmost column is the \
instruction, the middle column shows the value of register 1, and the right \
column shows the value of register 2. \n\nNote: For the ArrayPlot, the colors \
get darker as the number increases. If two colors are the same, they have the \
same value."
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.834923123216978*^9, 3.834923125148816*^9}, {
  3.834923160826386*^9, 3.834923387277439*^9}, {3.8349238472876062`*^9, 
  3.8349238477214518`*^9}, {3.83493333004318*^9, 3.834933529119288*^9}, {
  3.835350527278449*^9, 3.835350560699815*^9}, {3.835350672298349*^9, 
  3.8353507119209757`*^9}, {3.8353636979131947`*^9, 3.8353637391790257`*^9}},
 CellID->1466484399],

Cell[CellGroupData[{

Cell["Shepherdson-Sturgis Machine", "Subsubsection",
 TaggingRules->{},
 CellChangeTimes->{{3.835106079871065*^9, 3.835106094681126*^9}},
 CellID->1314857355],

Cell["\<\
Model the evolution of a Shepherdson-Sturgis machine for 15 steps:\
\>", "CodeText",
 TaggingRules->{},
 CellChangeTimes->{{3.835349475720848*^9, 3.8353495035408897`*^9}, {
  3.835349548622024*^9, 3.835349549443397*^9}, {3.83534959479001*^9, 
  3.835349595886047*^9}, {3.835362264536931*^9, 3.835362268786531*^9}},
 CellID->384341250],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ssMachine", " ", "=", " ", 
      RowBox[{"counterMachine", "[", "2", "]"}]}], ",", 
     RowBox[{"ssMachineInstructions", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"inc", "[", "1", "]"}], ",", 
        RowBox[{"dec", "[", "2", "]"}], ",", 
        RowBox[{"clr", "[", "1", "]"}], ",", 
        RowBox[{"cpy", "[", 
         RowBox[{"2", ",", "1"}], "]"}], ",", 
        RowBox[{"jnz", "[", 
         RowBox[{"2", ",", "3", ",", "6"}], "]"}], ",", 
        RowBox[{"j", "[", "1", "]"}]}], "}"}]}], ",", "ssMachineTable"}], 
    "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ssMachineTable", "=", 
     RowBox[{"cmEvolveList", "[", 
      RowBox[{"ssMachineInstructions", ",", "ssMachine", ",", "15"}], "]"}]}],
     ";", "\[IndentingNewLine]", 
    RowBox[{"GraphicsRow", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"Grid", "[", 
          RowBox[{"ssMachineTable", ",", " ", 
           RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}], ",", 
         RowBox[{"RGBColor", "[", 
          RowBox[{"0.8", ",", "0.36", ",", "0.41"}], "]"}], ",", "17"}], 
        "]"}], ",", 
       RowBox[{"ArrayPlot", "[", 
        RowBox[{
         RowBox[{"Partition", "[", 
          RowBox[{
           RowBox[{"Flatten", "[", "ssMachineTable", "]"}], ",", "3"}], "]"}],
          ",", 
         RowBox[{"Mesh", "\[Rule]", "True"}]}], "]"}]}], "}"}], "]"}]}]}], 
  "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.834923437001052*^9, 3.83492343745555*^9}, 
   3.834923858146153*^9, {3.8349238975474987`*^9, 3.834923922155081*^9}, {
   3.834933315926236*^9, 3.834933316116797*^9}, {3.834933537289509*^9, 
   3.8349335596493*^9}, {3.834933837197139*^9, 3.834933842604347*^9}, 
   3.834933946337636*^9, {3.8349340299292088`*^9, 3.834934038824646*^9}, {
   3.8351060511503143`*^9, 3.835106064611477*^9}, {3.835262087781433*^9, 
   3.835262089282825*^9}, {3.835276321323296*^9, 3.83527632700856*^9}, {
   3.835276375643675*^9, 3.835276418757907*^9}, {3.835349306439323*^9, 
   3.83534931183149*^9}, {3.8353495080850897`*^9, 3.835349530790448*^9}},
 CellLabel->"In[204]:=",
 CellID->1857136487],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztnc+LJEmWmFvSRUf9C7ruX7BXHXVdMbe57KLRti6jYVYglA07gqwGNVQX
DAwBLSaaFug0QoeSDqnL/AcFCQPZqhw6pwVCkXOqgy5xNLl7hP+ICDf3956b
m1mEfR/OMttV6S8sy74w//HsvX/6N//mr/7VP/zss8/+7h9X/+ev/vrf/bNf
/vKv//2/+CfV//OTn//dv/7bn//sX/7zn//bn/3tz375l3/zj6r/+Fz93b/8
B599Vv9vBwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAALAaz1++40h7vP73/5l6FkDufPjp5xxpj//9
n/5z6lkAuZNknvy/75+ruP/3v/2PyHEzBE9BAp6mBU9BAp6mBU9BAp6mBU9B
Ap6mBU9BAp6mZfnv/1uISKh/dy3X4enucfd++7LZvrx/XfNzmdg91B9s87D7
YPlsQTx9SkHCSZsq9LV6unt4+unnHzaP2p9Tebp/f9+/bTyP9fppc//U/end
/cv7x73200whOP+Hrf/jzYOntiEXFdctmiePL9bJqfG0jfLT+/P19PAtMXLc
73baTzSG8PyH9fTu+KcvH3RB8NQ25KLiOvM82T12M3NdT4+yXKrX+9tdcO4/
dGZtP2k/0znq83/a1H/0pLwyx1PbkIuK60zzZP9he7LQrOrp8ary3Iv2YvjC
l3YR1PpyhuH8xx9R/jbw1DbkouI67Typl9HubrG9cYvg6d3D6V3hcbEbldGr
mALL+fE0Gng6SXcp+PnTphLndXeXyNPjIuu5D/VeKosxnR9Po4GnkzSe3m0/
HednMk/nVsyp1VCC7fx4Gg08nWZ/soLg6Zin55foM+CpbchFxXWL5kkMT0cn
/+HJqt8I+wdbcn48jQaeaojh6VGZ0xB5eup7ND0NntqGXFRcl7mn7UuQs+SB
TD01XW/jqW3IRcV1+Xr6+un91vfeJ1dP+xzCp83DJ9nTZjy1DbmouC5bTyfT
FebuBAM9R7KdX5logae2IRcV12XsaZ/We5Exm+fz3uZj9+mUwq09eGobclFx
XbaeNux9+QbTmQzL8xyM5+9/IfJHvnhqG3JRcV3enjpvcnuOeYO27wc8tQ25
qLgue099t4qtLL6lNlQevub846nIM+CpbchFxXXZe+qf/NntayPPIRp4qiGi
p6PeqfaJd29M5Ousch86+b3RwFMNadfT42eQ1l0xeKo6P55GBE/jEM5TFfWl
rLYuihw8jQaexiHMda+W5joWT/H06uK6ojytTxWoxNkY1EeKBp7GwVBvsMmY
fV1w9dvcTVszfqfZVx+szUam3mAE8DQOqvq9x6x4T06+lOqiN8xN7gXD+r36
dR9PbUMuKq67Bk+PD12XbYFZkTa5sfoeEO6ROflpPDUNuai47jo8vWXw1Dbk
ouI6PE0NntqGXFRch6epwVPbkIuK6/A0NXhqG3JRcR2epgZPbUMuKq7D09Tg
qW3IRcV1eJoaPLUNuai4Dk9Tg6e2IRcV1zXz5I9f/fr5y3cxj++/eFPF/cMv
vogcN8MDT21DLiquazx9vn87thuaI9KBp4YhFxXXcd2bGjy1DbmouA5PU4On
tiEXFdfhaWqCeArRCPXvrgVP0xLE09+l4NtE63jCpRxPZ9g97t5vXzZbYTOI
qOwe6g+2eejKh6rAUzyVoJ0n+w8PL3f3/ePKyRJ8PlSetiWvm2Ni/+mhjGfg
DaqCeoPDfeL66HiKpxI086QtBDpyjHRrmsBQd6UOMbWetn8toKfC+r2H9bRr
/5Si7gqexuEqPO3qnzwN1pRBiXhFiTCFp5KmLYMuaeE8VdfDT1jHDE/jcAWe
TvVtUa9lAesN7j9sT1a9QJ7ONXsa+T0krAuKp3HI39Pp5inaFmlh6mzXy2h3
63rvaz5uwtKvDU/xdD1k82SuRYWvUamHoH2g6pKh+wVNNLxBlf1P8RRP1yPI
e5kU62nj6d22LfEX0lNbP3E8xdP1COFp64i4QG6Q6979yXKWjacp+iriaRyu
2tPu/ab8lcTyPsUXhPT0+GTb3yRuNBae4ul6LJ0n3Vt+zfyUe3pUZt6+9J7a
WuHgKZ5KWDRP+nciuskp9bR9CSJYqTPwdPIpsQ88xVMJ5nkyeHGpboIm8PT1
U9tZSaZeDp4OuiFvpD0s8BRPJdjmySDndmtoqjLv6VRaxSgrPEfyejq5bio/
OZ7iqQT9PKlT09t7UmNbUomnfVqv6PFU+ue9NYMMRuHWHjzFUwnKeTJIxV/Q
plB4f7pXpE8EzXOYTir2/mn/GeS/GTzFUwmaedJLqs02P0P7vFcQLqinprxB
0ZaBC/AUTyWI50kwSV3270/7uJfSTdx+TqQi+8FTPJWgy8MPIakLlYd/QmBP
DfvayHPA0/WQzZM+6X36EKYkBdzX1iLcKaD5nhHuE28hvxdP10M0T7wzNpan
y9dTg6fNaefrrrTgKZ6ux/J5YmAFTyXUVwXauihy8BRP1+M6PFXmJY7TXBXg
KZ4u+VUnieuK8rQ+lTrFUQ71kfB0PXL3tHuVWWfMvi64+m1uYANXDT2yrz5Y
m41MvUE8XYPsPe3rHC567VJd9Ia5yb1gWL9Xv+7jKZ5KyN/T40PXwK9Hw9Em
N1bfA4YtCXiKpxKuwdNbBk/xVAKepgVP8VQCnqYFT/FUAp6mBU/xVAKepgVP
8VQCnqYFT/FUAp6mBU/xVAKepgVP8VRCNU9+eLeplIl5/PjNd1Xcj2++jhw3
wwNP8VRCNU+e799K9pZyrHTgKZ7OUs2TP/3mt9WFaMzjzw+/r+JWq2rkuBke
eIqnEpbPEwPcn3bgKZ5KwNO0BPEUohHq310LnqYliKe/SsG3rKcRuQ5Pd4+7
99uXzVbYDCIqu4f6g20euvKhKvAUTyVo58m+bqHSNYH6/Onu/uWDusyCytNB
z6nJ/aeHooiBN6gK6g0O94nro+MpnkpQzZO+A9TZoWwIpfG0r3c9uZ62fy2g
p8L6vYf1tGv/lKLuCp7G4So87UviD/oc9V1Q1+knLmraMuiSlrAefsI6Znga
h2vw1L9gtRd+8qVE4elcvcFBu+SQns41exrxMWFdUDyNwxV4OtXiUN3vXu3p
6GJ9cqd8r2k+PoulXxue4ul6hHjem8TTvuXN06b606B9oKb7rnouxfEUT9cj
gKeKbsJHgnl6t21L/KXvJ46neLoei+bJ7rV7AvykmZ9Brnv3J18L2Xiaoq8i
nsbh6jw9eaf503tt+oHc0yR9io+Vvb1Bx2PhKZ6uh22eVDP56e6+PvqbRG/D
wUvknh6Vmbcvvae2Vjh4iqcSls+TfZeQI3ZE6mn7EkTwxicDT/XP0xye4qmM
EM97+8vgcH2KXz+1nZVk6uXg6aAb8kbawwJP8VRCEE+1S8m8p/50Ag8rPEfy
ejo5WOUnx1M8lRDIU50mEk/7tF7RGp3+eW/NIINR+GwNT/FUgnCetM0NfVM3
tKcNe8Wb2aB5DtNJxd4/7T+D/JEanuKpBGXeoOcOVPHAp0b7vFdwDRnUU1Pe
oGjLwAV4iqcSxPOkzdMbuWtrHRG/ksj8/Wkf91K6idvPiVRkP3iKpxIU86R7
/9Jn6x22jau3XobJwz8hsKeGfW3kOeDpeqjmyWka0snW6RdN1ZGA+9pa5jzt
3pjIX24K94m3kN+Lp+uhnie7x91lKRJlv/sE66nB0+a083VXWvAUT9cj0HsZ
HSt4KqG+lNXWRZGDp3i6HtfhqTJpdpzmOhZP8XTJrzpJXFeUp/WpdC9NVFAf
CU/XI3dPu1eZdcasugDpgOYGNnDV0CP76oO12cjUG8TTNcje0y4Vatlrl+qi
N8xN7gXD+r36dR9P8VRC/p4eH7oGfj0ajja5sfoeEO6ROflpPMVTAdfg6S2D
p3gqAU/Tgqd4KgFP04KneCoBT9OCp3gqAU/Tgqd4KgFP04KneCoBT9OCp3gq
AU/Tgqd4KgFP04KneCqhmifP9289u785Yhx4iqezVPPkh3ebammLefz4zXdV
3I9vvo4cN8MDT/FUwvJ5YoDr3g48xVMJeJqWIJ5CNEL9u2vB07QE8fQnKUg4
aVOFxtNiwVPbkIuK667F093j7v32ZbPVNkSOwe6h/mCbh52mMmoHntqGXFRc
t3yemJo1qDw9KRp8vk9cUbfThOD8w3oO+m3seGobclFx3dJ5Migav5anfYjz
9VRZB1uN8PyH9VTfFOAAntqGXFRct2yeDCoXreapd71W95VQoj5/wnqDeHrb
cd2CeXLaw2I1Tz11Qeeapql9OcNw/oT1e/H0tuM68zzplrn38halPYvr4Zv6
HiqwnB9Po4GnMo7TuL4XU7QS7lnq6XRQ06OtkaDK8+NpNPBUwvG29DAhU3g6
t2JOrYYSbOfH02jgqeAHTsXB07OfStH/FE9vO67TzpPLS76VPR2d/McF3WvE
0p7FtvPjaTTwdJLj/DxZR1b29OQa++w/ZuaprWUVntqGXFRcp5kno8qs62n7
EuQseSBTT03X23hqG3JRcZ18nvgWi7U8ff3UdkC71C1XTwddyzfSXjN4ahty
UXGdcJ5MvOlYydPJdIW5O8FAz5Fs51cmWuCpbchFxXWyeXKaejR5yJYwiad9
Wu9Fxmyez3ubj/3YJ/ri6Wrg6SgJPD3E9S3W05kMy/McjOfvr4flj3zx1Dbk
ouK65fMkyvPei5Urx7xB2/cDntqGXFRcl72nvlvFVhbfUhsqD19z/vFU5Bnw
1DbkouK67D31T/7s9rWR5xANPNX/fBRPR71T7RPv3pjI11nlPnTye6OBp/qf
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
64rytD5VoBJnY1AfKRp4GgdDvcEmY/Z1wdVvczdtzfidZl99sDYbmXqDEcDT
OKjq9x6z4j05+VKqi94wN7kXDOv36td9PLUNuai47ho8PT50XbYFZkXa5Mbq
e0C4R+bkp/HUNOSi4rrr8PSWwVPbkIuK6/A0NXhqG3JRcR2epgZPbUMuKq7D
09TgqW3IRcV1eJoaPLUNuai4Dk9Tg6e2IRcV1+FpavDUNuSi4jo8TQ2e2oZc
VFzXzJM/fvXr5y/fxTy+/+JNFfcPv/gictwMjyCeQjRCeaelmifP92/HdkNz
RDqWe/q7FHybaB1PuJSn9ZTr3oTgKZ5KwNO04CmeSsDTtOApnkrA07TgKZ5K
uA5Pd4+799uXzVbYDCIqu4f6g20euvKhKvAUTyVo58n+w8PL3X3/uHKyBJ8P
ladtyevmmNh/eijjGXiDqqDe4HCfuD46nuKpBM08aQuBjhwj3ZomMNRdqUNM
raftXwvoqbB+72E97do/pai7gqdxuApPu/onT4M1ZVAiXlEiTOGppGnLoEta
OE/V9fAT1jHD0zhcgadTfVvUa1nAeoP7D9uTVS+Qp3PNnkZ+DwnrguJpHPL3
dLp5irZFWpg62/Uy2t263vuaj5uw9GvDUzxdD9k8mWtR4WtU6iFoH6i6ZOh+
QRMNb1Bl/1M8xdP1CPJeJsV62nh6t21L/IX01NZPHE/xdD1CeNo6Ii6QG+S6
d3+ynGXjaYq+ingah6v2tHu/KX8lsbxP8QUhPT0+2fY3iRuNhad4uh5L50n3
ll8zP+WeHpWZty+9p7ZWOHiKpxIWzZP+nYhucko9bV+CCFbqDDydfErsA0/x
VIJ5ngxeXKqboAk8ff3UdlaSqZeDp4NuyBtpDws8xVMJtnkyyLndGpqqzHs6
lVYxygrPkbyeTq6byk+Op3gqQT9P6tT09p7U2JZU4mmf1it6PJX+eW/NIINR
uLUHT/FUgnKeDFLxF7QpFN6f7hXpE0HzHKaTir1/2n8G+W8GT/FUgmae9JJq
s83P0D7vFYQL6qkpb1C0ZeACPMVTCeJ5EkxSl/370z7upXQTt58Tqch+8BRP
Jejy8ENI6kLl4Z8Q2FPDvjbyHPB0PWTzpE96nz6EKUkB97W1CHcKaL5nhPvE
W8jvxdP1EM0T74yN5eny9dTgaXPa+borLXiKp+uxfJ4YWMFTCfVVgbYuihw8
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
AAAAAABQLP8fX1fAPg==
    "], {{0, 437.4}, {187.2, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->120],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{187.2, 437.4},
  PlotRange->{{0, 187.2}, {0, 437.4}}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{
  3.834923439180595*^9, 3.834923624371814*^9, 3.834923858802294*^9, {
   3.8349238982258253`*^9, 3.8349239227877913`*^9}, 3.834933319024351*^9, {
   3.8349335464825077`*^9, 3.834933560858281*^9}, 3.834933846157185*^9, 
   3.834933947979698*^9, {3.834934033413457*^9, 3.834934040589786*^9}, 
   3.834934230983914*^9, 3.835102346190227*^9, 3.835106142710305*^9, {
   3.835276408105013*^9, 3.835276422236215*^9}, 3.8352768149659357`*^9, 
   3.835347360695643*^9, {3.835347455341969*^9, 3.835347463360806*^9}, 
   3.835349228443799*^9, 3.835349269092894*^9, {3.835349309793955*^9, 
   3.835349314055488*^9}, 3.835349435039811*^9, 3.835349532698165*^9},
 CellLabel->"Out[204]=",
 CellID->16746611]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Minsky Machine (aka Abacus Machine/Lambek Machine)", "Subsubsection",
 TaggingRules->{},
 CellChangeTimes->{{3.835106163214408*^9, 3.835106172259119*^9}},
 CellID->911049051],

Cell["Model the evolution of a Minsky machine for 15 steps:", "CodeText",
 TaggingRules->{},
 CellChangeTimes->{{3.835349539974601*^9, 3.835349558088644*^9}, 
   3.8353496032286587`*^9, {3.835362273580174*^9, 3.835362278891324*^9}},
 CellID->1776997447],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"minskyMachine", "=", 
      RowBox[{"counterMachine", "[", "2", "]"}]}], ",", 
     RowBox[{"minskyMachineInstructions", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"inc", "[", 
         RowBox[{"1", ",", "2"}], "]"}], ",", 
        RowBox[{"jzdec", "[", 
         RowBox[{"2", ",", "1", ",", "2"}], "]"}]}], "}"}]}], ",", 
     "minskyMachineTable"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"minskyMachineTable", "=", 
     RowBox[{"cmEvolveList", "[", 
      RowBox[{"minskyMachineInstructions", ",", "minskyMachine", ",", "15"}], 
      "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"GraphicsRow", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"Grid", "[", 
          RowBox[{"minskyMachineTable", ",", " ", 
           RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}], ",", 
         RowBox[{"RGBColor", "[", 
          RowBox[{"0.8", ",", "0.36", ",", "0.41"}], "]"}], ",", "17"}], 
        "]"}], ",", 
       RowBox[{"ArrayPlot", "[", 
        RowBox[{
         RowBox[{"Partition", "[", 
          RowBox[{
           RowBox[{"Flatten", "[", "minskyMachineTable", "]"}], ",", "3"}], 
          "]"}], ",", 
         RowBox[{"Mesh", "\[Rule]", "True"}]}], "]"}]}], "}"}], "]"}]}]}], 
  "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.834923686839816*^9, 3.834923687061803*^9}, 
   3.834923867706505*^9, {3.834923902170487*^9, 3.834923929900063*^9}, 
   3.834933959159308*^9, {3.8349340761410227`*^9, 3.834934077842821*^9}, {
   3.835276431607582*^9, 3.835276456992324*^9}, {3.835349442364896*^9, 
   3.835349448370535*^9}, {3.835349561032915*^9, 3.8353495782666407`*^9}},
 CellLabel->"In[205]:=",
 CellID->2079139826],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
xEfDuqB4WobFeNoso50RK2e/7ynUnvpLkHVr7q1lvzY8xdN8aOZJ32XmYV2L
07f71AZN6unxrJoLw1R9oPyf49iK4yme5kPt6c2mrao3C0+Pl6Wv55DI07B+
4niKp/lQzZP9yfyfgadnP52DpxZ9FfG0DEvx9JQSnvom/+X+M5GnxzXaadz4
F8dTPM3HzD092daORT9Z1Ew9DWuFg6d4KmHWnrYPQS6TB8b9tfXUe5fYBZ7i
qYS5evryqe2sNPL5rpXL2NNBN+S1tIcFnuKphJl66k4n8GUopb2P5PTUu256
znwMPMVTCbP1tE/rPd30nqYeeY/QplFh93sPp92nUwpf7cFTPJUwU08P7MfW
xwKeTiQVO3/aD4j8li+e4qmEOXtaaZPbU+UjBeUNhr1Vh6d4KmHmnuoeSibz
tJPx4qM8l5+SVOQL8BRPJczcU93kT+dpwHtt5DngaT6W4akwecDjaffERP5w
U/ieeAv5vXiaj2V4Gr+eBnjaIKi70oKneJqP+HkSQC5PJ2i2stq6KHLwFE/z
sQxPlUmz4xz2sXiKpzFDbRK3uipPm49KWIrwHOoj4Wk+5u5p9yizyZh9idj9
Hq6mgzMfvOzrE2uzkak3iKc5mL2nw0KCcSlGaS5yLxjW79Wv+3iKpxLm7+nx
pmvoveXstDeZ698DwndkTv42nuKpgCV4+jmDp3gqAU9twVM8lYCntuApnkrA
U1vwFE8l4KkteIqnEvDUFjzFUwl4ague4qkEPLUliadQjFT/7lrw1JYknn6w
oI77z4yw8sXW08fVO1FZMI48B57i6ST1PPnp/bpe2koez99+X8f9+PbrwnFn
eOApnkqInycBsO/twFM8lYCntuApnkrAU1vwFE8l4KkteIqnEpbh6e5+d7t5
Wm+ETVuKsts2J7bedmV+VeApnkrQzpP93fbpZtDhxVsq04XK05OGMsP3xE8K
KVwcad4oF9QFHZ6GPiie4qkEzTxpC/aOHOdd1fwE1EdqQpyupxMNoeI9FdbZ
fl1PuzZtFvWR8LQMi/C0q1P0MFhTBq0cFKX8FJ4KmqNJo+pQ960wrDeIp2VY
gKe+9rvtlBYrk6Iu6DFopnq8U03ZRsbBsH4vnpZh/p76mxxNNfY9J0E9/KAm
hmJC+iriKZ7mQzZPpjaZykZpCTxN2c/CEVTZpxhP8TQfSZ7LlF9P24vB+9P7
z6tDOW79Fzhl6uuMr7Z4iqf5SOFpu9qKV7doTz13ng93huMes0Z5atH/FE/L
sGhPu+cj8ls60f3Eu5uxvxouoPvdffDzkSHHO9tO48avAvAUT/MRO0+6p/ya
+Sn39KjM2WbS18y0W2rDW0eFeRrWsgpP8VRC1Dy523ieJ3qQeto+BNEtjmF/
a0Cgp967xC7wFE8lBM+TfS+p+uGIwNOXT20HNH0mg/p57hmhng4WevHtLDzF
Uwlh82SQs7cJuL867akvrWKS2FSlqStN77qpPHM8xVMJ+nnSpKa316SB14AS
T/u0XvX2NZGnyvu9DcMbWXiKp+lQzpPBA5GIHAPh9enekW8wtS8NuU48wZ/s
JEg5lo8MnuKpBM086SUNV+CA9n7veTh/vpAyOWqMkLzBsFRGPMVTCeJ5kkzS
KuHz08uVaxd7E+kk7qV0nsvPoFRGPMVTCcJ50t04ipe0SpE32N/IGnTx9r93
pkT9Xht5DniaD9k86fN//Ifwnk+K99o874mP7Tx9qREOhO+Jn50P+b14mgHR
PHHO2FKeuhap3f1usi7K8HPU+wFB3ZUWPMXTfMTPkwCSeaqj2RVkeq+8wlM8
zckyPE1wvXncFeApnsYMtUnc6qo8bT4qU/2HBuoj4Wk+5u5p9yizyZh9idj9
Hp4r5Sl6tq9PrM1Gpt4gnuZg9p72dQ6jnorWm968RVoCnwfhKZ5KmL+nx5uu
eauARtCmPz3chJR8wVM8lbAETz9n8BRPJeCpLXiKpxLw1BY8xVMJeGoLnuKp
BDy1BU/xVAKe2oKneCoBT21J4ikUI9W/uxY8tSWJp88WfMd6WpB6nvzxq28e
v3xf8vjxzds67h9+86Zw3BkeeIqnEup58rh6J3m3lCPTgad4Okn8PAmAfW8H
nuKpBDy1BU/xVAKe2oKneCoBT23BUzyVsAxPd/e7283TehPZgDgLu21zYutt
Vz5UBZ7iqYSoefJah1D/TqjK05P6n8NYJy9oXxxp3lQV1BscnoY+KJ7iqYSI
eRJeeT6g7krTEOp0PXXX703kqbB+7+t6GtrHHE/xVELgPBk0JsvrqaDpkja6
DHU9fMM6ZnhahmV5OuhQnN9TZ73Bo0eZ6nxONXsa8dGwLiielmExnjbLaLfb
XIX2+05RZzuoOZqYkH5teIqn+dDMk77LzMO6Fid855nA05R18h1Blf1P8RRP
86H29GbTVtWz9LS9GLyvrxlPlvh1SNG/M8L6ieMpnuZDNU/2JwoYejpoaz52
PzbyMWuUpxZ9FfG0DEvx9JQSnk70KT7WyW//8OAudMz9pWNlb6dx418cT/E0
HzP39KjMWQhfk8RuqQ1vSRPmaVgrHDzFUwmz9rR9CKJbHMP+1oBAT713iV3g
KZ5KmKunL5/azkr6zw9PlHol1NPBQi++nYWneCphpp660wmyntgrU1ea3nVT
eeZ4iqcSZutpn9ar3r4m8lR5v7dheCMLT/E0HTP19MDekW8wtS8NuU48wZ/s
JEg5lt/yxVM8lTBnTytXcrs/X8j/UxEheYNhqYx4iqcSZu7pxPPTy5VrF3sT
6STupXSey8+gVEY8xVMJM/fUNfn7l08H3YH9750pUb/XRp4DnuZjGZ56vBjL
GxzZefpSIxwI3xM/Ox/ye/E0A8vw1LVI7e53k3VRhp+jvrkkqLvSgqd4mo/4
eRJAMk91NFvZTO+VV3iKpzlZhqcJrjeP+1g8xdOYoTaJW12Vp81HZar/0EB9
JDzNx9w97R5lNhmzLxG738PVdJ6iZ/v6xNpsZOoN4mkOZu9pm30U+VS03vTm
LdIS+DwIT/FUwvw9Pd50zVsFNII2/enhJqTkC57iqYQlePo5g6d4KgFPbcFT
PJWAp7bgKZ5KwFNb8BRPJeCpLXiKpxLw1JYknkIxUv27a8FTW5J4+sGCOu4/
NMLKFzy9WvAUTyXU8+Sn9+tamZLH87ff13E/vv26cNwZHniKpxLqefK4eud4
4ZqjxIGneDpJPU/+9Lvf1xvRksfP2x/quPWqWjjuDA88xVMJ8fMkAK5PO/AU
TyXgqS14iqcS8NQWPMVTCXhqC57iqYRleLq7391untabyEbhWdhtmxNbb7sy
vyrwFE8laOfJ/m77dDMonOstlelC5elJnd7z98QP7Rdv+mccDzebMF8cCOqC
Dus56F9jx1M8laCZJ12r7stD11VN42lfl/58Pa0XMsf5PCQp+yCss/26nnZt
2izqI+FpGRbhaVen6GGwpgxaOShK+Sk8dTZXGvjbLaD19vimO8nIVVXdt8Kw
3iCelmEBnvra76pbLyk8ddQFbX9pjPxyaH8UVUp0qinbyDgY1u/F0zLM31N/
k6Opxr7nqD09i9vKMr7JbC8YI0pqh/RVxFM8zYdsnky1klG2HI30VPtrQY3/
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
AAAAAACAq+X/Az5vVL4=
    "], {{0, 437.4}, {187.2, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->120],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{187.2, 437.4},
  PlotRange->{{0, 187.2}, {0, 437.4}}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{
  3.834923689412243*^9, 3.834923868027734*^9, 3.8349239036582327`*^9, 
   3.834923937221138*^9, 3.8349339607875643`*^9, 3.834934080034152*^9, 
   3.834934234653558*^9, 3.835102347861621*^9, 3.83510619577285*^9, 
   3.835276458132259*^9, 3.835276819394454*^9, {3.835349438381604*^9, 
   3.835349450355462*^9}, 3.83534958123965*^9},
 CellLabel->"Out[205]=",
 CellID->423599534]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Program Machine/Program Computer", "Subsubsection",
 TaggingRules->{},
 CellChangeTimes->{{3.8351062375736513`*^9, 3.8351062459673967`*^9}},
 CellID->99784115],

Cell["Model the evolution of a Program machine for 15 steps:", "CodeText",
 TaggingRules->{},
 CellChangeTimes->{{3.835349587269071*^9, 3.835349606098928*^9}, {
  3.835362283115861*^9, 3.835362288013918*^9}},
 CellID->1640940869],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"pMachine", "=", 
      RowBox[{"counterMachine", "[", "2", "]"}]}], ",", 
     RowBox[{"pMachineInstructions", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"inc", "[", "2", "]"}], ",", 
        RowBox[{"dec", "[", "1", "]"}], ",", 
        RowBox[{"jz", "[", 
         RowBox[{"2", ",", "2", ",", "1"}], "]"}]}], "}"}]}], ",", 
     "pMachineTable"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pMachineTable", "=", 
     RowBox[{"cmEvolveList", "[", 
      RowBox[{"pMachineInstructions", ",", "pMachine", ",", "15"}], "]"}]}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{"GraphicsRow", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"Grid", "[", 
          RowBox[{"pMachineTable", ",", " ", 
           RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}], ",", 
         RowBox[{"RGBColor", "[", 
          RowBox[{"0.8", ",", "0.36", ",", "0.41"}], "]"}], ",", "17"}], 
        "]"}], ",", 
       RowBox[{"ArrayPlot", "[", 
        RowBox[{
         RowBox[{"Partition", "[", 
          RowBox[{
           RowBox[{"Flatten", "[", "pMachineTable", "]"}], ",", "3"}], "]"}], 
         ",", 
         RowBox[{"Mesh", "\[Rule]", "True"}]}], "]"}]}], "}"}], "]"}]}]}], 
  "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.8349237422690496`*^9, 3.834923742881415*^9}, {
   3.8349238706041727`*^9, 3.834923915936254*^9}, 3.8349339749341927`*^9, {
   3.83493410241702*^9, 3.834934105286187*^9}, {3.8352764682778673`*^9, 
   3.835276488863652*^9}, {3.835347340540843*^9, 3.8353473426749907`*^9}, {
   3.8353496089411917`*^9, 3.835349627461535*^9}},
 CellLabel->"In[206]:=",
 CellID->833177420],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztnUGL5Fi2mNv2xkv/Bf8Gb97WS2+f8W427+Hp196Mh3kG4ywwhqwGN1QX
DAwBZSaaNnhnvEh7Ed7MP0hIaMh25dA5bXg85axq4U0sw1JE6EoK6UrnHF2d
G1n6PoR5zqmU4mTri3t1de45//Sv/+1ffvkPv/jii7/9x+X/85d/9e//+W9+
81f/4V/+k/L/869+9bf/5m9+9ct//S9+9e9++Te//M1f/PU/Kn/4VP7bv/gH
X3xR/d8HAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAgMV4+vo9R97j5X/+79x3AVw797/4iiPv8X//
y3/NfRfAtZPlPvl/Pz6V1/37//G/nK97heApSMDTvOApSMDTvOApSMDTvOAp
SMDTvOApSMDTvMz/+38HjqT6767ldXhaPBR32+fN9vnuZcnPZaLYVR9ssyvu
LZ8tiaf3Och40+a69Gv1tNg9/uKr+82D9vdUnu7vbpu3jZfXevm0uX0M/+vN
7fPdw177acYQnP9+G/940+CpLeRVXfcw6z55eLbenBpP66v84vZyPD19Swwc
t0Wh/URDCM9/Gk9vzv/r873uInhqC3lV1z2Y75PiIdyZy3p6lqWvXuNvmHDu
74NZ20/az3SJ+vyfNtX/9KicmeOpLeRVXfdguk/299vOQLOop+dZ5aUX9WS4
50s9CGp9ucBw/vOvKP8aeGoLeVXXPWjvk2oYDU+L9YObg6c3u+5T4XmwG5Qx
qpgCy/nx1A08HSVMBb963JTivBQ3mTw9D7KR59DoVFmM6fx46gaejnL09Gb7
6Xx/ZvN0asQcGw0l2M6Pp27g6Tj7zgiCp0OeXk7RJ8BTW8iruu5h1n3i4eng
zX9aWY0bYf9gc86Pp27gqQYPT8/KdC9xnZ7GlqbHwVNbyKu67uHKPa1fglwk
D1ypp6b5Np7aQl7VdQ/X6+nLp7tt7L3PtXra5BA+bnafZKvNeGoLeVXXPVyt
p6PpClNPgonWkWznVyZa4Kkt5FVd93DFnjZpvb2M2etc7z1+7CadUri1B09t
Ia/quoer9fTIPpZvMJ7JMD/PwXj+5g8iX/LFU1vIq7ru4bo9PUST268xb9D2
/YCntpBXdd3D1Xsae1SsZYkNtany8DXnH05FngBPbSGv6rqHq/c0fvNf3b42
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
TfK8eZwn4+lncNOuMOQVeVqdaokSZ2eoj+TGCkO+dk/Dq9IqY/Zlxuz3+ICZ
MuO3YV9+sDobmXqDDqww5Kv3tM66t9ZiOlNOetM85PZo1+/Vj/t4SsgSrt/T
86Ju+i0wiaiTG8vvAeEemc5v4ykhC3gNnn7O4CkhS8DTvOApIUvA07zgKSFL
wNO84CkhS8DTvOApIUvA07zgKSFLwNO84CkhS8DTvOApIUso75M/fvPbp6/f
ex4/vnlbXveHX79xvu4VHnhKyBLK++Tp9t3QbmsOpwNPCXmS+feJAea9gSSe
ghup/rtrwdO8JPH0Qw4y3rQrDBlP84KnhCwBT/OCp4Qs4XV4WjwUd9vnzVbY
DMKVYld9sM0ulCdVgaeELEF7n+zvd883t81y5UiJvzgqT+uS2sfjcv+puN6g
CVGw7X3i+u2xeErIEjT3SV0bc+AY6NY0gqHuSnWJi/FUVb9XjTjY03ga2j/l
qLuytpt2hSHL75NQ/+SxNaa0StAr7FB4Gm3asmw9fEOwGeuYre2mXWHI0vtk
rG9LrYx41je/3mC02VOS/jKmYDPWBV3bTbvCkIX3yXjzFG2LtNl1tpft12YL
Fk/dWGHIsvtkqmtDrFFphLmejl9ubv9TY7B46sYKQ07yXsZ5PM3RT3z66njq
xgpDTuFpPQCJC+S+Zk+jwWbsq7i2m3aFIc+/T8L7TfkriZl9is+LsfEmbuZG
ctLPMxQsnrqxwpDn3ifhLb/m/pR7elaya1w2T8eDNbXCwVNCljDrPrnf2t5X
Sj2t349cDF55PJ0O1jLfxlNClmC+T/bNfateWRV4+vKp7qzU183fU2mwoRvy
RtrDAk8JWYLtPmnl3G4NTVWmPR1NV5h6Eky8jqQLVplogaeELEF/n1Sp7/Vj
mjGXQOJpk9YbW7HxWO9VBls8NIm+eLoYKwxZeZ+0stNntCkUPp/uY/kM45kM
c/McAtpgm/m2/C+Dp4QsQXOfNPftzKFKu97bu9yyeYNH9MGavh/wlJAliO+T
ZJIeZr8/bX4eHWpnfkhTsMOpyFO/hKeELEB4n4S1lCSLM7Pz8A+L7muzBUue
gxsrDFl2nwQpJg5hStL8fW0Vqn3i4Y3JtHrGYMnvdWOFIYvuk6gRXp7GX5VK
667IPbUGi6durDDk+feJgXSeqqgGSm1dFDl46sYKQ34dns6uo1JxHCjx9DO4
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
JWQJivskvJK42YbFzH37iWy5/TIDN/+y+9oMwZLn4MYKQ1bdJ93MnM7W7GdN
1ZH5+9oqVPvEwxsT8TirDZb8XjdWGLL6Pikein6pE+WKTYrx9IS47ore0wpN
sHjqxgpDTvReRkc6T1VUU2VtXRQ5eOrGCkN+HZ7Of948nOfJePoZ3LQrDHlF
nlanWmjzeAX1kdxYYcjX7ml4VVplzKoLkLY4vk9ZKOO3/GB1NjL1Bh1YYchX
72nIDpqXWl9OetM85PZo1+/Vj/t4SsgSrt/T86LukltgZlEnN5bfA8I9Mp3f
xlNCFvAaPP2cwVNCloCnecFTQpaAp3nBU0KWgKd5wVNCloCnecFTQpaAp3nB
U0KWgKd5wVNCloCneUniKbiR6r+7FjzNSxJP73OQ8ab9bpXj6dPtu8iGaA6P
A08NIa/Q05/eb8qhzfP4+cP35XU/vv3W+bpXeOCpLeQVesq8NyN4agsZTx3A
0wCe2kLGUwfwNICntpDx1AE8DeCpLWQ8dUDtafFQ3G2fN1ttQ2QPil31wTa7
QlMZNYCntpDxVMGpgq5+77bK004d3V5LF2ldUBPHwtrN1R9vqsq9l+dv13PQ
/ynw1BYynoqpK9Iv62lT9/5yPFXV2dZTfgMMv/G86RZXOY2n+qYAJ/DUFjKe
imh1cFjW02hzpWX7VoRB/LHVfG1/X7dOHiq1lLHeIJ7iaZ/mdnXwNFIXNNqU
LW0fqH5o8VZuGev34imedug8r9UPhg6eXo5fPn0VB+fP0UvjqRt4OkqYalbV
dPfK3sRt5no65lGCPsWj4CmeZkDtadNnMJunUyPm2Gg7l/hXBJ66gafjdFuV
rczT4iWsAD8OhZyx/yme4mkcD08Hb/5zhfx4s0XzBxv7DOH1UER/PHUDTzV4
eHpWsnsJZ0/Lyz3e3FZH83g+lE1halmFp7aQ8VTM8p7WL1kuXoI4e9pmH7KP
Bk5umW/jqS1kPBWzqKcvn+oOaP3zZ/T00JoGD6Qeha7lG2mvGTy1hYynYpb0
dDRdYepJcMn13snzKxMt8NQWMp6KWdbTJq03lvmT5b1MRTzwVjqlcGsPntpC
xlMxiz+f7mMvK8czGWbnOdQdV2PfA7HAm5/Ll3zx1BYynorxW+/tjYw+eYOR
zS+R1S3b9wOe2kLGUzHZ3p82P48OtYny8Acegeuo+98Dw6nIE+CpLWQ8FZMv
v7di2X1tze7vJk/ytG08us+UPAc38FSDo6eD3qn2iYc3JuJxtpuG1Dn/81CJ
FfJ73cBTDXnH0/NnkNZd0XtaUTwU/fNHHj/x1A089SGdpyqqqbK2LoocPHUD
T31IM+/Vcpwn4yme4qmQPJ5Wp1po83gF9ZHcwFMfDPUGjxmzvZqcCo5P0wtl
/JYfrM5Gpt6gA3jqg6p+b50dNC+1vpz0pnnI7dGu36sf9/HUFjKeOqCsh39c
1F1yC8ws6uTG8ntAuEem89t4agoZTx2gv0wAT20h46kDeBrAU1vIeOoAngbw
1BYynjqApwE8tYWMpw7gaQBPbSHjqQN4GsBTW8h46gCeBpJ4Cm6k+u+uBU/z
ksTTDznIeNOWl/5nOcjr6R+/+e3T1+89jx/fvC2v+8Ov3zhf9woPPLWFvEJP
n27fRTZEc3gceGoIeYWeMu/NCJ7aQsZTB/A0gKe2kPHUATwN4KktZDx1AE8D
eGoLGU8dUHtaPBR32+fNVtgMwpViV32wza4YKkI4CZ7aQsbTcfb3u+ebVsHM
kRJ/cVSedupz9lpFSOsNJmGw4n17n7h+eyye2kLG0zihFHz/GOjWNIKh7kp1
iYvxVFW/NwGtyt7t85/G03j97XHw1BYynsYI9U8eW2NWqwS9wg6Fp9GmLQvX
w+/RKv8yHGnGOmZ4iqdnxvq21MqIZ33z6w1Gmz2l6S9zSbc2/rCnGeuC4ime
nhhvnqJtkTa7zvbC/douCGP6XaTPY/u6eLo8eBphqkVFrFFphLmejl9udv/T
LufvhOrBc/S6eOoGntpwHk89+4mfH0tP9uEpnmYihaf1aCsukPtqPL24usTT
HH0V8RRPJwlrLPJXEjP7FJ/HuHgTN3MjuQ79+TOe4mkm5t4nTT9fxf0p97Qz
7bz44bKenk/SGZTHn4tNrXDw1BYynmp+eWt7Xyn1tH7JcjFSO3g6+P0wtVxm
mW/jqS1kPBWybyRVr6wKPH35VHdW6uu2uKexkXFyWTt0Q95Ie1jgqS1kPJXQ
eu+/NTRVmfZ0NF1h6klw3jrSyGsdyesnZaIFntpCxtMpqtT3+pnUmEsg8bRJ
6+0tTy263ttNPRo9+uN18dAk+uLpYuDpFK1U/BltCoXPp/vY+DWeyTAvz2GG
p818W/6XwVNbyHgap5F05qtJ7Xpv73K+eYOBBfKg8NQWMp5GSCbpYfb70+bn
0aE2cR7+Gcl7Gd6fLg+exgizwST3/+w8/IP/vrbmw5DngKfuyO6TIMXEIUxJ
mr+vrUK1Tzy8MZnzPUN+L55mQnSfRI3w8jT+qlRadwVP8fSz9zQ16TxVUc0K
tHVR5OCpG3jqQ5p5r5bjrABP8RRPheTxtDrVQiXOKqiP5Aae+mCoN3jMmH2Z
Mfs9vleaudMtwr78YHU2MvUGHcBTH1T1e1uF/maIVk560zzk9mjX79WP+3hq
CxlPHVDWwz8u6ibZ+r0E9SJw+T1g2JKAp7aQ8dQB+ssE8NQWMp46gKcBPLWF
jKcO4GkAT20h46kDeBrAU1vIeOoAngbw1BYynjqAp4EknoIbqf67a8HTvCTx
9MscZLxpv2M8dQFPA3hqC3mFnv70flMq43n8/OH78rof337rfN0rPPDUFvIK
PX26fSfZW8qx0IGnhpBX6Omffvf7ciLqefx594fyuuWo6nzdKzzw1BbyCj3l
+TQjeGoLGU8dwNMAntpCxlMH8DSAp7aQ8dQBPA3gqS1kPHVA7WnxUNxtnzdb
YdMWV4pd9cE2u1BGWAWe2kLG03H2VaujpgPL483t8726HIrK007Dl15LF2ld
0CQMdqZo13PQb2PHU1vIeDpC06nt4lA2btN42tS9vxxPVXW2E9CqwN8+/2k8
DW3actRHwlM8DTStK1r9yJpuxZrqQwpPo82VvPtWtMo0DX8PZKw3iKd4WlN7
0Z/a1RM/+VCi8DRSFzTalG2ZPlDdZotXVw8fT/G0/ncjLRvUfYHVnl4O1r59
FcOYfnelfSvwFE8FuHu6QB/SOOfoqtnCtfaXwVM8FZxi1JohZno6NWKqvzdG
OD+WnuzDUzzNxKz7pHgJK8CPmvvz1Xh6cfVr7X+Kp3g6yMW6ijb9QO7p4M1/
HuPizRaLJEW5+/NnPMXTTNjuk9KUx5vb6ggJDxtFgoHc08608+KHy3p6Pkln
UB6f4ZtaVuGpLWQ81bIPCTliL6Se1i9ZLt74OHg6+P0w9SRumW/jqS1kPDUQ
psHp+om/fKo7oPV1W9zT2Mg4uWIWupZvpL1m8NQWMp6a0A0l056OpitMPQnO
W0caea0jWdlWJlrgqS1kPDWhG8IknjZpvb0xetH13u4S2ejRD7bapFAn+uLp
YuBpjDq7NaZGak+P7GPj13gmw7w8hxmeNn8E+ZIantpCxtPIvxtN4o0s+MTQ
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
AAAAAAAAAAAAAAAAAACr5f8Dcq72sw==
    "], {{0, 437.4}, {187.2, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->120],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{187.2, 437.4},
  PlotRange->{{0, 187.2}, {0, 437.4}}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{
  3.834923743987712*^9, {3.8349238709272957`*^9, 3.8349238900912647`*^9}, 
   3.834923935448896*^9, 3.834933976508924*^9, 3.834934107727344*^9, 
   3.8349342530025597`*^9, 3.835102349301066*^9, 3.835106265998559*^9, 
   3.835276490324304*^9, 3.835276823234098*^9, 3.835347344523332*^9, 
   3.835347421466969*^9, 3.835349455340118*^9, 3.8353496293191423`*^9},
 CellLabel->"Out[206]=",
 CellID->191936224]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Successor Machine", "Subsubsection",
 TaggingRules->{},
 CellChangeTimes->{{3.835106288552232*^9, 3.835106290929652*^9}},
 CellID->1348474052],

Cell["Model the evolution of a Successor machine for 15 steps:", "CodeText",
 TaggingRules->{},
 CellChangeTimes->{{3.8353496397086887`*^9, 3.835349642718464*^9}, {
  3.835362293726531*^9, 3.835362297728952*^9}},
 CellID->1474594561],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"succMachine", "=", 
      RowBox[{"counterMachine", "[", "2", "]"}]}], ",", 
     RowBox[{"succMachineInstructions", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"clr", "[", "2", "]"}], ",", 
        RowBox[{"inc", "[", "2", "]"}], ",", 
        RowBox[{"je", "[", 
         RowBox[{"2", ",", "1", ",", "2", ",", "1"}], "]"}]}], "}"}]}], ",", 
     "succMachineTable"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"succMachineTable", "=", 
     RowBox[{"cmEvolveList", "[", 
      RowBox[{"succMachineInstructions", ",", "succMachine", ",", "15"}], 
      "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"GraphicsRow", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"Grid", "[", 
          RowBox[{"succMachineTable", ",", " ", 
           RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}], ",", 
         RowBox[{"RGBColor", "[", 
          RowBox[{"0.8", ",", "0.36", ",", "0.41"}], "]"}], ",", "17"}], 
        "]"}], ",", 
       RowBox[{"ArrayPlot", "[", 
        RowBox[{
         RowBox[{"Partition", "[", 
          RowBox[{
           RowBox[{"Flatten", "[", "succMachineTable", "]"}], ",", "3"}], 
          "]"}], ",", 
         RowBox[{"Mesh", "\[Rule]", "True"}]}], "]"}]}], "}"}], "]"}]}]}], 
  "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.8349237700415573`*^9, 3.834923770238328*^9}, 
   3.834923874962426*^9, {3.834923941559371*^9, 3.834923941882743*^9}, 
   3.834933998290895*^9, {3.834934153523134*^9, 3.83493415624893*^9}, {
   3.835004981708747*^9, 3.8350049971544247`*^9}, {3.8352764962406*^9, 
   3.8352765188774347`*^9}, {3.8353473242656507`*^9, 3.835347333678844*^9}, {
   3.835349645171586*^9, 3.8353496656923637`*^9}},
 CellLabel->"In[207]:=",
 CellID->1191312764],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztnc+rK0mWmMv2xkv/C/4vZuult2N6V5sZ3J7ypt3MGIxvgTHoFbjg1YOG
RlCmZcrgVRkvnr2QN/0fXLjQcMt1m7pdBmPdXr2FN1qGMyXlL0mROudk6ERK
8X0kQ8+rezN03otPkT9OnPOP//pf/eW/+PufffbZ3/3D6v/85V/9m3/yt3/7
V//2n/2j6v/5xa/+7l/+za9++c//6a/+9S//5pd/+xd//Q+qP3ypfvYv/t5n
n9X/OwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAABcjZevPnDkPd7++//MPQtg7jx+/gVH3uN//8f/
nHsWwNzJMk/+3w8v1bj/97/9D+dxZwieggQ8zQueggQ8zQueggQ8zQueggQ8
zQueggQ8zcv0v///BI6k+nfXchuebp42H1evy9Xrx7drfi4Tm3X9wZbrzaPl
syXx9PscZJy0uYa+VU836+fPv3hcPml/T+Xp9uOie9t4PNbbp+Xiuf2vD4vX
j09b7acZQ3D+x1X8410GT20hFzVumDRPnl6tk1PjaTPK54vj9XT/LXHmWGw2
2k90DuH59+vpw+G/vj7qBsFTW8hFjRvM82Tz1M7M63p6kOVUvc7f9oJz+9ia
tfqk/UzHqM//aVn/p2fllTme2kIuatxgmifbx9Vgobmqp4erymMvmovhE1+a
RVDryxGG8x9+Rfm3gae2kIsaN2jnSb2MtneLzY2bg6cP6+Fd4WGxOytjVDEF
lvPjqRt4Okp7KfjF87IS523zkMnTwyIbuQ+NXiqLMZ0fT93A01F2nj6sPh3m
ZzZPL62YY6uhBNv58dQNPB1nO1hB8PScp8eX6BfAU1vIRY0bJs0TD0/PTv79
k9W4EfYPNuX8eOoGnmrw8PSgzHCIeXoaezQ9Dp7aQi5q3DBzT5uXIEfJAzP1
1HS9jae2kIsaN8zX07dPH1ex9z5z9bTLIXxerj/JnjbjqS3kosYNs/V0NF3h
0p1goudItvMrEy3w1BZyUeOGGXvapfWeZMzO83nv7mN36ZTCrT14agu5qHHD
bD3dsY3lG4xnMkzPczCev/sLkT/yxVNbyEWNG+btaYgmt88xb9D2/YCntpCL
GjfM3tPYrWIjS2ypTZWHrzn/+VTkC+CpLeSixg2z9zQ++We3r408BzfwVIOj
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
L8P70+uDp6M/2rx/6bLp9tvG1VsvJ+fhB9d9bTXkOeDpjXh6nIY02Jr9qqk6
Mn1fW41qn3j7xsS4zpLfi6c342nN5mlzWupE+cQmxXq6R1x3BU/xtChPU5DO
UxX1pbK2LoocPHUDT31Ic92rZXedjKd4iqdC8nhan+oaJc4OUB/JDTz1wVBv
cJcxqy5A2mN3g5ky47djW32wJhuZeoMO4KkPqvq9TSrUtNT66qI3zU3uCf36
vfp1H09tIeOpA8p6+LuHuum3wCSiSW6svgeEe2QGv42nppDx1AH6y7TgqS1k
PHUAT1vw1BYynjqApy14agsZTx3A0xY8tYWMpw7gaQue2kLGUwfwtAVPbSHj
qQN42oKntpDx1AE8bcFTW8h46gCetuCpLeQCPX1ZvI/s/ubwOPDUEHKBnv70
YVktbZ7Hz99+V43747tvnMed4YGntpAL9JTr3ozgqS1kPHUAT1uSeApupPp3
14KneUniaWmLS4Eh42le8JSQJdyGp5unzcfV63KlbYjswWZdf7DleqOpjNqC
p4QsYdI82VfQ1e/dVnk6KBp8PJa4Luh0YsH26zno/yrwlJAlTJgnTUX663ra
1b0/Xk9VdbanEg92v57qmwLswVNClmCcJ712Fdf1NNpcybFvhSzYjPUGS5u0
BYZsmCfbx9VgIbuqp5G6oNGmbKn7QMmDzVi/t7RJW2DIunlSryzt3WJzY+jg
6XGpQJe+ispg8dSNAkPWzJP2UrOuprtV9ibuM9XTWP/iPWn6FKuDxVM3CgxZ
7WnXVDGbp5dWzLHVVow6WDx1o8CQVfNk2Jftvj1VB5ux/2lpk7bAkCfMEw9P
z07+Q4X8eLNF8weLg6czmrQFhjxzTw9KDoeYp6e2llV4SsgSZu1p85LlKHlg
pp6arrfxlJAlzNXTt09NB7TT88/V017X8qW01wyeErKEmXo6mq5w6U4wzXOk
IeJglYkWeErIEmbraZfWe5Ix6/O8d4gs2F6GoXBrD54SsoSZerpjG8tnGM9k
SJPncIQk2O5n5I988ZSQJczZ0xBNbnfJGxwgCNb0/YCnhCxh5p7GbkUbGWNL
bdqL3qB4L8P70+tTYMgz9zQ++R33tdWQ5zCjSVtgyLfh6VnvVPvE2zcmxnWW
/N4ZTdoCQ74NT+OvSqV1V/D0jiZtgSFPnycG0nmqor5U1tZFkYOnbhQY8m14
muR+c3edjKd3MGkLDLkgT+tTXaPE2QHqI7lRYMhz97R9VVpnzL5NuPrd3WCm
zPjt2FYfrMlGpt6gAwWGPHtPm6x7ay2mA9VFb5qb3BP69Xv16z6eErKE+Xt6
eKibfgtMIprkxup7QLhHZvDbeErIAm7B03sGTwlZAp7mBU8JWQKe5gVPCVkC
nuYFTwlZAp7mBU8JWQKe5gVPCVkCnuYFTwlZAp7mBU8JWUI1T/749W9evvrg
efzw5btq3D/8+kvncWd44CkhS6jmycvi/bnd1hxOB54S8kWmzxMDXPe2JPEU
3Ej1764FT/OSxNNf5CDjpM01NJ4WC57aQi5q3ICnucFTW8hFjRtuxdPN0+bj
6nW5EjaDcGWzrj/Yct2WJ1WBp7aQixo36OfJ9nH9+rDoHleOlPiLo/K0Kam9
O473n4rrDRoRnL+/T1y/PRZPbSEXNW7QzZOmNuaZ40y3phEMdVfqIY7WU1X9
XgPC8+/X07b9U466K3h63+MGzTxp658899aUXgl6hR0KT6NNW65dD199/ox1
zPD0vscN8nky1relmdLiq77p9QajzZ4S9ZcxnD9jXVA8ve9xg3iejDdP0bZI
m1xn+9r92iznx1M38DTCpa4NsUalEaZ6Oj7c9P6npvPjqRt4asN5Pb12P3Hb
+fHUDTw10ay24gK59+xpjr6KeHrf44YU86R9vyl/JTGxT/HhyXO8iZu5kdyU
8+OpG3iq//3mLb9mfso9PSgzNGKentpa4eCpLeSixg0T58njyva+Uupp8xLk
aKWeqaem6208tYVc1LhhwjzZdpKqn6wKPH371HRWOtVtrp72uiEvpT0s8NQW
clHjBus86eXcrgxNVS57OpqucOlOMNFzJNv5lYkWeGoLuahxg2We1KnpzT2p
MZdA4mmX1nvyeGqez3t3H/upS/TF06uBp5fopeJPaFMovD/dxvINxjMZpuc5
GM/fXQ/L/2bw1BZyUeMG636Zidmz2ue9J8PNMW/Q9v2Ap7aQixo3KOZJMknD
5Pen3Z9Hl9pUefia859PRb4AntpCLmrcoM3DTyFpSJCHH2a4r408BzfwNEI7
aS8cwpSk6fvaalT7xNs3JvLvGeU+dPJ73cDT80RnrJen8VeZ0rorBk9V58dT
R/DUh3SeqqivCrR1UeTgqRt46kOa614tu6sCPMXTmxs3FOVpfapEJc7OQX0k
N/DUB0O9wV3G7NuEq9/deyVrxu842+qDNdnI1Bt0AE99UNXvbescGq4qO6qL
3jQ3uSf06/fq1308tYVc1LjhFjw9PHSdtgXmijTJjdX3gGFLAp7aQi5q3HAb
nt4zeGoLuahxA57mBk9tIRc1bsDT3OCpLeSixg14mhs8tYVc1LgBT3ODp7aQ
ixo34Glu8NQWclHjBjzNDZ7aQi5q3ICnucFTW8hFjRt28+SnD8tKGc/j52+/
q8b98d03zuPO8MBTW8hFjRt2nr4s3kv2lnJc6cBTQ8hFjRt2nv7pt7+rLkQ9
jz+vf1+NW62qzuPO8EjiKbiRyjst0+eJAe5PW5J4+lkOMk7aaujvc4CnxYKn
tpDx1AE8bcFTW8h46oDa083T5uPqdbkSNoNwZbOuP9hy3ZYPVYGntpDxdJxt
3UKlbQL1xfPD4vVRXWZB5Wmv59Tp/lNFPcCp7Isuxnu0nft4l8FTW8h4OkLX
AeroUDaE0nja1bs+Xk+V9XWn0XyMUxP362nb/ilH3RU8xdOWriR+r89R1wX1
Ov3E401brl0Pv/8Zui5sIytmxjpmeIqnDfEFpbnwky8lCk8j9QYvNWNK018j
DNoxX/A0Y11QPMXT5uciLQ5r1P1G1Z4eL9bX7te2Y3Anvog1Nz8eF0+vD56a
cPd07EsjRf/Tmq6lzvOyGr3rbRr7BTx1A09Npxi15hwTPb12P/HuJA+rpoQg
nuLpzXq6eWufAD9r5ucteBq2g68dsac5+iriKZ6eZfBO8/OFNv1A7unZyX+o
vB1v4nbRKT14iqe352llyvPDoj66mzhFgoHc04OSQzvm6amtFQ6e2kLGUy3b
NiFH7IXU0+Yly9Ebn5l6arrexlNbyHhqoL0MTten+O1T01npVI25etrrhryU
9rDAU1vIeGpCt5Rc9nQ0XeHSnWCa50hDxO4rEy3w1BYynprQLWEST7u03pM1
2ud57xBZgL0MQ+GzNTy1hYynZ2maG8bUSO3pjm3szex4JkOaPIcjJAF2PyN/
pIantpDxNPJzo0m8kQc+MbTPe09WRpe8wQECT03fD3hqCxlPIzR5dGfuCps5
LFZj4vvT7s+jS23ai96geC/D+9Prg6ejP9q8f+my6fbbxtVbLyfn4QfXfW01
5Dng6Y14epyGNNia/aqpOjJ9X1uNap94+8bEuM6S34unN+NpzeZpc1rqRPnE
JsV6ukdcdwVP8bQoT1OQzlMV9aWyti6KHDx1A099SHPdq2V3nYyneIqnQvJ4
Wp/qGiXODlAfyQ089cFQb3CXMasuQNpjd4OZMuO3Y1t9sCYbmXqDDuCpD6r6
vU0q1LTU+uqiN81N7gn9+r36dR9PbSHjqQPKevi7h7rpt8AkoklurL4HhHtk
Br+Np6aQ8dQB+su04KktZDx1AE9b8NQWMp46gKcteGoLGU8dwNMWPLWFjKcO
4GkLntpCxlMH8LQFT20h46kDeNqCp7aQ8dQBPG3BU1vIeOoAnrbgqS3kAj19
WbyP7P7m8DimewpupPJOSzVPfvqwrJY2z+Pnb7+rxv3x3TfO487wSOJpaYtL
gSFPnycGuO5twVNCloCnecFTQpaAp3nBU0KWgKd5wVNClnAbnm6eNh9Xr8uV
tiGyB5t1/cGW642mMmoLnhKyhEnzZF9BV793W+XpoGjw8VjiuqDTiQXbr+eg
/6vAU0KWMGGeNBXpr+tpV/f+eD1V1dmeSjzY/XqqbwqwB08JWYJxnvTaVVzX
02hzJce+FbJgM9YbLG3SFhiyYZ5sH1eDheyqnkbqgkabsqXuAyUPNmP93tIm
bYEh6+ZJvbK0d4vNjaGDp8elAl36KiqDxVM3CgxZM0/aS826mu5W2Zu4z1RP
Y/2L96TpU6wOFk/dKDBktaddU8Vsnl5aMcdWWzHqYPHUjQJDVs2TYV+2+/ZU
HWzG/qelTdoCQ54wTzw8PTv5DxXy480WzR8sDp7OaNIWGPLMPT0oORxinp7a
WlbhKSFLmLWnzUuWo+SBmXpqut7GU0KWMFdP3z41HdBOzz9XT3tdy5fSXjN4
SsgSZurpaLrCpTvBNM+RhoiDVSZa4CkhS5itp11a70nGrM/z3iGyYHsZhsKt
PXhKyBJm6umObSyfYTyTIU2ewxGSYLufkT/yxVNCljBnT0M0ud0lb3CAIFjT
9wOeErKEmXsauxVtZIwttWkveoPivQzvT69PgSHP3NP45Hfc11ZDnsOMJm2B
Id+Gp2e9U+0Tb9+YGNdZ8ntnNGkLDPk2PI2/KpXWXcHTO5q0BYY8fZ4YSOep
ivpSWVsXRQ6eulFgyLfhaZL7zd11Mp7ewaQtMOSCPK1PdY0SZweoj+RGgSHP
3dP2VWmdMfs24ep3d4OZMuO3Y1t9sCYbmXqDDhQY8uw9bbLurbWYDlQXvWlu
ck/o1+/Vr/t4SsgS5u/p4aFu+i0wiWiSG6vvAeEemcFv4ykhC7gFT+8ZPCVk
CXiaFzwlZAl4mhc8JWQJeJoXPCVkCXiaFzwlZAl4mhc8JWQJeJoXPCVkCXia
FzwlZAnVPPnj1795+eqD5/HDl++qcf/w6y+dx53hkcRTcCOVd1qqefKyeH9u
tzWH0zHd01/kIOOkzTV0Xk+57s0IntpCLmrcgKe5wVNbyEWNG/A0N3hqC7mo
cQOe5gZPbSEXNW64FU83T5uPq9flStgMwpXNuv5gy3VbnlQFntpCLmrcoJ8n
28f168Oie1w5UuIvjsrTpqT27jjefyquN2hEcP7+PnH99lg8tYVc1LhBN0+a
2phnjjPdmkYw1F2phzhaT1X1ew0Iz79fT9v2TznqruDpfY8bNPOkrX/y3FtT
eiXoFXYoPI02bbl2PXz1+TPWMcPT+x43yOfJWN+WZkqLr/qm1xuMNntK1F/G
cP6MdUHx9L7HDeJ5Mt48RdsibXKd7Wv3a7OcH0/dwNMIl7o2xBqVRpjq6fhw
0/ufms6Pp27gqQ3n9fTa/cRt58dTN/DURLPaigvk3rOnOfoq4ul9jxtSzJP2
/ab8lcTEPsWHJ8/xJm7mRnJTzo+nbuCp/vebt/ya+Sn39KDM0Ih5emprhYOn
tpCLGjdMnCePK9v7SqmnzUuQo5V6pp6arrfx1BZyUeOGCfNk20mqfrIq8PTt
U9NZ6VS3uXra64a8lPawwFNbyEWNG6zzpJdzuzI0Vbns6Wi6wqU7wUTPkWzn
VyZa4Kkt5KLGDZZ5UqemN/ekxlwCiaddWu/J46l5Pu/dfeynLtEXT68Gnl6i
l4o/oU2h8P50G8s3GM9kmJ7nYDx/dz0s/5vBU1vIRY0brPtlJmbPap/3ngw3
x7xB2/cDntpCLmrcoJgnySQNk9+fdn8eXWpT5eFrzn8+FfkCeGoLuahxgzYP
P4WkIUEefpjhvjbyHNzA0wjtpL1wCFOSpu9rq1HtE2/fmMi/Z5T70MnvdQNP
zxOdsV6exl9lSuuuGDxVnR9PHcFTH9J5qqK+KtDWRZGDp27gqQ9prnu17K4K
8BRPb27cUJSn9akSlTg7B/WR3MBTHwz1BncZs28Trn5375WsGb/jbKsP1mQj
U2/QATz1QVW/t61zaLiq7KguetPc5J7Qr9+rX/fx1BZyUeOGW/D08NB12haY
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
zQ2e2kIuatyAp7nBU1vIRY0b8DQ3eGoLuahxA57mBk9tIRc1brgVTzdPm4+r
1+VK2AzClc26/mDLdVueVAWe2kIuatygnyfbx/Xrw6J7XDlS4i+OytOmpPbu
ON5/Kq43aERw/v4+cf32WDy1hVzUuEE3T5ramGeOM92aRjDUXamHOFpPVfV7
DQjPv19P2/ZPOequ4Ol9jxs086Stf/LcW1N6JegVdig8jTZtuXY9fPX5M9Yx
w9P7HjfI58lY35ZmSouv+qbXG4w2e0rUX8Zw/ox1QfH0vscN4nky3jxF2yJt
cp3ta/drs5wfT93A0wiXujbEGpVGmOrp+HDT+5+azo+nbuCpDef19Nr9xG3n
x1M38NREs9qKC+Tes6c5+iri6X2PG1LMk/b9pvyVxMQ+xYcnz/EmbuZGclPO
j6du4Kn+95u3/Jr5Kff0oMzQiHl6amuFg6e2kIsaN0ycJ48r2/tKqafNS5Cj
lXqmnpqut/HUFnJR44YJ82TbSap+sirw9O1T01npVLe5etrrhryU9rDAU1vI
RY0brPOkl3O7MjRVuezpaLrCpTvBRM+RbOdXJlrgqS3kosYNlnlSp6Y396TG
XAKJp11a78njqXk+79197Kcu0RdPrwaeXqKXij+hTaHw/nQbyzcYz2SYnudg
PH93PSz/m8FTW8hFjRus+2UmZs9qn/eeDDfHvEHb9wOe2kIuatygmCfJJA2T
3592fx5dalPl4WvOfz4V+QJ4agu5qHGDNg8/haQhQR5+mOG+NvIc3MDTCO2k
vXAIU5Km72urUe0Tb9+YyL9nlPvQye91A0/PE52xXp7GX2VK664YPFWdH08d
wVMf0nmqor4q0NZFkYOnbuCpD2mue7XsrgrwFE9vbtxQlKf1qRKVODsH9ZHc
wFMfDPUGdxmzbxOufnfvlawZv+Nsqw/WZCNTb9ABPPVBVb+3rXNouKrsqC56
09zkntCv36tf9/HUFnJR44Zb8PTw0HXaFpgr0iQ3Vt8Dhi0JeGoLuahxw214
es/gqS3kosYNeJobPLWFXNS4AU9zg6e2kIsaN+BpbpJ4Cm6k+nfXgqd5SeLp
ZznIOGmrob/PAZ4WC57aQsZTB/C0BU9tIeOpA3jagqe2kAv09KcPy0oZz+Pn
b7+rxv3x3TfO487wwFNbyAV6+rJ4L9lbynGlA08NIRfo6Z9++7vqQtTz+PP6
99W41arqPO4MDzy1hVygp9yfZgRPbSHjqQN42oKntpDx1AE8bcFTW8h46gCe
tuCpLWQ8dUDt6eZp83H1ulwJm7a4slnXH2y5bsv8qsBTW8h4Os62bnXUNmv7
4vlh8fqoLoei8rTXG+50n7iibudU9sVR470Uz328y+CpLWQ8HaHr1HZ0KBu3
aTzt6tIfr6fKOtjTaD7GqYn79bRt05ajPhKe4mlL17qi14+s61asqT6k8DTa
XOnafSv6n6HrljiyYmasN4ineNoQX1CaCz/5UqLwNFIX9FLTtDR9cMKgbfoF
TzPW78VTPG1+LtKKtEbdF1jt6fFife2+ijsGd+LNXTCe4mkOUjzvdfd07Esj
RZ/imq711fOyGr3rQRz7BTx1A09Npxi15hwTPb20Yqq/N6IneVg1pT7xFE9v
1tPNW/sE+FkzP2/B07AdfO2IPc3R/xRP8fQsg3eany+06QdyT89O/kOF/Hiz
xYtO6cFTPL09TytTnh8W9dHdxCkSDOSeHpQc2jFPT20tq/DUFjKeatm2CTli
L6SeNi9Zjt74zNRT0/U2ntpCxlMD7WVwun7ib5+aDminaszV017X8qW01wye
2kLGUxO6peSyp6PpCpfuBNM8Rxoidl+ZaIGntpDx1IRuCZN42qX1nqzRPs97
h8gC7GUYCp+t4aktZDw9S9OENKZGak93bGNvZsczGdLkORwhCbD7GfkjNTy1
hYynkZ8bTeKNPPCJoX3ee7IyuuQNDhB4avp+wFNbyHgaocmjO3NX2MxhsRoT
3592fx5datNe9AbFexnen14fPB390eb9S5dNt982rt56OTkPP7jua6shzwFP
b8TT4zSkwdbsV03Vken72mpU+8TbNybGdZb8Xjy9GU9rNk+b01Inyic2KdbT
PeK6K3iKp0V5moJ0nqqoL5W1dVHk4KkbeOpDmuteLbvrZDzFUzwVksfT+lTX
KHF2gPpIbuCpD4Z6g7uMWXUB0h67G8yUGb8d2+qDNdnI1Bt0AE99UNXvbVKh
pqXWVxe9aW5yT+jX79Wv+3hqCxlPHVDWw9891E2/BSYRTXJj9T0g3CMz+G08
NYWMpw7QX6YFT20h46kDeNqCp7aQ8dQBPG1J4im4kerfXQue5iWJp6UtLgWG
jKd5wVNCloCnecFTQpaAp3nBU0KWgKd5wVNCllDNk5fF+8iuUg6PA08J+SLV
PPnpw7Ja2jyPn7/9rhr3x3ffOI87wwNPCVnC9HligOveFjwlZAl4mhc8JWQJ
eJoXPCVkCXiaFzwlZAm34enmafNx9bpcaRuterBZ1x9sud5oKi624CkhS5g0
T/aVOfV7QlWeDoqRHo8lrjc4nViw/X3i+r8KPCVkCRPmSVPp+rqedvW0j9dT
Vf3eqcSD3a+n+mLje/CUkCUY50mvDP51PY02bXGshy8LNmMds9ImbYEhG+bJ
9nE1WMiu6mmk3mC02VPq/jLyYDPWBS1t0hYYsm6e1CtLe7e4iPX7vsjkOtsu
/dqUweKpGwWGrJkn7aVmXaVzq+x52meqp7G+qHvS9D9VB4unbhQYstrTrllb
Nk9d+omrg8VTNwoMWTVPhv2e7ttTdbAZ+yqWNmkLDHnCPPHw9OzkP1Tejjdx
M3+wOHg6o0lbYMgz9/Sg5HCIeXpqa4WDp4QsYdaeNi9ZjpIHZuqp6XobTwlZ
wlw9ffvUdFY6Pf9cPe11Q15Ke1jgKSFLmKmno+kKl+4E0zxHGiIOVplogaeE
LGG2nnZpvScZsz7Pe4fIgu1lGAq39uApIUuYqac7trF8hvFMhjR5DkdIgu1+
Rv7IF08JWcKcPQ3R5HaXvMEBgmBN3w94SsgSZu5p7Fa0kTG21Ka96A2K9zK8
P70+BYY8c0/jk99xX1sNeQ4zmrQFhnwbnp71TrVPvH1jYlxnye+d0aQtMOTb
8DT+qlRadwVP72jSFhjy9HliIJ2nKupLZW1dFDl46kaBId+Gp0nuN3fXyXh6
B5O2wJAL8rQ+1TVKnB2gPpIbBYY8d0/bV6V1xuzbhKvf3Q1myozfjm31wZps
ZOoNOlBgyLP3tMm6t9ZiOlBd9Ka5yT2hX79Xv+7jKSFLmL+nh4e66bfAJKJJ
bqy+B4R7ZAa/jaeELOAWPL1n8JSQJeBpXpJ4Cm6k+nfXgqd5yfL3DzcHnuYF
T0ECnuYFT0ECnuYFT0ECnuYFT0ECnuYFT0HCD1+++1//7j+8fPXB8/hx8b4a
98d//7XzuDM8qr+H//Nf/mvuWQBz59w+aw7Xg/UUAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAoFj+
P5UXsOQ=
    "], {{0, 437.4}, {187.2, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->120],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{187.2, 437.4},
  PlotRange->{{0, 187.2}, {0, 437.4}}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{
  3.834923771940385*^9, 3.834923875737761*^9, 3.834923942445403*^9, 
   3.8349340003446302`*^9, 3.834934158455102*^9, 3.834934259399411*^9, 
   3.835005001972781*^9, 3.8351023507622538`*^9, 3.835106307012538*^9, 
   3.835276520258595*^9, 3.8352768269641447`*^9, {3.835347330336252*^9, 
   3.835347335473875*^9}, 3.835349459781741*^9, 3.835349667647498*^9},
 CellLabel->"Out[207]=",
 CellID->899127463]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Elgot-Robinson Model", "Subsubsection",
 TaggingRules->{},
 CellChangeTimes->{{3.835106316876479*^9, 3.835106320454138*^9}},
 CellID->1346064202],

Cell["Model the evolution of an Elgot-Robinson model for 15 steps:", \
"CodeText",
 TaggingRules->{},
 CellChangeTimes->{{3.8353496822649727`*^9, 3.835349693853496*^9}, {
  3.835362301931357*^9, 3.8353623068896627`*^9}},
 CellID->1548244283],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"erMachine", "=", 
      RowBox[{"counterMachine", "[", "2", "]"}]}], ",", 
     RowBox[{"erMachineInstructions", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"inc", "[", "1", "]"}], ",", 
        RowBox[{"cpy", "[", 
         RowBox[{"1", ",", "2"}], "]"}], ",", 
        RowBox[{"je", "[", 
         RowBox[{"1", ",", "2", ",", "1", ",", "1"}], "]"}]}], "}"}]}], ",", 
     "erMachineTable"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"erMachineTable", "=", 
     RowBox[{"cmEvolveList", "[", 
      RowBox[{"erMachineInstructions", ",", "erMachine", ",", "15"}], "]"}]}],
     ";", "\[IndentingNewLine]", 
    RowBox[{"GraphicsRow", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"Grid", "[", 
          RowBox[{"erMachineTable", ",", " ", 
           RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}], ",", 
         RowBox[{"RGBColor", "[", 
          RowBox[{"0.8", ",", "0.36", ",", "0.41"}], "]"}], ",", "17"}], 
        "]"}], ",", 
       RowBox[{"ArrayPlot", "[", 
        RowBox[{
         RowBox[{"Partition", "[", 
          RowBox[{
           RowBox[{"Flatten", "[", "erMachineTable", "]"}], ",", "3"}], "]"}],
          ",", 
         RowBox[{"Mesh", "\[Rule]", "True"}]}], "]"}]}], "}"}], "]"}]}]}], 
  "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.834923810447328*^9, 3.834923810975624*^9}, 
   3.8349238780476217`*^9, {3.834923945991165*^9, 3.8349239471825323`*^9}, 
   3.834934010634326*^9, {3.834934187297868*^9, 3.834934190027776*^9}, {
   3.835276526517741*^9, 3.835276549687752*^9}, {3.835347287915265*^9, 
   3.8353473054510098`*^9}, {3.835349696328679*^9, 3.83534971678963*^9}},
 CellLabel->"In[208]:=",
 CellID->623514640],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztnU2LLEmWnkvSRkv9Bf0GbWarpbYjtOvNDOqe0qbV9AiEskAI4hao4NaF
hsYhRUdRAu2EFiktQpv+BwEBDVG62VR2CYbx7FUutIllyD0izD8i3NzPl9lx
z3gfHDHquteO5zV70vzj+Dn/9K//7V/+4h9+8cUXf/uPq//nL//q3//zX//6
r/7Dv/wn1f/nX/3yb//N3/zy5//6X/zy3/38b37+67/4639U/Y/P1Z/9i3/w
xRf1/30EAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAZDx//QmH7/H6P/+3
9yoAc2f7sy9x+B7/97/8V+9VAOaOyzr5fz88V3H//n/8r8xxZwg8BRTgqS/w
FFCAp77AU0ABnvoCTwEFeOoLPAUU4Kkv+n//70BGrOadyzI8LXfl0/qlWL88
vaY8LxHlpj6xYlNuJedm4unWA8dF6xV6qZ6Wm/3PvtwWO+7fY3l6eFq1bxuv
Y72+Fat9818fVi9PuwP3bMYgjL9dx09vGngq+5HvKu5RtU52L9LFyfE0RPnZ
6no/Pf+WGDhWZck9oyGI45/304fLf33Z8oLAU9mPfFdxj+J1Uu6alZnW04ss
t+q1/jYXnIdtY9b6jXtO17DHfyvq/7RnXpnDU9mPfFdxj6J1ctiuextNUk8v
V5XXXoSL4RtfwibI9eUKwfiXv8L814Cnsh/5ruIeueuk3kabu8Vw45bB04dN
/67wstkNyhhVjIFkfHiaDXg6SnMp+OW+qMR5LR+cPL1sspH70OilMhnR+PA0
G/B0lJOnD+u3y/p083RqxxzbDSnIxoen2YCn4xx6Owg8HfL0+hJ9Angq+5Hv
Ku5RtU5yeDq4+M9PVuNGyE9MMz48zQY85ZDD04sy/RDz9DT2aHoceCr7ke8q
7nHmnoaXIFfJAzP1VHS9DU9lP/JdxT3O19PXt6d17L3PXD1tcwj3xeaN9rQZ
nsp+5LuKe5ytp6PpClN3gkbPkWTjMxMt4KnsR76ruMcZe9qm9d5kzM7zee/p
tNt0SuKnPfBU9iPfVdzjbD09cYjlG4xnMujzHITjt/8g9Ee+8FT2I99V3OO8
PT1Gk9vnmDco+/0AT2U/8l3FPc7e09itYpAlttVa5eFzxh9ORZ4Ansp+5LuK
e5y9p/HFP7vv2pDnkA14yiGjp4Pesb4Tb96Y0PdZ5nfoyO/NBjzl4LufXs6B
WndF4ClrfHiaEXiaBztPWdSXsty6KHTgaTbgaR5srnu5nK5j4Sk8XVzc4115
Wg9lVOJsCNRHygY8zYOg3uApY/ZVcfV7upuWZvyOc6hOLGQjo95gBuBpHlj1
ey9Z8ZGcfCrVRa/NTe4N3fq9/H0fnsp+5LuKe1yCp5eHrrpPYBISkhur3wPE
b2R6fxuein7ku4p7XIan7xl4KvuR7yruEZ56A09lP/JdxT3CU2/gqexHvqu4
R3jqDTyV/ch3FfcIT72Bp7If+a7iHuGpN/BU9iPfVdwjPPUGnsp+5LuKe4Sn
3sBT2Y98V3GPp3Xyx29+8/z1p5zHD199qOL+4VdfZY47wwOeyn7ku4p7PHn6
vPo49DU0jkwHPBX8yHcV94jrXm/gqexHvqu4R3jqDTyV/ch3FfcIT70x8RRk
w2reucBTX0w8ffTgO6d93HErh6cTlLvyaf1SrInNILJSbuoTKzZN+VAW8BSe
UuCuk8N28/Kwah9Xjpbgi8HyNJS8Ph0j35+ey3gaf6BKqDfY/U6cHx2ewlMK
nHUSCoEOHAPdmkYQ1F2pQ4ztp+GPGXpKrN973k+b9k8edVfgaR4W4WlT/2Tf
2VM6JeIZJcIYnlKatnS6pNl5yq6H71jHDJ7mYQGejvVtYe9lhvUGD9t1b9cz
8nSq2dPAv4NjXVB4mof5ezrePIXbIs2mzna9jTa3rqtY83ERkn5t8BSepoO2
TqZaVMQalUYw7QNVlww9KJpoRIMy+5/CU3iaDpP3Mh776cnTh3Uo8Wfpqayf
ODyFp+mw8DQ4Qi6Qa3Lde+htZ7Px1KOvIjzNw6I9bd5v0l9J6PsU32Dp6eXJ
drxJ3GAseApP06FdJ81bfs76pHt6UWbaPn9PZa1w4Ck8paBaJ+07Ed7ipHoa
XoIQduoZeDr6lDgGPIWnFMTrpPPikt0EjeDp61vorERTbw6edrohF9QeFvAU
nlKQrZNOzu1a0FRl2tOxtIpBEjxHino6um8yzxyewlMK/HVSp6aHe1JhW1KK
p21aL+nxlP/z3ppOBiPx0x54Ck8pMNdJJxVf0aaQeH96YKRPmOY5jCcVR/9r
ew70fxl4Ck8pcNZJKyk32/wK7vNeQjhTT0V5g6RPBm6Ap/CUAnmdmEl6nP37
0zburXQjt58jqchx4Ck8pcDLw7eQ9GiVh9/D2FPBd23Ic4Cn6aCtkzbpffwg
piQZftcWIH4pwPk9Q/xOPID8XniaDtI6ia7YXJ7q91OBp6dhp+uuBOApPE2H
fp0ISOAphfqqgFsXhQ48hafpWIanzLzEYU5XBfAUnmr+qV3iHu/K03oodooj
HdRHgqfpmLunzavMOmP2VXH1e7qBNa4aeuFQnVjIRka9QXiagtl72tY5VL12
qS56bW5yb+jW7+Xv+/AUnlKYv6eXh67Gr0ftCMmN1e8BwScJ8BSeUliCp+8Z
eApPKcBTX+ApPKUAT32Bp/CUAjz1BZ7CUwrw1Bd4Ck8pwFNf4Ck8pQBPfYGn
8JQCPPUFnsJTCtU6+fFTUSmT8/jp8fsq7ucP32aOO8MDnsJTCtU6eV59pHxb
iiPRAU/h6STVOvnTb39XXYjmPP68+X0Vt9pVM8ed4QFP4SkF/ToRgPvTBngK
TynAU19MPAXZsJp3LvDUFxNPf+HBd677qVdcq3nnsgxPy135tH4p1sRmEFkp
N/WJFZumfCgLeCrzxSuuZqY0cNfJoW6h0jSB+nL/sHrZsssssDzt9Jwa/f70
XBQx3QeqsfG734nzo8NTmS9ecTUzpYG1TtoOUFcHsyEUx9O23vXofhr+WCpP
4+Of99Om/ZNH3RV4mi2uZqY00NdJWxK/0+eo7YKapp84qWlLp0taEk9p4zvW
MYOn2eJqZkoDeZ3EN5Rw4UffShieTtUb7LRLTuIpfXzHuqDwNFtczUxpoK6T
sRaH7H73bE8HN+venfKK03ycBnN8eJrTF6+4mpnSYPG818XTtuXNvqj+a7o+
UNTx4WlOX7ziamZKg4GnjG7CF8w8fViHEn9pPOWMD09z+uIVVzNTGlTrpHxt
ngDvOevT5Lr30Pu1YO4pe3zHvorwNFtczUxpkK2T3jvNn6246Qd0T736FAvG
h6c5ffGKq5kpDbJ18lbUGQ710d7ERRsO3kL39FIMf9o+f09lrXDgqcwXr7ia
mdKgXyeHJiGH7AjV09B3lfDGZwae8p+nHeGp1BevuJqZ0mCS39tcBtv1KX59
C52VaOrNwdNON+SC2sMCnsp88YqrmSkNJp5yt5JpT8NOSt6b5uHpkX3m8FTm
i1dczUxpMPKUpwnF0zatl7RHz8PTToYh8dkaPJX54hVXM1MaiOskNDeMPSSx
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
veyrTYKnr2+hsxJF/zbdIk1HNur4TTfkgtrDAp7KfPGKq5kpDSaecreSaU/H
Mg2u6dwsrwUdXozH55z5EZ5KffGKq5kpDUaeTr1z7EPxtE3rHduj2wfO3Bxj
Gszx648UQqIvPE3pi1dczUxpIK6TkO8aW6vWnp44TLyZ7aTKJ3lwxB2//Ueg
nww8lfniFVczUxqYeYORO1DWAx/+896ha8hWIm7qOw3++JFPBsaBpzJfvOJq
ZkoDeZ2E/POBnaVZ0tQrT/X70/lJepSkTh3hqdQXr7iamdLAWCft28P2ccqh
e0eW7nuZwTz8VJIKx0eeQ05fvOJqZkoDa53005CuPp1mLGndd23Nl+MTR+/3
RvPGZFo90fjI783ri1dczUxpYK+TclcWbRrSpRQJ822Iaj8tN/uknsrGh6d5
ffGKq5kpDUbvZXgk/V4mTr1RJsr7PcLTvL54xdXMlIZleGqSCnjaKOEpPNXE
1cyUhjvytB4qSVbhGdRHyumLV1zNTGmYu6dNRmKdMcsuQNrh9KpFUzQpzqE6
sZCNjHqDeXzxiquZKQ2z97Qt/Se4qmypLnpTf+wm2vfhqcwXr7iamdIwf0/P
SbZ7Tl5iVkJyY/V7QPAVADyV+eIVVzNTGpbg6XsGnsp88YprNe9c4Kkv8FTm
i1dcq3nnAk99gacyX7ziWs07F3jqCzyV+eIV12reucBTX+CpzBevuFbzzgWe
+gJPZb54xbWady7w1Bd4KvPFK67VvHOBp77AU5kvXnGt5p0LPPUFnsp88Ypr
Ne9cqnXyvPpI+dwSR6JD7ynIhpV3XKp18uOnotrach4/PX5fxf384dvMcWd4
mHi69eA77KcZ0a8TAbjubYCnMl+84lrNOxd46gs8lfniFddq3rnAU1/gqcwX
r7hW884FnvoCT2W+eMW1mncuy/C03JVP65dizW2InINyU59YsSk5lVEb4KnM
F6+4mpnSoFon5xKa/G+3WZ72igb3Yx22m5eHzn89Fynlns1IaMr43XoO/H8K
eCrzxSuuZqY0KNZJqEed1tNd27itt592mjRdH+Mt3oiQxz/vp/ymAGfgqcwX
r7iamdIgXCeddhVpPY00V2qKJu07G1y1/Vl1KxaM71hvEJ5mi6uZKQ2CddJp
rp3e08G6oGO9gOW7vHJ8x/q98DRbXM1MaeCtk3obbe7XQveKDJ4O9oGK1A8M
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
T0W+eMXVzJQGxjpp3r88rJuHmYfuHVm672WW4CnyHHL64hVXM1MaWOskfu9W
V3WgBzX/rq3/h0ce1bK/D6WOj/zevL54xdXMlAb2Oil3ZdGmIW0fVi9PuwNz
/3LYT+EpPLWIq5kpDUbvZXik8nSC+habWxeFDjzN6YtXXM1MaViGp8yk2WFO
z2PhKTzVxNXMlIY78rQeKtkjJtRHyuuLV1zNTGmYu6dNRmKdMcsuQNrh9PJI
lPkwyaE6sZCNjHqDeXzxiquZKQ2z97Rb6E8hWnXRa3OTe0O3fi9/34enMl+8
4mpmSsP8Pa2/nSlWe05eYlbCQ+Dq9wDxG5ne34anIl+84mpmSsMSPH3PwFOZ
L15xreadCzz1BZ7KfPGKazXvXOCpL/BU5otXXKt55wJPfYGnMl+84lrNOxd4
6ouJpyAbVvPOBZ76YuLp1oPvsJ9mBJ76Ak9lvnjFtZp3LvDUF3gq88UrrtW8
c6nWyfPq43QtIBzJDngq8MUrrpV3XKp18uOnotrach4/PX5fxf384dvMcWd4
wFOZL15xrbzjol8nAnDd2wBPZb54xbWady7w1Bd4KvPFK67VvHOBp77AU5kv
XnGt5p0LPPUFnsp88YprNe9cluFpuSuf1i/FmttoNQflpj6xYlNyKi42wFOZ
L15xNTOlQbVOzhXg+d+EsjztFSMdjyWqSM9gcPzud+L8fwp4KvPFK65mpjQo
1kmokJ/W013bEGpiP23/ZBpPI+Of91N+sfEz8FTmi1dczUxpEK6TThn8tJ6S
t8hOeZYknk6O71jHDJ5mi6uZKQ2CdXLYrvfdjJqkntLqDfYL9dt7ShnfsS4o
PM0WVzNTGnjrpN5GmxW7ivb7nsK4znaz5z6l6S9DGx+e5vTFK65mpjRw1klz
g1ZX6Twwe552MfX0clb1jWGSPlDU8eFpTl+84mpmSgPb07ZZ2yw8vdw2ns8h
gaf08eFpTl+84mpmSgNrnfT7Pc3A06v/au4pZ3zHvorwNFtczUxpUKyTHJ6O
Lf7bR8G2njLHh6c5ffGKq5kpDTP3tHfZORS99x7E0lP++KJWOPBU5otXXM1M
aZi1p5cdbSB5YNhfO09F44dWOJxXqPBU5otXXM1MaZirp69vobPSwPixncvK
U/H4TTfkgtrDAp7KfPGKq5kpDTP1NOykA3vTSIaSiafK8UfOfAh4KvPFK65m
pjTM1tM2rbd/0dtPDRo9RE2jVON30imJn/bAU5kvXnE1M6Vhpp6eOAztXzP2
tP0HoT/yhacyX7ziamZKw5w9PXKT25PkI5HHF31VB09lvnjF1cyUhpl7ynsp
6espJRX59i/BU5EvXnE1M6Vh5p7yFr+rp8hzyOmLV1zNTGlYhqfE5IERj5o3
JprKLcjvhadOLMNT/X4KT+GpRVzNTGnQrxMBqTydoM4X4tZFoQNPc/riFVcz
UxqW4SkzaXaY0/NYeApPNXE1M6Xhjjyth0r2iAn1kfL64hVXM1Ma5u5pk9xe
Z8y+Kq5+T3fTosyHSQ7ViYVsZNQbzOOLV1zNTGmYvafdQn8K0aqLXpub3Bu6
9Xv5+z48lfniFVczUxrm72n97Uyx2kufLScnPASufg8Qv5Hp/W14KvLFK65m
pjQswdP3DDyV+eIV12reucBTX+CpzBevuFbzzgWe+gJPZb54xbWady7w1Bd4
KvPFK67VvHOBp76YeAqyYTXvXOCpLyaePnpQxf3Cie+wn2YBnjbAU3hKAZ76
Ak/hKYVqnfzxm988f/0p5/HDVx+quH/41VeZ487wgKfwlEK1Tp5XH6mVu3Ak
OOApPJ1Ev04E4Lq3AZ7CUwrw1Bd4Ck8pwFNf4Ck8pQBPfYGn8JTCMjwtd+XT
+qVYE5tBZKXc1CdWbMqt5NzgKTylwF0nh+3m5aHT2eFh9fLEaNNwhuVpr5FE
9/vT3gfaN0eKL1UHK953T4MfFJ7CUwqcdRIKgQ4c192axhHUXalD9PfTiUYw
9p62Z9Lz9LyfNu2fPOquwFN42tDUP9l3NtBqe90Prt5RGJ5Gm7bIqwfL6JR/
Gf5JHeuYwVN4emGsrWfYaMjKWNQbvARNV+ezS3/vnl2dbXgKT8+MN08Jy5ha
xcugzraoOZqQJtbTTOvhw1N4emLqIpPZgMnAU8s6+eN0Nu659q2Ap/CUQv79
NNwM7vrPn1enMr/8HyDO5bb0bB88hadOWHgadlvy7qb2dOTJ8+nJsNVr1qvo
c+2rCE/h6STNMxb6Ix11n+LmFcmX3Q30UO7E70cGuL0Fhqfw1AntOmne8nPW
J93T3mXnTdChh8/NVqtsSXMZpxeC0k+cGReewlMKqnWyXYeXp7zFSfU0vAzi
bY6yv9Vn9PdD7HFZaIXDueqGp/CUgnidHFpJ2S9HCJ6+voXOSvxMBvb73Gti
O+PkY+1moyc/zoKn8JSCbJ103vuvBc9Xpz0dS6uYRJeqNPJmlvL6iXnm8BSe
UuCvk7orU7gnFd4DUjxt03rZl68qTyfShsdTiLsPsuApPLWDuU46L0QUOQbE
+9NDZP+63DxGT0Byn9gGlXva/n6g/8vAU3hKgbNOWkllCjRwn/dehyM9d02Q
Ujg+siiVEZ7CUwrkdWIm6dHw/entzlWqHyKNQPn9gPen8DQBxHXSXA3qJT1a
5A22V6ed7sCdj+yUL09HTwZ5DvA0O7R10ub/jB/EZz4W37WN3EiOPKrV/Z5B
fi88dYK0Tspmn3LyNLZJlbuyWLXnNlIEBp7C03fvqTVmnvKorwrSfVcOT+Fp
Opbhqcn95umqAJ7CU3hKxMfTeqiE9R9QHwmepmPunjZJC3XG7Kvi6vf0XilN
0bNDdWIhGxn1BuFpCmbvabfQn0K06qI3UZGWXhlh9r4PT+Ephfl7es4o3uet
AsogPATeP0hKvsBTeEphCZ6+Z+ApPKUAT32Bp/CUAjz1BZ7CUwrw1BcTT0E2
rOadCzz1xcTTX3jwnet+6hXXat65wFNf4KnMF6+4VvPOBZ76Ak9lvnjFtZp3
LvDUF3gq88UrrtW8c6nWyY+fikqZnMdPj99XcT9/+DZz3Bke8FTmi1dcK++4
VOvkefWR8m0pjkQHPBX44hXXyjsu1Tr5029/V12I5jz+vPl9FbfaVTPHneEB
T2W+eMW18o6Lfp0IwP1pAzyV+eIV12reucBTX+CpzBevuFbzzgWe+gJPZb54
xbWady7w1Bd4KvPFK67VvHNZhqflrnxavxRrs0bhhpSb+sSKTbmVnBs8lfni
FVczUxq46+TUs7stnLt/WL1s2eVQWJ726vR2vxPvFVK4OfRflBPH7/4xflB4
KvPFK65mpjSw1knbqe3qYDZu43i6axu39ffTiYZNak+p45/306ZNm0d9JHia
La5mpjTQ10nbuqLT1aXtVsypPsTwNNpcSdfkdBr2+I71BuFptriamdJAXifx
/krhwo++lTA8jdYFvZxPsnq87PEd6/fC02xxNTOlgbpOxlo2sPuNsj293axF
TQwZ8MeHpzl98YqrmSkNFs97PTy17GfBiRsHnub0xSuuZqY0GHjK7wus9zTc
DO4O203n+fPqVI6b+wMMIBgfnub0xSuuZqY0qNZJ+do8Ad5z1qfa07Zp8tCx
Ur9mlYzv2P8UnmaLq5kpDbJ10n9nwfaC7ulEP/FLP4vwh+t3u8L3I30k48PT
nL54xdXMlAbZOqkuC/cPq/po13Ok8egQdE8vTSuuNuuxZqbNVqhoHSUbX9Sy
Cp7KfPGKq5kpDfp1cmgScsiXvlRPQ39k3uYo+1sG47Ofpx3hqdQXr7iamdJg
8by3vQy26yf++hY6oPEzGeKvem2YfpVMf5wFT2W+eMXVzJQGE0+5W8m0p2HP
4qb3nHBNVWKeOTyV+eIVVzNTGow85alB8bRN62Vfvvp52n3QBE9T+uIVVzNT
GojrJDQhjT0ksfb0xCHyZvZyMtEnq5L7RIvx238E+iM1eCrzxSuuZqY0MPMG
I3egzEc33Oe910aMZ1bw8y54I8T+qyiVEZ7KfPGKq5kpDeR1Eh6eDOwy7Fch
Zu9Pb3eu0uQhkmh8USojPJX54hVXM1MaGOukef/ysFamFujzBttEi04X78N2
E97nKl6eSsdHnkNOX7ziamZKA2udxD+drqs60INafNc2djIDV55jqQvD8MZH
fm9eX7ziamZKA3udlLuyaNOQtg+rl6fdgXknaPC9zMjJjIzDfbhEHx+e5vXF
K65mpjQYvZfhYeYpj/rWMtl35fA0qy9ecTUzpWEZnqrvN2tOz2PhKTzVxNXM
lIY78rQeKln9B9RHyuuLV1zNTGmYu6dNUkGdMcsuQNrh9PIoTYbSoTqxkI2M
eoN5fPGKq5kpDbP3tEmF0r0VrS56ExVp6ZX5Ze/78FTmi1dczUxpmL+n9bcz
xWqfNmVXQUhP2j9ISr7AU5kvXnE1M6VhCZ6+Z+CpzBevuFbzzgWe+gJPZb54
xbWady7w1BcTT0E2rOadCzz1xcTTrQffYT/NCDz1BZ7KfPGKazXvXOCpL/BU
5otXXKt55wJPfYGnMl+84lrNOxd46gs8lfniFddq3rlU6+R59THyoSWOHAc8
FfjiFdfKOy7VOvnxU1FtbTmPnx6/r+J+/vBt5rgzPOCpzBevuFbecdGvEwG4
7m2ApzJfvOJazTsXeOoLPJX54hXXat65wFNf4KnMF6+4VvPOBZ76Ak9lvnjF
tZp3LsvwtNyVT+uXYq1uQJyAclOfWLEpORUXG+CpzBevuJqZ0qBaJ+cK8Pxv
Qlme9upzdmP1PtC+OfRfqhLH7/4xflB4KvPFK65mpjQo1om88ryg7kpdIri/
n8br69p4Sh3/vJ9K+5jDU5kvXnE1M6VBuE46ZfDTehpt2uLaPHEIxzpm8DRb
XM1MaRCsk8N2vdftXBb1Bi/7bLI6n+zxHeuCwtNscTUzpYG3TupttLkaXEn7
fVvU2RY1R2PAHx+e5vTFK65mpjRw1klzq1hX6TworjwNPLWsk8+JGwee5vTF
K65mpjSwPW2btXl6Gm4Gd4ftprfFF5Kif7cIxoenOX3xiquZKQ2sddLv9+To
adNxdfBYqV+zSsZ37KsIT7PF1cyUBsU6yeHpRJ/iS5388IdFzViHkIwPT3P6
4hVXM1MaZu7ppRj+VYixJons5uYDyMYXtcKBpzJfvOJqZkrDrD29PHRlbo6y
v2UwfmiFw7nqhqcyX7ziamZKw1w9fX0LnZX448sTpbTjNxsx+XEWPJX54hVX
M1MaZupp2LO46T3KEzMYn3nm8FTmi1dczUxpmK2nbVov+/LVz9PugyZ4mtIX
r7iamdIwU09PHEIrtKukoMvDpeiTVcl9osX47T8I/ZEvPJX54hVXM1Ma5uzp
MZbcHvGX9F8pyMYXpTLCU5kvXnE1M6Vh5p5OvD+93blKk4dIovFFqYzwVOaL
V1zNTGmYuaexxd9+HNrpDnzYbsKHPIqXp9LxkeeQ0xevuJqZ0rAMT0e8GMrr
G7jyHEtdGIY3PvJ78/riFVczUxqW4Wlskyp3ZbFqP4Z9WL08RZ7h8D3ljQ9P
8/riFVczUxr060SAmac86lvLZN+Vw9OsvnjF1cyUhmV4qr7frDk9j4Wn8FQT
VzNTGu7I03qoZPUfUB8pry9ecTUzpWHunjZJBXXG7Kvi6vd0N50mQ+lQnVjI
Rka9wTy+eMXVzJSG2XsasoOUb0Wri95ERVp6ZX7Z+z48lfniFVczUxrm72n9
7Uyx2qdN2VUQ0pP2D5KSL/BU5otXXM1MaViCp+8ZeCrzxSuu1bxzgae+mHgK
smE171zgqS8u//5gccBTX+ApoABPfYGngAI89QWeAgrw1Bd4CijAU1/gKaDw
w1cf/s9//M/PX3/KeXxefazifv5P32SOO8Oj+nf4u//2371XAZg7kU+hceQ7
sJ8CAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADA3fL/AXFnE9A=
    
    "], {{0, 437.4}, {187.2, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->120],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{187.2, 437.4},
  PlotRange->{{0, 187.2}, {0, 437.4}}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{
  3.834923811872122*^9, 3.834923878350075*^9, 3.834923947556807*^9, 
   3.834934012177099*^9, 3.834934192349616*^9, 3.834934265864051*^9, 
   3.835102352462721*^9, 3.835106330964151*^9, 3.835276551010242*^9, 
   3.835276830756513*^9, {3.835347301778118*^9, 3.8353473075272417`*^9}, 
   3.835349463299899*^9, 3.835349719866531*^9},
 CellLabel->"Out[208]=",
 CellID->7406915]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Establishing Unpredictability", "Section",
 TaggingRules->{},
 CellChangeTimes->{{3.834849153540751*^9, 3.834849168607637*^9}, {
  3.8349239684974813`*^9, 3.8349239772880917`*^9}},
 CellTags->"SectionHeader",
 CellID->222151016],

Cell[CellGroupData[{

Cell["Predictability Functions", "Subsection",
 TaggingRules->{},
 CellChangeTimes->{{3.835103920266*^9, 3.8351039289538803`*^9}},
 CellID->210375965],

Cell["\<\
Armed with a counter machine function, the final goal of this project is to \
find which counter machine, of the types stated above, is the most \
unpredictable. To find the most unpredictable counter machine, the first step \
is to create functions that determine predictability.\
\>", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.834849169946419*^9, 3.834849307054071*^9}, {
  3.834849360450725*^9, 3.834849539047326*^9}, {3.8349186450203*^9, 
  3.834918686135601*^9}, {3.834920804856948*^9, 3.834920965021443*^9}, {
  3.8349239803763514`*^9, 3.8349239872779913`*^9}, {3.835102376827742*^9, 
  3.835102381687059*^9}, {3.8351024579741*^9, 3.835102643190609*^9}, {
  3.8351027327891617`*^9, 3.835102745471841*^9}, {3.835349761193358*^9, 
  3.835349791813301*^9}},
 CellTags->"ExampleTopicSentence",
 CellID->1365547426],

Cell[TextData[{
 "One necessary function is one that checks for repeating register values \
over many iterations of the counter machine. The built-in function ",
 ButtonBox["FindTransientRepeat",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://reference.wolfram.com/language/ref/FindTransientRepeat.html?\
q=FindTransientRepeat"], None},
  ButtonNote->
   "https://reference.wolfram.com/language/ref/FindTransientRepeat.html?q=\
FindTransientRepeat"],
 " finds repeats with a transient in a list (a transient is a beginning \
\"phrase\" of values that aren't included in the repeats). To create a \
function that finds repeating register values, the function \
FindTransientRepeat is applied to a list of register values; if \
FIndTransientRepeat returns an empty list, there is no repeat."
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.835102760438222*^9, 3.835102784655469*^9}, {
  3.83510381797154*^9, 3.835103895444397*^9}, {3.835104149379529*^9, 
  3.835104210634399*^9}, {3.8351042446965446`*^9, 3.8351044141550703`*^9}, {
  3.835347642295333*^9, 3.835347642297091*^9}},
 CellID->699517644],

Cell["Check for repeating register values:", "CodeText",
 TaggingRules->{},
 CellChangeTimes->{{3.83510442554397*^9, 3.835104458119525*^9}, {
   3.83527657142934*^9, 3.835276575161413*^9}, 3.835347677853767*^9, {
   3.835362314536521*^9, 3.8353623172311563`*^9}},
 CellID->117362065],

Cell[BoxData[
 RowBox[{
  RowBox[{"checkRepeat", "[", "cm_List", "]"}], ":=", " ", 
  RowBox[{
   RowBox[{"Length", "[", 
    RowBox[{
     RowBox[{"FindTransientRepeat", "[", 
      RowBox[{
       RowBox[{"cm", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", " ", "2"}], "]"}], "]"}], ",", " ", "4"}], "]"}],
      "[", 
     RowBox[{"[", "2", "]"}], "]"}], "]"}], "\[Equal]", "0"}]}]], "Input",
 TaggingRules->{},
 InitializationCell->True,
 CellChangeTimes->{{3.835104220613394*^9, 3.835104235504437*^9}, {
  3.8352624448822927`*^9, 3.83526245240138*^9}, {3.8352770238557167`*^9, 
  3.835277024509837*^9}, {3.83527706749518*^9, 3.835277074629484*^9}, {
  3.8352771253604107`*^9, 3.8352771265057592`*^9}, {3.835349741950061*^9, 
  3.8353497437757072`*^9}},
 CellLabel->"In[35]:=",
 CellID->653679068],

Cell[TextData[{
 "Another necessary function is one that searches for a pattern in the \
register values. The function ",
 ButtonBox["FindSequenceFunction",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://reference.wolfram.com/language/ref/FindSequenceFunction.\
html"], None},
  ButtonNote->
   "https://reference.wolfram.com/language/ref/FindSequenceFunction.html"],
 " is the best option in this situation. FindSequenceFunction finds a \
function that can express a list of values. If the register values appear in \
a pattern, the FindSequenceFunction will most likely find it. "
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.835104463196888*^9, 3.835104475957767*^9}, {
  3.835104730705645*^9, 3.835104742800687*^9}, {3.8351048006593237`*^9, 
  3.835104804346079*^9}, {3.8351048870837383`*^9, 3.835105061121625*^9}, {
  3.835105092735276*^9, 3.835105194523226*^9}, {3.835105530178866*^9, 
  3.8351055518436728`*^9}, {3.8353476234599648`*^9, 3.835347623461685*^9}, {
  3.835363878581478*^9, 3.83536389576688*^9}},
 CellID->1578720025],

Cell["\<\
To create a function that checks for a pattern in the register values, \
FindSequenceFunction is applied to the register values from the counter \
machine function. If FindSequenceFunction can\[CloseCurlyQuote]t find a way \
to express the input list, it\[CloseCurlyQuote]ll return an expression with \
the head FindSequenceFunction, which means the counter machine doesn\
\[CloseCurlyQuote]t have a pattern.\
\>", "Text",
 TaggingRules->{},
 CellChangeTimes->{3.835363899201804*^9},
 CellID->1141224993],

Cell["Search for a pattern in register values:", "CodeText",
 TaggingRules->{},
 CellChangeTimes->{{3.835105202550325*^9, 3.8351052170836277`*^9}, {
  3.835262166998205*^9, 3.835262169563414*^9}, {3.8352622338526897`*^9, 
  3.835262234794438*^9}, {3.835262267029825*^9, 3.8352622906985073`*^9}, {
  3.835276581369438*^9, 3.835276589829227*^9}, {3.83534768046745*^9, 
  3.83534768146871*^9}, {3.8353623187989893`*^9, 3.83536233379953*^9}},
 CellID->1967313225],

Cell[BoxData[
 RowBox[{
  RowBox[{"checkPattern", "[", "cm_List", "]"}], ":=", " ", 
  RowBox[{
   RowBox[{"Head", "[", 
    RowBox[{"FindSequenceFunction", "[", 
     RowBox[{
      RowBox[{"Flatten", "[", 
       RowBox[{"cm", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", " ", "2"}], "]"}], "]"}], "]"}], ",", " ", 
      RowBox[{"TimeConstraint", " ", "\[Rule]", " ", "3"}]}], "]"}], "]"}], 
   " ", "===", " ", "FindSequenceFunction"}]}]], "Input",
 TaggingRules->{},
 InitializationCell->True,
 CellChangeTimes->{{3.8351052346645317`*^9, 3.835105248269125*^9}, {
  3.835262173341423*^9, 3.8352621833053827`*^9}, {3.835262353745634*^9, 
  3.8352623660418997`*^9}, {3.835349752267867*^9, 3.835349752524022*^9}},
 CellLabel->"In[36]:=",
 CellID->1126668334],

Cell[TextData[{
 "Using these two functions, a general predictability function can be \
written. Essentially, when given counter machine values, it checks if ",
 StyleBox["checkrepeat",
  FontSlant->"Italic"],
 " and ",
 StyleBox["checkpattern",
  FontSlant->"Italic"],
 " can find repeating values or a pattern; if neither function can, then the \
counter machine input is unpredictable."
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.835105291250889*^9, 3.835105481037531*^9}, {
  3.835363933968911*^9, 3.8353639771235313`*^9}},
 CellID->1770083663],

Cell[TextData[{
 "Use ",
 StyleBox["checkRepeat",
  FontSlant->"Italic"],
 " and ",
 StyleBox["checkPattern",
  FontSlant->"Italic"],
 " to create a predictability function:"
}], "CodeText",
 TaggingRules->{},
 CellChangeTimes->{{3.835105483433215*^9, 3.8351054941422462`*^9}, {
  3.835277250929785*^9, 3.835277280386492*^9}, {3.835347683520109*^9, 
  3.8353476848360863`*^9}, {3.8353498074143248`*^9, 3.8353498113953123`*^9}, {
  3.835362336760408*^9, 3.835362339922192*^9}},
 CellID->977693467],

Cell[BoxData[
 RowBox[{
  RowBox[{"predictabilityTest", "[", "cm_List", "]"}], ":=", " ", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"checkRepeat", "[", "cm", "]"}], " ", "&&", " ", 
     RowBox[{"checkPattern", "[", "cm", "]"}]}], ",", " ", 
    "\"\<Unpredictable\>\"", ",", " ", "\"\<Predictable\>\""}], 
   "]"}]}]], "Input",
 TaggingRules->{},
 InitializationCell->True,
 CellChangeTimes->{{3.8351055033135023`*^9, 3.83510550953505*^9}, 
   3.835262387602427*^9, 3.835276912149988*^9, {3.835349805120563*^9, 
   3.8353498053906*^9}, {3.8353499627029657`*^9, 3.835349964835598*^9}},
 CellLabel->"In[37]:=",
 CellID->1627956632],

Cell[TextData[{
 "Below, the ",
 StyleBox["predictabilityTest",
  FontSlant->"Italic"],
 " function is tested with the 5 examples of counter machine instructions \
used above. In these tests, the counter machine function executes for 30 \
steps."
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.835105519528982*^9, 3.835105524320458*^9}, {
  3.8351055630076427`*^9, 3.835105666231844*^9}, {3.835349812933888*^9, 
  3.8353498131670647`*^9}, {3.835363997592512*^9, 3.835364012734337*^9}},
 CellID->1782746882],

Cell[TextData[StyleBox["Shepherdson-Sturgis Machine", "Subsubsection"]], \
"Text",
 TaggingRules->{},
 CellChangeTimes->{{3.835107109041555*^9, 3.8351071134232683`*^9}},
 CellID->2035944308],

Cell[TextData[{
 "Run ",
 StyleBox["predictabilityTest",
  FontSlant->"Italic"],
 " on a random Shepherdson-Sturgis machine:"
}], "CodeText",
 TaggingRules->{},
 CellChangeTimes->{{3.835349875729723*^9, 3.8353499139004602`*^9}, {
  3.83536234292048*^9, 3.835362345089526*^9}},
 CellID->144452247],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ssPredictabilityTest", "=", 
   RowBox[{"cmEvolveList", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"inc", "[", "1", "]"}], ",", 
       RowBox[{"dec", "[", "2", "]"}], ",", 
       RowBox[{"clr", "[", "1", "]"}], ",", 
       RowBox[{"cpy", "[", 
        RowBox[{"2", ",", "1"}], "]"}], ",", 
       RowBox[{"jnz", "[", 
        RowBox[{"2", ",", "3", ",", "6"}], "]"}], ",", 
       RowBox[{"j", "[", "1", "]"}]}], "}"}], ",", 
     RowBox[{"counterMachine", "[", "2", "]"}], ",", "30"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"predictabilityTest", "[", "ssPredictabilityTest", "]"}]}], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.835276934378827*^9, 3.8352769377195*^9}, {
   3.83527696958673*^9, 3.835277004551031*^9}, {3.835277114616678*^9, 
   3.8352771235444527`*^9}, {3.8353478399846907`*^9, 3.835347842545762*^9}, 
   3.8353498206147203`*^9, {3.835349974172852*^9, 3.83534997440653*^9}},
 CellLabel->"In[225]:=",
 CellID->621164965],

Cell[BoxData["\<\"Predictable\"\>"], "Output",
 TaggingRules->{},
 CellChangeTimes->{
  3.8351071210503893`*^9, {3.835276924691921*^9, 3.835276957313339*^9}, 
   3.835277006191948*^9, 3.8352770766486483`*^9, {3.835277116792542*^9, 
   3.8352771316498537`*^9}, {3.835349817084509*^9, 3.8353498222787867`*^9}, 
   3.835349984662092*^9},
 CellLabel->"Out[226]=",
 CellID->120954351]
}, Open  ]],

Cell[TextData[StyleBox["Minsky Machine (aka Abacus Machine/Lambek Machine)", \
"Subsubsection",
 FontWeight->"Plain"]], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.835107129911319*^9, 3.835107142834364*^9}},
 FontWeight->"Bold",
 CellID->669836055],

Cell[TextData[{
 "Run ",
 StyleBox["predictabilityTest",
  FontSlant->"Italic"],
 " on a random Minsky machine:"
}], "CodeText",
 TaggingRules->{},
 CellChangeTimes->{{3.835349906490584*^9, 3.8353499153026342`*^9}, {
  3.835362346639131*^9, 3.835362349290303*^9}},
 CellID->1320437121],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"minskyPredictabilityTest", "=", 
   RowBox[{"cmEvolveList", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"inc", "[", 
        RowBox[{"1", ",", "2"}], "]"}], ",", 
       RowBox[{"jzdec", "[", 
        RowBox[{"2", ",", "1", ",", "2"}], "]"}]}], "}"}], ",", 
     RowBox[{"counterMachine", "[", "2", "]"}], ",", "30"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"predictabilityTest", "[", "minskyPredictabilityTest", 
  "]"}]}], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.835277136071722*^9, 3.835277157275715*^9}, {
   3.835349824966852*^9, 3.835349832376575*^9}, 3.835349976785367*^9},
 CellLabel->"In[227]:=",
 CellID->447479652],

Cell[BoxData["\<\"Predictable\"\>"], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.835107153955209*^9, 3.8352771631183033`*^9, 
  3.835349840286798*^9, 3.8353499899574966`*^9},
 CellLabel->"Out[228]=",
 CellID->769327726]
}, Open  ]],

Cell[TextData[StyleBox["Program Machine/Program Computer", "Subsubsection"]], \
"Text",
 TaggingRules->{},
 CellChangeTimes->{{3.835107157843667*^9, 3.8351071643478394`*^9}},
 CellID->1074379684],

Cell[TextData[{
 "Run ",
 StyleBox["predictabilityTest",
  FontSlant->"Italic"],
 " on a random Program machine:"
}], "CodeText",
 TaggingRules->{},
 CellChangeTimes->{{3.8353499197201767`*^9, 3.835349923257168*^9}, {
  3.835362357831382*^9, 3.835362359958444*^9}},
 CellID->1013348247],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"programPredictabilityTest", "=", 
   RowBox[{"cmEvolveList", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"inc", "[", "2", "]"}], ",", 
       RowBox[{"dec", "[", "1", "]"}], ",", 
       RowBox[{"jz", "[", 
        RowBox[{"2", ",", "2", ",", "1"}], "]"}]}], "}"}], ",", 
     RowBox[{"counterMachine", "[", "2", "]"}], ",", "30"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"predictabilityTest", "[", "programPredictabilityTest", 
  "]"}]}], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.8352771624081583`*^9, 3.835277182614828*^9}, {
   3.8353498377739267`*^9, 3.835349842209202*^9}, 3.835349978506486*^9},
 CellLabel->"In[229]:=",
 CellID->460870068],

Cell[BoxData["\<\"Predictable\"\>"], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.835107230428701*^9, 3.835277187531353*^9, 
  3.835349847470945*^9, 3.835349995504979*^9},
 CellLabel->"Out[230]=",
 CellID->47818547]
}, Open  ]],

Cell[TextData[StyleBox["Successor Machine", "Subsubsection"]], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.835107157843667*^9, 3.8351071643478394`*^9}, {
  3.835107278798167*^9, 3.835107296550356*^9}},
 CellID->1087979190],

Cell[TextData[{
 "Run ",
 StyleBox["predictabilityTest",
  FontSlant->"Italic"],
 " on a random Successor machine:"
}], "CodeText",
 TaggingRules->{},
 CellChangeTimes->{{3.835349926961945*^9, 3.8353499298624973`*^9}, {
  3.835362361313775*^9, 3.8353623639111443`*^9}},
 CellID->1719519952],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"succPredictabilityTest", "=", 
   RowBox[{"cmEvolveList", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"clr", "[", "2", "]"}], ",", 
       RowBox[{"inc", "[", "2", "]"}], ",", 
       RowBox[{"je", "[", 
        RowBox[{"2", ",", "1", ",", "2", ",", "1"}], "]"}]}], "}"}], ",", 
     RowBox[{"counterMachine", "[", "2", "]"}], ",", "30"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"predictabilityTest", "[", "succPredictabilityTest", "]"}]}], "Input",\

 TaggingRules->{},
 CellChangeTimes->{{3.835107290332584*^9, 3.8351072977082644`*^9}, {
   3.8352771953536453`*^9, 3.8352772076762342`*^9}, {3.835349846628388*^9, 
   3.8353498523966208`*^9}, 3.8353499802393007`*^9},
 CellLabel->"In[233]:=",
 CellID->1344091302],

Cell[BoxData["\<\"Predictable\"\>"], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.835107298765057*^9, 3.8352772084400873`*^9, 
  3.8353498535077343`*^9, 3.835350002789885*^9},
 CellLabel->"Out[234]=",
 CellID->795018638]
}, Open  ]],

Cell[TextData[StyleBox["Elgot-Robinson Model", "Subsubsection"]], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.835107323067502*^9, 3.83510732621679*^9}},
 CellID->1599927964],

Cell[TextData[{
 "Run ",
 StyleBox["predictabilityTest",
  FontSlant->"Italic"],
 " on a random Elgot-Robinson model:"
}], "CodeText",
 TaggingRules->{},
 CellChangeTimes->{{3.835349934938532*^9, 3.835349947673527*^9}, {
  3.835362366721058*^9, 3.835362368423574*^9}},
 CellID->130563060],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"erPredictabilityTest", "=", 
   RowBox[{"cmEvolveList", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"inc", "[", "1", "]"}], ",", 
       RowBox[{"cpy", "[", 
        RowBox[{"1", ",", "2"}], "]"}], ",", 
       RowBox[{"je", "[", 
        RowBox[{"1", ",", "2", ",", "1", ",", "1"}], "]"}]}], "}"}], ",", 
     RowBox[{"counterMachine", "[", "2", "]"}], ",", "30"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"predictabilityTest", "[", "erPredictabilityTest", "]"}]}], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.8352772231645403`*^9, 3.8352772333509693`*^9}, {
   3.8353498561326857`*^9, 3.835349863028644*^9}, 3.835349981969822*^9},
 CellLabel->"In[231]:=",
 CellID->896973967],

Cell[BoxData["\<\"Predictable\"\>"], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.8351073383149347`*^9, 3.835277238716381*^9, 
  3.835349869523682*^9, 3.835350001735092*^9},
 CellLabel->"Out[232]=",
 CellID->1911126572]
}, Open  ]],

Cell["\<\
As expected, the function determined that all 5 counter machine examples \
tested were predictable.\
\>", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.835107341465148*^9, 3.8351073767950697`*^9}},
 CellID->68505036]
}, Open  ]],

Cell[CellGroupData[{

Cell["Unpredictable Counter Machines", "Subsection",
 TaggingRules->{},
 CellChangeTimes->{{3.835103936642728*^9, 3.835103942577903*^9}, {
  3.83510680881741*^9, 3.8351068127254744`*^9}, {3.8351070087946568`*^9, 
  3.8351070094732523`*^9}},
 CellID->1647551711],

Cell[TextData[{
 "The ",
 StyleBox["predictabilityTest",
  FontSlant->"Italic"],
 " function can now be used on the 5 types of counter machines in order to \
find ones that are not predictable. For each type of counter machine, the ",
 StyleBox["predictabilityTest",
  FontSlant->"Italic"],
 " function will be applied to every possible permutation of values for the \
corresponding instruction set. Using the function Table to iterate over the \
possible values for each variable creates a list of possible permutations. \
After finding counter machines that aren't predictable, they can be analyzed \
to determine whether or not they're truly unpredictable."
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.835103947900625*^9, 3.8351039541560717`*^9}, {
  3.8351063881812687`*^9, 3.835106389163762*^9}, {3.835277297608335*^9, 
  3.83527732597022*^9}, {3.835277425559795*^9, 3.835277578782551*^9}, {
  3.835277843562087*^9, 3.835277874217428*^9}, {3.835277941501696*^9, 
  3.8352779842428627`*^9}, {3.835347900977675*^9, 3.8353479514354362`*^9}, {
  3.835350020058175*^9, 3.835350053793397*^9}, {3.835350596513462*^9, 
  3.835350596515069*^9}, {3.835364125293701*^9, 3.835364208710658*^9}},
 CellID->1652991210],

Cell["\<\
Note: The computations run below can take some time to run, due to the volume \
of possibilities. \
\>", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.835347982135703*^9, 3.83534800498954*^9}, {
  3.83534804412337*^9, 3.835348055236514*^9}, {3.835350735766131*^9, 
  3.835350750263781*^9}, {3.835350966194641*^9, 3.835350968577032*^9}, {
  3.835364217207119*^9, 3.83536423060841*^9}},
 CellID->753869129],

Cell["Shepherdson-Sturgis Machine: 13824 possibilities", "Item",
 TaggingRules->{},
 CellChangeTimes->{{3.835350740168483*^9, 3.835350795348199*^9}},
 CellID->505115507],

Cell["Minsky Machine: 32 possibilities", "Item",
 TaggingRules->{},
 CellChangeTimes->{{3.835350740168483*^9, 3.835350799175404*^9}, {
  3.8353508463527107`*^9, 3.8353508486854963`*^9}},
 CellID->1136145475],

Cell["Program Machine: 72 possibilities", "Item",
 TaggingRules->{},
 CellChangeTimes->{{3.835350740168483*^9, 3.835350799175404*^9}, {
  3.8353508463527107`*^9, 3.835350869373783*^9}},
 CellID->1239904656],

Cell["Successor Machine: 144 possibilities", "Item",
 TaggingRules->{},
 CellChangeTimes->{{3.835350740168483*^9, 3.835350799175404*^9}, {
  3.8353508463527107`*^9, 3.835350900615934*^9}},
 CellID->542173725],

Cell["Elgot-Robinson Model: 288 possibilities", "Item",
 TaggingRules->{},
 CellChangeTimes->{{3.835350740168483*^9, 3.835350799175404*^9}, {
  3.8353508463527107`*^9, 3.835350928149006*^9}},
 CellID->1961056500],

Cell["\<\
Find the Shepherdson-Sturgis machine instruction sets that create \
unpredictable counter machines:\
\>", "CodeText",
 TaggingRules->{},
 CellChangeTimes->{{3.835278032621859*^9, 3.835278141077408*^9}, {
  3.8352782691887903`*^9, 3.835278270077125*^9}, {3.835347867536256*^9, 
  3.835347868791716*^9}, {3.835362379239708*^9, 3.835362389073331*^9}},
 CellID->1364976417],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"alPossibleSSMachines", "=", " ", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"inc", "[", "r1", "]"}], ",", 
         RowBox[{"dec", "[", "r2", "]"}], ",", 
         RowBox[{"clr", "[", "r3", "]"}], ",", 
         RowBox[{"cpy", "[", 
          RowBox[{"r4", ",", "r5"}], "]"}], ",", 
         RowBox[{"jnz", "[", 
          RowBox[{"r6", ",", "z1", ",", "z2"}], "]"}], ",", 
         RowBox[{"j", "[", "z3", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"r1", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"r2", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"r3", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"r4", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"r5", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"r6", ",", " ", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"z1", ",", " ", "6"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"z2", ",", " ", "6"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"z3", ",", "6"}], "}"}]}], "]"}], ",", "8"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"predictabilitySS", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"predictabilityTest", "[", 
        RowBox[{"cmEvolveList", "[", 
         RowBox[{"#", ",", 
          RowBox[{"counterMachine", "[", "2", "]"}], ",", "30"}], "]"}], 
        "]"}], "\[Equal]", "\"\<Unpredictable\>\""}], ",", "#", ",", 
      "Nothing"}], "]"}], "&"}], "/@", "alPossibleSSMachines"}]}]}], "Input",
 Evaluatable->False,
 TaggingRules->{},
 CellChangeTimes->{{3.835008516832415*^9, 3.8350085223390627`*^9}, {
   3.835020573978319*^9, 3.835020578139605*^9}, {3.835020742518046*^9, 
   3.835020792631241*^9}, {3.835020856576346*^9, 3.8350208889137287`*^9}, {
   3.835020943517127*^9, 3.835021030611828*^9}, {3.835021090134411*^9, 
   3.8350213553981037`*^9}, {3.8350213959048147`*^9, 3.835021492157729*^9}, {
   3.835021638774357*^9, 3.8350218529577713`*^9}, {3.835021932722355*^9, 
   3.8350219896624727`*^9}, {3.835022034448092*^9, 3.83502220191218*^9}, {
   3.835022232791133*^9, 3.835022274126664*^9}, {3.835022558577756*^9, 
   3.835022573268578*^9}, {3.835089669645177*^9, 3.835089692294392*^9}, {
   3.83509403267798*^9, 3.835094059017788*^9}, 3.8350987035542517`*^9, {
   3.8351031613392353`*^9, 3.8351031812897463`*^9}, {3.835103309390307*^9, 
   3.835103309527302*^9}, {3.835108303045937*^9, 3.835108325677073*^9}, {
   3.83527800041003*^9, 3.835278014622334*^9}, {3.835350058827063*^9, 
   3.83535007661454*^9}, 3.835350228474792*^9, {3.835354831352271*^9, 
   3.8353548324101267`*^9}},
 CellID->1665618017],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"inc", "[", "1", "]"}], ",", 
     RowBox[{"dec", "[", "2", "]"}], ",", 
     RowBox[{"clr", "[", "2", "]"}], ",", 
     RowBox[{"cpy", "[", 
      RowBox[{"1", ",", "2"}], "]"}], ",", 
     RowBox[{"jnz", "[", 
      RowBox[{"1", ",", "1", ",", "1"}], "]"}], ",", 
     RowBox[{"j", "[", "6", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"inc", "[", "1", "]"}], ",", 
     RowBox[{"dec", "[", "2", "]"}], ",", 
     RowBox[{"clr", "[", "2", "]"}], ",", 
     RowBox[{"cpy", "[", 
      RowBox[{"1", ",", "2"}], "]"}], ",", 
     RowBox[{"jnz", "[", 
      RowBox[{"1", ",", "1", ",", "4"}], "]"}], ",", 
     RowBox[{"j", "[", "3", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"inc", "[", "1", "]"}], ",", 
     RowBox[{"dec", "[", "2", "]"}], ",", 
     RowBox[{"clr", "[", "2", "]"}], ",", 
     RowBox[{"cpy", "[", 
      RowBox[{"1", ",", "2"}], "]"}], ",", 
     RowBox[{"jnz", "[", 
      RowBox[{"1", ",", "1", ",", "5"}], "]"}], ",", 
     RowBox[{"j", "[", "1", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"inc", "[", "1", "]"}], ",", 
     RowBox[{"dec", "[", "2", "]"}], ",", 
     RowBox[{"clr", "[", "2", "]"}], ",", 
     RowBox[{"cpy", "[", 
      RowBox[{"1", ",", "2"}], "]"}], ",", 
     RowBox[{"jnz", "[", 
      RowBox[{"1", ",", "1", ",", "5"}], "]"}], ",", 
     RowBox[{"j", "[", "2", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"inc", "[", "1", "]"}], ",", 
     RowBox[{"dec", "[", "2", "]"}], ",", 
     RowBox[{"clr", "[", "2", "]"}], ",", 
     RowBox[{"cpy", "[", 
      RowBox[{"1", ",", "2"}], "]"}], ",", 
     RowBox[{"jnz", "[", 
      RowBox[{"1", ",", "1", ",", "5"}], "]"}], ",", 
     RowBox[{"j", "[", "3", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"inc", "[", "1", "]"}], ",", 
     RowBox[{"dec", "[", "2", "]"}], ",", 
     RowBox[{"clr", "[", "2", "]"}], ",", 
     RowBox[{"cpy", "[", 
      RowBox[{"1", ",", "2"}], "]"}], ",", 
     RowBox[{"jnz", "[", 
      RowBox[{"1", ",", "1", ",", "6"}], "]"}], ",", 
     RowBox[{"j", "[", "1", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"inc", "[", "1", "]"}], ",", 
     RowBox[{"dec", "[", "2", "]"}], ",", 
     RowBox[{"clr", "[", "2", "]"}], ",", 
     RowBox[{"cpy", "[", 
      RowBox[{"1", ",", "2"}], "]"}], ",", 
     RowBox[{"jnz", "[", 
      RowBox[{"1", ",", "1", ",", "6"}], "]"}], ",", 
     RowBox[{"j", "[", "2", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"inc", "[", "1", "]"}], ",", 
     RowBox[{"dec", "[", "2", "]"}], ",", 
     RowBox[{"clr", "[", "2", "]"}], ",", 
     RowBox[{"cpy", "[", 
      RowBox[{"1", ",", "2"}], "]"}], ",", 
     RowBox[{"jnz", "[", 
      RowBox[{"1", ",", "1", ",", "6"}], "]"}], ",", 
     RowBox[{"j", "[", "5", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"inc", "[", "1", "]"}], ",", 
     RowBox[{"dec", "[", "2", "]"}], ",", 
     RowBox[{"clr", "[", "2", "]"}], ",", 
     RowBox[{"cpy", "[", 
      RowBox[{"1", ",", "2"}], "]"}], ",", 
     RowBox[{"jnz", "[", 
      RowBox[{"1", ",", "1", ",", "6"}], "]"}], ",", 
     RowBox[{"j", "[", "6", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"inc", "[", "1", "]"}], ",", 
     RowBox[{"dec", "[", "2", "]"}], ",", 
     RowBox[{"clr", "[", "2", "]"}], ",", 
     RowBox[{"cpy", "[", 
      RowBox[{"1", ",", "2"}], "]"}], ",", 
     RowBox[{"jnz", "[", 
      RowBox[{"1", ",", "6", ",", "1"}], "]"}], ",", 
     RowBox[{"j", "[", "1", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"inc", "[", "1", "]"}], ",", 
     RowBox[{"dec", "[", "2", "]"}], ",", 
     RowBox[{"clr", "[", "2", "]"}], ",", 
     RowBox[{"cpy", "[", 
      RowBox[{"1", ",", "2"}], "]"}], ",", 
     RowBox[{"jnz", "[", 
      RowBox[{"1", ",", "6", ",", "2"}], "]"}], ",", 
     RowBox[{"j", "[", "1", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"inc", "[", "1", "]"}], ",", 
     RowBox[{"dec", "[", "2", "]"}], ",", 
     RowBox[{"clr", "[", "2", "]"}], ",", 
     RowBox[{"cpy", "[", 
      RowBox[{"1", ",", "2"}], "]"}], ",", 
     RowBox[{"jnz", "[", 
      RowBox[{"1", ",", "6", ",", "3"}], "]"}], ",", 
     RowBox[{"j", "[", "1", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"inc", "[", "1", "]"}], ",", 
     RowBox[{"dec", "[", "2", "]"}], ",", 
     RowBox[{"clr", "[", "2", "]"}], ",", 
     RowBox[{"cpy", "[", 
      RowBox[{"1", ",", "2"}], "]"}], ",", 
     RowBox[{"jnz", "[", 
      RowBox[{"1", ",", "6", ",", "4"}], "]"}], ",", 
     RowBox[{"j", "[", "1", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"inc", "[", "2", "]"}], ",", 
     RowBox[{"dec", "[", "1", "]"}], ",", 
     RowBox[{"clr", "[", "1", "]"}], ",", 
     RowBox[{"cpy", "[", 
      RowBox[{"2", ",", "1"}], "]"}], ",", 
     RowBox[{"jnz", "[", 
      RowBox[{"2", ",", "1", ",", "3"}], "]"}], ",", 
     RowBox[{"j", "[", "4", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"inc", "[", "2", "]"}], ",", 
     RowBox[{"dec", "[", "1", "]"}], ",", 
     RowBox[{"clr", "[", "1", "]"}], ",", 
     RowBox[{"cpy", "[", 
      RowBox[{"2", ",", "1"}], "]"}], ",", 
     RowBox[{"jnz", "[", 
      RowBox[{"2", ",", "1", ",", "3"}], "]"}], ",", 
     RowBox[{"j", "[", "6", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"inc", "[", "2", "]"}], ",", 
     RowBox[{"dec", "[", "1", "]"}], ",", 
     RowBox[{"clr", "[", "1", "]"}], ",", 
     RowBox[{"cpy", "[", 
      RowBox[{"2", ",", "1"}], "]"}], ",", 
     RowBox[{"jnz", "[", 
      RowBox[{"2", ",", "1", ",", "6"}], "]"}], ",", 
     RowBox[{"j", "[", "6", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"inc", "[", "2", "]"}], ",", 
     RowBox[{"dec", "[", "1", "]"}], ",", 
     RowBox[{"clr", "[", "1", "]"}], ",", 
     RowBox[{"cpy", "[", 
      RowBox[{"2", ",", "1"}], "]"}], ",", 
     RowBox[{"jnz", "[", 
      RowBox[{"2", ",", "6", ",", "1"}], "]"}], ",", 
     RowBox[{"j", "[", "1", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"inc", "[", "2", "]"}], ",", 
     RowBox[{"dec", "[", "1", "]"}], ",", 
     RowBox[{"clr", "[", "1", "]"}], ",", 
     RowBox[{"cpy", "[", 
      RowBox[{"2", ",", "1"}], "]"}], ",", 
     RowBox[{"jnz", "[", 
      RowBox[{"2", ",", "6", ",", "2"}], "]"}], ",", 
     RowBox[{"j", "[", "1", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"inc", "[", "2", "]"}], ",", 
     RowBox[{"dec", "[", "1", "]"}], ",", 
     RowBox[{"clr", "[", "1", "]"}], ",", 
     RowBox[{"cpy", "[", 
      RowBox[{"2", ",", "1"}], "]"}], ",", 
     RowBox[{"jnz", "[", 
      RowBox[{"2", ",", "6", ",", "3"}], "]"}], ",", 
     RowBox[{"j", "[", "1", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"inc", "[", "2", "]"}], ",", 
     RowBox[{"dec", "[", "1", "]"}], ",", 
     RowBox[{"clr", "[", "1", "]"}], ",", 
     RowBox[{"cpy", "[", 
      RowBox[{"2", ",", "1"}], "]"}], ",", 
     RowBox[{"jnz", "[", 
      RowBox[{"2", ",", "6", ",", "4"}], "]"}], ",", 
     RowBox[{"j", "[", "1", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"inc", "[", "2", "]"}], ",", 
     RowBox[{"dec", "[", "1", "]"}], ",", 
     RowBox[{"clr", "[", "1", "]"}], ",", 
     RowBox[{"cpy", "[", 
      RowBox[{"2", ",", "1"}], "]"}], ",", 
     RowBox[{"jnz", "[", 
      RowBox[{"2", ",", "6", ",", "5"}], "]"}], ",", 
     RowBox[{"j", "[", "1", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"inc", "[", "2", "]"}], ",", 
     RowBox[{"dec", "[", "1", "]"}], ",", 
     RowBox[{"clr", "[", "1", "]"}], ",", 
     RowBox[{"cpy", "[", 
      RowBox[{"2", ",", "1"}], "]"}], ",", 
     RowBox[{"jnz", "[", 
      RowBox[{"2", ",", "6", ",", "6"}], "]"}], ",", 
     RowBox[{"j", "[", "1", "]"}]}], "}"}]}], "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.835107347585795*^9},
 CellLabel->"Out[273]=",
 CellID->1592673074]
}, Open  ]],

Cell["\<\
Find the Minsky machine instruction sets that create unpredictable counter \
machines:\
\>", "CodeText",
 TaggingRules->{},
 CellChangeTimes->{{3.835278032621859*^9, 3.835278159479192*^9}, {
   3.835278265697596*^9, 3.8352782667217913`*^9}, 3.83534811565865*^9, 
   3.835362393886024*^9},
 CellID->1498634135],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"allPossibleMinskyMachines", "=", " ", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"inc", "[", 
          RowBox[{"r1", ",", "z1"}], "]"}], ",", 
         RowBox[{"jzdec", "[", 
          RowBox[{"r2", ",", "z2", ",", "z3"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"r1", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"r2", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"z1", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"z2", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"z3", ",", "2"}], "}"}]}], "]"}], ",", "4"}], "]"}]}], 
  ";"}], "\[LineSeparator]", 
 RowBox[{"predictabilityMinsky", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"predictabilityTest", "[", 
        RowBox[{"cmEvolveList", "[", 
         RowBox[{"#", ",", 
          RowBox[{"counterMachine", "[", "2", "]"}], ",", "30"}], "]"}], 
        "]"}], "\[Equal]", "\"\<Unpredictable\>\""}], ",", "#", ",", 
      "Nothing"}], "]"}], "&"}], "/@", 
   "allPossibleMinskyMachines"}]}]}], "Input",
 Evaluatable->False,
 TaggingRules->{},
 CellChangeTimes->{{3.835022360681279*^9, 3.835022375041656*^9}, {
   3.835089043544559*^9, 3.8350890739662457`*^9}, {3.8350891196752377`*^9, 
   3.835089150432592*^9}, {3.8351033249451714`*^9, 3.835103325078182*^9}, {
   3.835278184701878*^9, 3.835278225260993*^9}, 3.835278292545129*^9, {
   3.835350080109743*^9, 3.8353500903300667`*^9}, {3.8353508118516912`*^9, 
   3.83535083308923*^9}},
 CellID->2051805902],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.83527837261064*^9},
 CellLabel->"Out[150]=",
 CellID->1347393398]
}, Open  ]],

Cell["\<\
Find the Program machine instruction sets that create unpredictable counter \
machines:\
\>", "CodeText",
 TaggingRules->{},
 CellChangeTimes->{{3.835278032621859*^9, 3.835278159479192*^9}, {
   3.835278260362912*^9, 3.835278262836182*^9}, 3.835348118481184*^9, 
   3.835362396766952*^9},
 CellID->1513501364],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"allpossiblePMachines", "=", " ", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"inc", "[", "r1", "]"}], ",", 
         RowBox[{"dec", "[", "r2", "]"}], ",", 
         RowBox[{"jz", "[", 
          RowBox[{"r3", ",", "z1", ",", "z2"}], "]"}]}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"r1", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"r2", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"r3", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"z1", ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"z2", ",", "3"}], "}"}]}], "]"}], ",", "4"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"predictabilityProgram", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"predictabilityTest", "[", 
        RowBox[{"cmEvolveList", "[", 
         RowBox[{"#", ",", 
          RowBox[{"counterMachine", "[", "2", "]"}], ",", "30"}], "]"}], 
        "]"}], "\[Equal]", "\"\<Unpredictable\>\""}], ",", "#", ",", 
      "Nothing"}], "]"}], "&"}], "/@", "allpossiblePMachines"}]}]}], "Input",
 Evaluatable->False,
 TaggingRules->{},
 CellChangeTimes->{{3.835022360681279*^9, 3.835022375041656*^9}, {
   3.835089043544559*^9, 3.8350890739662457`*^9}, {3.8350891196752377`*^9, 
   3.835089150432592*^9}, {3.8351033249451714`*^9, 3.835103325078182*^9}, {
   3.835278184701878*^9, 3.835278225260993*^9}, {3.8352783015312157`*^9, 
   3.835278319064364*^9}, {3.835350147781004*^9, 3.835350168391941*^9}, 
   3.8353502230305634`*^9},
 CellID->473626033],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.83527837261064*^9},
 CellLabel->"Out[150]=",
 CellID->1118322767]
}, Open  ]],

Cell["\<\
Find the Successor machine instruction sets that create unpredictable counter \
machines:\
\>", "CodeText",
 TaggingRules->{},
 CellChangeTimes->{{3.835278032621859*^9, 3.835278159479192*^9}, {
   3.835278260362912*^9, 3.835278262836182*^9}, {3.835278336323278*^9, 
   3.835278337791151*^9}, 3.835348119401704*^9, 3.835362402044313*^9},
 CellID->2028628882],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"allPossibleSuccMachines", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"clr", "[", "r1", "]"}], ",", 
         RowBox[{"inc", "[", "r2", "]"}], ",", 
         RowBox[{"je", "[", 
          RowBox[{"r3", ",", "r4", ",", "z1", ",", "z2"}], "]"}]}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"r1", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"r2", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"r3", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"r4", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"z1", ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"z2", ",", "3"}], "}"}]}], "]"}], ",", "5"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"predictabilitySUCC", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"predictabilityTest", "[", 
        RowBox[{"cmEvolveList", "[", 
         RowBox[{"#", " ", ",", 
          RowBox[{"counterMachine", "[", "2", "]"}], ",", "30"}], "]"}], 
        "]"}], "\[Equal]", "\"\<Unpredictable\>\""}], ",", "#", ",", 
      "Nothing"}], "]"}], "&"}], "/@", 
   "allPossibleSuccMachines"}]}]}], "Input",
 Evaluatable->False,
 TaggingRules->{},
 CellChangeTimes->{{3.835022429761304*^9, 3.8350224452859497`*^9}, {
  3.835089326456983*^9, 3.835089333104699*^9}, {3.835103635018882*^9, 
  3.83510363510294*^9}, {3.835104058153754*^9, 3.835104064944974*^9}, {
  3.83527839344523*^9, 3.835278398795186*^9}, {3.835350171731596*^9, 
  3.835350178904911*^9}},
 CellID->873866425],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.835022491017417*^9, 3.8350886777842913`*^9, 
  3.835088902980322*^9, 3.8350894247762403`*^9, 3.83510363318128*^9, 
  3.835103969536262*^9, 3.835104398232779*^9, 3.8351045677908783`*^9, 
  3.835105033509549*^9, 3.835174332970728*^9, 3.835174578673183*^9, 
  3.835174884165695*^9},
 CellLabel->"Out[96]=",
 CellID->473320734]
}, Open  ]],

Cell["\<\
Find the Elgot-Robinson model instruction sets that create unpredictable \
counter machines:\
\>", "CodeText",
 TaggingRules->{},
 CellChangeTimes->{{3.835278032621859*^9, 3.835278159479192*^9}, {
   3.835278260362912*^9, 3.835278262836182*^9}, {3.835278489447117*^9, 
   3.8352784954852123`*^9}, 3.8353481206310797`*^9, {3.835362404946444*^9, 
   3.835362408742021*^9}, 3.835366828049347*^9},
 CellID->1595641802],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"allPossibleErMachines", "=", " ", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"inc", "[", "r1", "]"}], ",", 
         RowBox[{"cpy", "[", 
          RowBox[{"r2", ",", "r3"}], "]"}], ",", 
         RowBox[{"je", "[", 
          RowBox[{"r4", ",", "r5", ",", "z1", ",", "z2"}], "]"}]}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"r1", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"r2", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"r3", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"r4", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"r5", ",", " ", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"z1", ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"z2", ",", "3"}], "}"}]}], "]"}], ",", "6"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"predictabilityER", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"predictabilityTest", "[", 
        RowBox[{"cmEvolveList", "[", 
         RowBox[{"#", ",", 
          RowBox[{"counterMachine", "[", "2", "]"}], ",", "30"}], "]"}], 
        "]"}], "\[Equal]", "\"\<Unpredictable\>\""}], ",", "#", ",", 
      "Nothing"}], "]"}], "&"}], "/@", "allPossibleErMachines"}]}]}], "Input",\

 Evaluatable->False,
 TaggingRules->{},
 CellChangeTimes->{{3.835022360681279*^9, 3.835022375041656*^9}, {
  3.835089043544559*^9, 3.8350890739662457`*^9}, {3.8350891196752377`*^9, 
  3.835089150432592*^9}, {3.8351033249451714`*^9, 3.835103325078182*^9}, {
  3.835278184701878*^9, 3.835278225260993*^9}, {3.8352783015312157`*^9, 
  3.835278319064364*^9}, {3.8352784284016457`*^9, 3.835278452643813*^9}, {
  3.835350199256675*^9, 3.835350205068157*^9}},
 CellID->175982478],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.83527837261064*^9},
 CellLabel->"Out[150]=",
 CellID->652525827]
}, Open  ]],

Cell["\<\
Tests for the Minsky machine, the Program machine, the Successor machine, and \
the Elgot-Robinson model didn't return any instruction sets marked \
unpredictable. However, the Shepherdson-Sturgis machine tests returned 22 \
possible unpredictable instruction sets. With this list, the first step is to \
eliminate any instruction sets that return duplicate counter machines.\
\>", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.835278499469069*^9, 3.8352786473883266`*^9}, {
  3.835278707249408*^9, 3.835278783422695*^9}, {3.835279038220558*^9, 
  3.835279045859968*^9}, {3.835364265649412*^9, 3.835364309041893*^9}},
 CellID->2095392690],

Cell["\<\
Delete duplicate counter machines from the list of instruction sets:\
\>", "CodeText",
 TaggingRules->{},
 CellChangeTimes->{{3.835279556865196*^9, 3.835279584015936*^9}, 
   3.835348128685329*^9, {3.835362412696001*^9, 3.835362420480698*^9}},
 CellID->131251209],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"predictabilitySS", "=", 
   InterpretationBox[
    DynamicModuleBox[{Typeset`open = False}, 
     TemplateBox[{"List", "ListIcon", 
       GridBox[{{
          RowBox[{
            TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["List", "IconizedItem"]}]}, {
          RowBox[{
            TagBox["\"Dimensions: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            
            TagBox[
             RowBox[{"{", 
               RowBox[{"22", ",", "6"}], "}"}], "IconizedItem"]}]}, {
          RowBox[{
            TagBox["\"Byte count: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            
            TagBox["12184", "IconizedItem"]}]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
       Dynamic[Typeset`open]},
      "IconizedObject"]],
    {{
      $CellContext`inc[1], 
      $CellContext`dec[2], 
      $CellContext`clr[2], 
      $CellContext`cpy[1, 2], 
      $CellContext`jnz[1, 1, 1], 
      $CellContext`j[6]}, {
      $CellContext`inc[1], 
      $CellContext`dec[2], 
      $CellContext`clr[2], 
      $CellContext`cpy[1, 2], 
      $CellContext`jnz[1, 1, 4], 
      $CellContext`j[3]}, {
      $CellContext`inc[1], 
      $CellContext`dec[2], 
      $CellContext`clr[2], 
      $CellContext`cpy[1, 2], 
      $CellContext`jnz[1, 1, 5], 
      $CellContext`j[1]}, {
      $CellContext`inc[1], 
      $CellContext`dec[2], 
      $CellContext`clr[2], 
      $CellContext`cpy[1, 2], 
      $CellContext`jnz[1, 1, 5], 
      $CellContext`j[2]}, {
      $CellContext`inc[1], 
      $CellContext`dec[2], 
      $CellContext`clr[2], 
      $CellContext`cpy[1, 2], 
      $CellContext`jnz[1, 1, 5], 
      $CellContext`j[3]}, {
      $CellContext`inc[1], 
      $CellContext`dec[2], 
      $CellContext`clr[2], 
      $CellContext`cpy[1, 2], 
      $CellContext`jnz[1, 1, 6], 
      $CellContext`j[1]}, {
      $CellContext`inc[1], 
      $CellContext`dec[2], 
      $CellContext`clr[2], 
      $CellContext`cpy[1, 2], 
      $CellContext`jnz[1, 1, 6], 
      $CellContext`j[2]}, {
      $CellContext`inc[1], 
      $CellContext`dec[2], 
      $CellContext`clr[2], 
      $CellContext`cpy[1, 2], 
      $CellContext`jnz[1, 1, 6], 
      $CellContext`j[5]}, {
      $CellContext`inc[1], 
      $CellContext`dec[2], 
      $CellContext`clr[2], 
      $CellContext`cpy[1, 2], 
      $CellContext`jnz[1, 1, 6], 
      $CellContext`j[6]}, {
      $CellContext`inc[1], 
      $CellContext`dec[2], 
      $CellContext`clr[2], 
      $CellContext`cpy[1, 2], 
      $CellContext`jnz[1, 6, 1], 
      $CellContext`j[1]}, {
      $CellContext`inc[1], 
      $CellContext`dec[2], 
      $CellContext`clr[2], 
      $CellContext`cpy[1, 2], 
      $CellContext`jnz[1, 6, 2], 
      $CellContext`j[1]}, {
      $CellContext`inc[1], 
      $CellContext`dec[2], 
      $CellContext`clr[2], 
      $CellContext`cpy[1, 2], 
      $CellContext`jnz[1, 6, 3], 
      $CellContext`j[1]}, {
      $CellContext`inc[1], 
      $CellContext`dec[2], 
      $CellContext`clr[2], 
      $CellContext`cpy[1, 2], 
      $CellContext`jnz[1, 6, 4], 
      $CellContext`j[1]}, {
      $CellContext`inc[2], 
      $CellContext`dec[1], 
      $CellContext`clr[1], 
      $CellContext`cpy[2, 1], 
      $CellContext`jnz[2, 1, 3], 
      $CellContext`j[4]}, {
      $CellContext`inc[2], 
      $CellContext`dec[1], 
      $CellContext`clr[1], 
      $CellContext`cpy[2, 1], 
      $CellContext`jnz[2, 1, 3], 
      $CellContext`j[6]}, {
      $CellContext`inc[2], 
      $CellContext`dec[1], 
      $CellContext`clr[1], 
      $CellContext`cpy[2, 1], 
      $CellContext`jnz[2, 1, 6], 
      $CellContext`j[6]}, {
      $CellContext`inc[2], 
      $CellContext`dec[1], 
      $CellContext`clr[1], 
      $CellContext`cpy[2, 1], 
      $CellContext`jnz[2, 6, 1], 
      $CellContext`j[1]}, {
      $CellContext`inc[2], 
      $CellContext`dec[1], 
      $CellContext`clr[1], 
      $CellContext`cpy[2, 1], 
      $CellContext`jnz[2, 6, 2], 
      $CellContext`j[1]}, {
      $CellContext`inc[2], 
      $CellContext`dec[1], 
      $CellContext`clr[1], 
      $CellContext`cpy[2, 1], 
      $CellContext`jnz[2, 6, 3], 
      $CellContext`j[1]}, {
      $CellContext`inc[2], 
      $CellContext`dec[1], 
      $CellContext`clr[1], 
      $CellContext`cpy[2, 1], 
      $CellContext`jnz[2, 6, 4], 
      $CellContext`j[1]}, {
      $CellContext`inc[2], 
      $CellContext`dec[1], 
      $CellContext`clr[1], 
      $CellContext`cpy[2, 1], 
      $CellContext`jnz[2, 6, 5], 
      $CellContext`j[1]}, {
      $CellContext`inc[2], 
      $CellContext`dec[1], 
      $CellContext`clr[1], 
      $CellContext`cpy[2, 1], 
      $CellContext`jnz[2, 6, 6], 
      $CellContext`j[1]}},
    SelectWithContents->True,
    Selectable->False]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ssPossibilities", "=", 
  RowBox[{"DeleteDuplicates", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"cmEvolveList", "[", 
      RowBox[{"#", ",", 
       RowBox[{"counterMachine", "[", "2", "]"}], ",", "15"}], "]"}], "&"}], "/@",
     "predictabilitySS"}], "]"}]}]}], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.835278823649571*^9, 3.83527888780621*^9}, {
   3.835279051448628*^9, 3.835279074946775*^9}, {3.8352793184631863`*^9, 
   3.83527931855647*^9}, 3.835280810689445*^9, {3.835350259210004*^9, 
   3.835350259627675*^9}},
 CellLabel->"In[82]:=",
 CellID->1030958849],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "1"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "0"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "0"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "2"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "2"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "2"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "1"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "0"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "3"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "3"}], "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"6", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "1"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "0"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "0"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "2"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"6", ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "2"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "2"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "2"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "1"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "0"}], "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "2"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "2"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "2"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "2"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "3"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "3"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "3"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "3"}], "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"6", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "2"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "2"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "2"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"6", ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "2"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "2"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "3"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "3"}], "}"}]}], "}"}]}], "}"}]}], "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.835278844347085*^9, 3.835278862345509*^9}, {
   3.835279054509018*^9, 3.835279075349513*^9}, 3.835279320093626*^9, 
   3.835280814347155*^9, 3.835350269323604*^9, 3.83536685885983*^9},
 CellLabel->"Out[83]=",
 CellID->801405857]
}, Open  ]],

Cell["\<\
Visualizing these counter machines would make it easier to understand whether \
or not these counter machines are truly unpredictable.\
\>", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.835279089766341*^9, 3.8352791921121273`*^9}, {
  3.835348200531521*^9, 3.835348226726243*^9}},
 CellID->1666181133],

Cell["Use Grid and ArrayPlot to model the counter machines:", "CodeText",
 TaggingRules->{},
 CellChangeTimes->{{3.835279195144055*^9, 3.835279238312199*^9}, {
  3.835348148612858*^9, 3.835348151052059*^9}, {3.83535065110284*^9, 
  3.835350652701391*^9}, {3.835362423927994*^9, 3.835362431557493*^9}},
 CellID->1891360494],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"GraphicsRow", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{
        RowBox[{"Grid", "[", 
         RowBox[{"#", ",", " ", 
          RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}], ",", 
        RowBox[{"RGBColor", "[", 
         RowBox[{"0.8", ",", "0.36", ",", "0.41"}], "]"}], ",", "17"}], "]"}],
       ",", 
      RowBox[{"ArrayPlot", "[", 
       RowBox[{
        RowBox[{"Partition", "[", 
         RowBox[{
          RowBox[{"Flatten", "[", "#", "]"}], ",", "3"}], "]"}], ",", 
        RowBox[{"Mesh", "\[Rule]", "True"}]}], "]"}]}], "}"}], "]"}], "&"}], "/@",
   "ssPossibilities"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.8352792522100973`*^9, 3.8352792996245537`*^9}, {
   3.835279341288465*^9, 3.835279420210803*^9}, 3.835350267617072*^9, {
   3.83536684389254*^9, 3.8353668770974083`*^9}, {3.835366922441861*^9, 
   3.8353669391371317`*^9}, {3.8353669884080677`*^9, 3.8353669887489843`*^9}},
 
 CellLabel->"In[88]:=",
 CellID->1041970308],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsvc2PLNl17dewYcBD/wueemZoYvTMQ0+foVlz8ASr2QaoFqn3QKOrBxrU
1UAQm6I+UPIVVA0+aEI3YOIVDHSNBE00DKqofgiiW80SDYGdJUBADQQDNQxn
VX7UV0bk2evsOOvsOOuHREPivTd3nIyzYp9fZGTEf/9bv/vv3v+v3nnnnf/w
367/8+/+/f/xP//e7/37j/7X/279//zmh//hf//2h7/9v/0vH/7H3/72b//e
//Rb//X6f/zl+u/+j//NO+/c/9+DEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCiCXSvfeBXtzX//uX
/4k9C8Qy+S/f+5g+vRt/rXcBexaIZbJuHPTprRd7Fohl8s3//f/Q57Ze//aL
r9gTQbTFl28+uf7zv1rHv+Trn//6s3XdX739ceG6Fb7Wn8Ov/6//zJ4FYpl8
/cf/51d/+KeUWV3+qFLha/3hr3cBexaIZbJuHOugUWY15ahS22t9iFt//uxZ
IJbJv1z+zXp2rZfKlFlNDxf9tdaT9efw//3j1+yJINqiY3xL+2+/+Gpddz3t
C9etEMrnLxrhv3zvY8q3tJrVG1ifv2iBzbfk5etqVm9gff6iBb55+Ja8/Le0
mtUbWJ+/aBwpORfJi5gPKTkXyYuYDyk5F8mLmA8pORcpuaAgJecieRHzISXn
InkR8yEl5yJ5EfMhJeciJRcUpORcJC9iPqTkXCQvYj6k5FwkL2I+pORcpOSC
gpSci+RFzIeUnIvkRcyHlJyL5EXMh5Sci5RcUIih5Kur1cX59dn59cXNnNsF
sbq837Czy1WHbFv+5/+pKEjOnipPDCWvOd1DVsDzP3/2fG+OnJ1VmDBKXnPA
M9Kd//mzJ3tz5OyswoRR8oWmO//zZ0/25oD3VFVkKeHqsn/vg+7syvrvTEp+
d3H6+KDAl7Vubs9O+/2fnpxeX1zdWbdmioT3787HN+84LkreMSBGgFU6XOqz
lBBN92CZ1dR0p5XICLiLkvcMGkw3tzRArhKiATfN6gW3bxclp/RuYvtWuhPJ
VUI03aZZveB0uyg5pXcT27fSnU+GEl5dox5qUfJdlfdOX56I2xxzDrxOVyvr
Fh0i8f03J+JOtn963dmKSMmxITdVFyZDCfF0D4ZZzUt3eomMgEvJsSE3WBog
TwnxgFtm9ZLbt5QcGzKlLrc0QJ4S4um2zOolp1tKjg2ZUpdb2hdQCVdX+3k+
r5Jvo/c6yI9Hg/1FKXfdPqfnt9Zteon5/W/P7v+oN169IyXHhtxUXRhQCfPS
PaTPalq6kRJAwKXk2JAbLA2AK2FewA2zetHtW0qODZlSl1saAFfCvHQbZvWi
0y0lx4ZMqcst7QughHfd+bMzVLMq+fbKk5cp210w8yp9u7NnVjV+AfD+239i
/DSk5NiQm6oLAyhhfrqH9FlNSjdWAgi4lBwbcoOlATAlzA+4YVYvun1LybEh
U+pySwNgSpifbsOsXnS6peTYkCl1uaV9sSnh/fm3/Y9Hdr/jKKDkJ5fPfySy
PUt2MNqjgTWAvL+UvBgNHnAwbErolO7BquSl0w2WkJKXoc3SAMCNmFwCblby
hbZvKTk2ZEpdbmkAsxI6pdus5AtNt5QcGzKlLre0LxYl3F8u8kF/to7hzeqE
pOTbs3MjP0sZvZwmGej9peTFaPCAgwH96jM33UOmks+dbrSElLwMbZYGMCqh
W8BzlXwp7VtKjg2ZUpdbGsCohG7pzlXypaRbSo4NmVKXW9oXs5KfnN9uZztN
yY+daps6jZYC9v5S8mI0eMDBMCu5R7qHPCWfO91wCSl5GdosDYAouUfAM5V8
Me1bSo4NmVKXWxoAUXKPdGcq+WLSLSXHhkypyy3ti0kJ756depKSH0r9y8t4
jiAlx4bcVF0Y2+OKnNI9LFvJLQGXkmNDbrA0gFUJvQK+ZCW3pFtKjg2ZUpdb
GsCqhF7pXrKSW9ItJceGTKnLLe1LhhKWUPKDUdrcPnE8X1k2Ab+/lLwYDR5w
MDKUsISSU9INl5CSl6HN0gB5SlhCyZfdvqXk2JApdbmlAfKUsISSLzvdUnJs
yJS63NK+VK7k2wA+L1Fn6sfuPzmNlBwbclN1YSpXckq68RL2gEvJsSE3WBqg
fiVfdvuWkmNDptTllgaoX8mXnW4pOTZkSl1uaV+qVvLdQw2uu2f/c6Wph67J
kZJjQ26qLkzVSk5Kd0YJc8Cl5NiQGywNULuSL719S8mxIVPqcksD1K7kS0+3
lBwbMqUut7QvtSr5ze3F+dhzHGpN/f5c3P1NL2/TbikpJceG3FRdmFqVnJnu
rBLGgEvJsSE3WBqgYiVvon1LybEhU+pySwNUrORNpFtKjg2ZUpdb2pdKlXx3
Cm7q4YOjqXS6gwT2/pNb/hopOTbkpurCVKrk1HTnlrAEXEqODbnB0gD1Knkb
7VtKjg2ZUpdbGqBeJW8j3VJybMiUutzSvlSr5LvHLJ6+uDBmqPWmjg+bfXW9
+Uze++BaSj4bDR5wMKpVcmK6s0oYAy4lx4bcYGmAmpW8hfYtJceGTKnLLQ1Q
s5K3kG4pOTZkSl1uaV8qVfIH7raXmpyuXlxnsj3Z9ep/T/nTFMD3f/xA0u/r
KCXHhtxUXZhKlfwBWrrxEuaAS8mxITdYGqBeJX9g8e1bSo4NmVKXWxqgXiV/
YPHplpJjQ6bU5Zb2pWYlH3a/HHl1ymvqVNux02gpQO8PHW2k5NiQm6oLU7OS
D7R0oyXsAZeSY0NusDRA5Uo+LL19S8mxIVPqcksDVK7kw9LTLSXHhkypyy3t
S+VKPvbLkV30xs7RZV3XCr7/5rShnks+Pw0ecDAqV3JWusES9oBLybEhN1ga
oH4lX3b7lpJjQ6bU5ZYGqF/Jl51uKTk2ZEpdbmlfKlfy8Shd7X/Psuq2Abzr
tpHM/hINef9j9504jJQcG3JTdWEqV3JeupESQMCl5NiQGywNUL+SL7t9S8mx
IVPqcksD1K/ky063lBwbMqUut7QvMZT8YIpX+wy+eB26OmX/BIT0E3Sm99+n
3vhpSMmxITdVFyaGklPSbS0BBVxKjg25wdIAYZR8oe1bSo4NmVKXWxogjJIv
NN1ScmzIlLrc0r7EUPLxpxDenp0+ZvPk9Ppi5O4N2KI9/f2l5AVp8ICDEUPJ
aem2lJCSl6LN0gBhlHyh7VtKjg2ZUpdbGiCMki803VJybMiUutzSvuQrIYCf
kpu4v9zl9VMbvJCSF6PBAw5GvhJiOCm5iXnTPUjJS9FmaYB8JcTwU3IT1bVv
KTk2ZEpdbmmAfCXE8FNyE9WlW0qODZlSl1valxhK7vLr0YdrXapK/SAlR4fc
VF2YGEoeId2DlLwUbZYGCKPkEQIuJS+D0p1IGCVfaLql5NiQKXW5pX1pSMnv
3yrvccaTjDwS4ghScmzITdWFaUjJZ073AAVcSo4NucHSAG0peX3tW0qODZlS
l1saoC0lry/dUnJsyJS63NK+1K7k+6cQnl3erm4yrpB5+HEN9MPYo9ytN+zi
fPOrFuuJPik5NuSm6sLUruQR0j1kBFxKjg25wdIAAZQ8QsDhdEvJsSFT6nJL
AwRQ8kWnW0qODZlSl1val+qVfHuCa/uCY7u67H1+8/KK3b0psBOGUnJsyE3V
haleyatP95AVcCk5NuQGSwNEUPLqA56Rbik5NmRKXW5pgAhKvuR0S8mxIVPq
ckv7Ur+Sb++smHH/53nZpn69hZe39gtvpOTYkJuqC1O/ktee7iEr4FJybMgN
lgYIoeS1Bzwj3VJybMiUutzSACGUfMHplpJjQ6bU5Zb2JYKSLxkpOTbkpurC
RFDyJSMlx4bcYGmAIEq+WKTk2JApdbmlAYIo+WKRkmNDptTllvZFSs5FSo4N
uam6MFJyLlJybMgNlgaQknORkmNDptTllgaQknORkmNDptTllvZFSs5FSo4N
uam6MFJyLlJybMgNlgaQknORkmNDptTllgaQknORkmNDptTllvZFSs5FSo4N
uam6MFJyLlJybMgNlgaQknORkmNDptTllgaQknORkmNDptTllvZFSs5FSo4N
uam6MFJyLlJybMgNlgaQknORkmNDptTllgaQknORkmNDptTllvZFSs5FSo4N
uam6MFJyLlJybMgNlgaQknORkmNDptTllgaQknORkmNDptTllvZFSs5FSo4N
uam6MFJyLlJybMgNlgaQknORkmNDptTllgaQknORkmNDptTllvZFSs5FSo4N
uam6MFJyLlJybMgNlgaQknORkmNDptTllgaQknORkmNDptTllvZFSs5FSo4N
uam6MFJyLlJybMgNlgaQknORkmNDptTllgaQknORkmNDptTllvZlPeu+Ov3B
+r96sV5ScmDITdWFWa+cv/jwI8qs/tm3+Mmiv9YfvpQcGHKDpQE2i2dKtJXu
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
21Ly+tq3lBwbcmvLBoy2lLy+dEvJsSE3uGzwpXYl3z/l8OzydnWTcYXMw+9N
PO/Y/MjdesMuznvj7203SMkD9dZwqa9dySOke8gIuJQ8Vm+NFfAASh4h4HC6
peTYkFtbNmAEUPJFp1tKjg25wWWDL9Ur+fYE1/YFx3Z12fv85uUVu3tTYCcM
peSBemu41Fev5NWne8gKuJQ8Vm+NFfAISl59wDPSLSXHhtzasgEjgpIvOd1S
cmzIDS4bfKlfybd3bvR/MLET29Svt/Dy1n7hjZQ8UG8Nl/r6lbz2dA9ZAZeS
x+qtsQIeQslrD3hGuqXk2JBbWzZghFDyBadbSo4NucFlgy8RlHzJSMkD9dZw
qY+g5EtGSh6rt8YKeBAlXyxScmzIrS0bMIIo+WKRkmNDbnDZ4IuUnIuUPFBv
DZd6KTkXKXms3hor4FJyLlJybMitLRswpORcpOTYkBtcNvgiJeciJQ/UW8Ol
XkrORUoeq7fGCriUnIuUHBtya8sGDCk5Fyk5NuQGlw2+SMm5SMkD9dZwqZeS
c5GSx+qtsQIuJeciJceG3NqyAUNKzkVKjg25wWWDL1JyLlLyQL01XOql5Fyk
5LF6a6yAS8m5SMmxIbe2bMCQknORkmNDbnDZ4IuUnIuUPFBvDZd6KTkXKXms
3hor4FJyLlJybMitLRswpORcpOTYkBtcNvgiJeciJQ/UW8OlXkrORUoeq7fG
CriUnIuUHBtya8sGDCk5Fyk5NuQGlw2+SMm5SMkD9dZwqZeSc5GSx+qtsQIu
JeciJceG3NqyAUNKzkVKjg25wWWDL+tZ949/+Cdf/cEPS75+8fGbdd0vvvtx
4boVvqTkgXpruNSvV85f/O5HlFn9xXe+Tw8X/bX+8KXkgXprrIBvFs/lZ/Xf
/9bvrF/0cNFf64WTlBwYcmvLBoyNEl7/6V8WntXrxk05qtT2+uUf/4WUHBhy
g8sGX+7Td/qD9X/1Yr2k5FF6a7jU3yv5hx9RZvXPvsVPFv21/vCl5IF6a6yA
b5ScEm2lu9stnHL2oJS8hWUDxkbJN99eFU43PVk1vL5880knJbcPucFlgy+d
Llynkv/5S8mLES71unCdiy5cj9VbYwVcF65z0YXr2JBbWzZg6MJ1LrpwHRty
g8sGX6TkXKTkgXpruNRLyblIyWP11lgBl5JzkZJjQ25t2YAhJeciJceG3OCy
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
YwUcUUKPgEdQcvMBBEi3lBwbcmvLBgxECT3SHUHJS6RbSo4NucFlgy82JXx9
2cnMSp4cJc9F+/ZM42jRw7Wk5IvvreFSb1NCp3QPybOaku6hYMCl5LF6a6yA
m5XQKeDps/pgZLD05SElP9C+c7Y8Z8itLRswzErolO70Wb3sdEvJsSE3uGzw
xaKE25n/7ATXzEr+7DqchG0jKvnR20cfREoeqLeGS71FCd3SPSTPakq6h4IB
l5LH6q2xAm5UQreAp8/qgwGvc9EOpFtKjg25tWUDhlEJ3dKdPquXnW4pOTbk
BpcNvqQr4eH186xKvntowv2tKo5QgZJD1+RIyQP11nCpz1w8z6vkpHQPBQMu
JY/VW2MF3KSEjgFPndUjAa900W5Pt5QcG3JrywYMkxI6pjt1Vi893VJybMgN
Lht8SVXCsbNMcyn5ze3FueXJRzUo+f7TuL8P5G3aByIlD9Rbw6U+dfHsmu7h
+KxmpnsoGHApeazeGivg+U8Qnk3JpwJe66LdnG4pOTbk1pYNGAYldE13wqxu
It1ScmzIDS4bfLF8n3Uo2jMp+e4UXPJJrRlu7zZ6VJk84Wbccil5oN4aLvVJ
Suid7uHorKameygYcCl5rN4aK+DG77PcAn58Vk9mJCt9IMkHEEu6peTYkFtb
NmCkKqF3uo/P6jbSLSXHhtzgssGXFCXc3UQx4ZW2Zk5R8t2TB08Trmsdarjj
+j2rq+uT7UdxLSVfXG8Nl/oUJXRP95Cg5MR0DwUDLiWP1VtjBTxRCd0DnqLk
EwEvc0/m56QdQIzplpJjQ25t2YCRqITu6U5R8hbSLSXHhtzgssGXSpV8U9dw
ls910T5x4nHqTx+3If2+jlLyQL01XOorVfJNXVa6h3IBl5LH6q2xAl6vkm/q
jgUcTF8OKQcQc7ql5NiQW1s2YNSr5Ju6S0+3lBwbcoPLBl9ylbDIHdcTTqn5
LtqnTuWNngaEjjZS8kC9NVzqc5WwyB3Xi6d7KBZwKXms3hor4PlKWOaO669S
BqUvi4QDiD3dUnJsyK0tGzDylbDMHdeXmm4pOTbkBpcNvlSu5KwnF+8OHWPn
AA8dcDYfhZ5LvtzeGi71lSs5K91DqYBLyWP11lgBr1/JxwKOpC+L5Mck6bnk
M9PgsgGjfiVfdrql5NiQG1w2+FK5kidHaa7v0e6H1m0PIHfd9pBy8Cxfsl88
Q0oeqLeGS33lSs5L91Am4FLyWL01VsDrV/LxgJvTl8fxAwiQbik5NuTWlg0Y
9Sv5stMtJceG3OCywZcYSn48xcdSuX8CQvoJutX+GPLidXiw29QbrUFKHqi3
hkt9DCWnpHsoEXApeazeGivgYZT8YMBN6cMC/kjyot2Sbik5NuTWlg0YYZR8
oemWkmNDbnDZ4EsMJc//Hg1M/c3t2enjseXk9Ppi9O4QUvLF99ZwqY+h5LR0
D3MHXEoeq7fGCngYJR9/SHFq+qpctEvJsSG3tmzACKPkC023lBwbcoPLBl/y
lRBgBiVP4f5ymrSHLiFIyRffW8OlPl8JMbyVPIV50z1IyRvorbEC7qDkEH5K
bqK69i0lx4bc2rIBw0HJIfyU3ER16ZaSY0NucNngSwwld/n5ycO1NFWlfpCS
h+qt4VIfQ8kjpHuQkjfQW2MFPIySRwi4lLwMDS4bMMIo+ULTLSXHhtzgssGX
hpT8/q18n4f4jOQnOj1DSh6ot4ZLfUNKPnO6ByjgUvJYvTVWwNtS8vrat5Qc
G3JrywaMtpS8vnRLybEhN7hs8KV2Jd8/5fDs8nZ1k3GFzMPvTTzv2PzI3XrD
Ls43v5qxnuiTkgfqreFSX7uSR0j3kBFwKXms3hor4AGUPELA4XRLybEht7Zs
wAig5ItOt5QcG3KDywZfqlfy7Qmu7QuO7eqy9/nNyyt296bAThhKyQP11nCp
r17Jq0/3kBVwKXms3hor4BGUvPqAZ6RbSo4NubVlA0YEJV9yuqXk2JAbXDb4
Ur+Sb+/c6P9gYid2t7VcH1Vu7RfeSMkD9dZwqa9fyWtP95AVcCl5rN4aK+Ah
lLz2gGekW0qODbm1ZQNGCCVfcLql5NiQG1w2+BJByZeMlDxQbw2X+ghKvmSk
5LF6a6yAB1HyxSIlx4bc2rIBI4iSLxYpOTbkBpcNvkjJuUjJA/XWcKmXknOR
ksfqrbECLiXnIiXHhtzasgFDSs5FSo4NucFlgy9Sci5S8kC9NVzqpeRcpOSx
emusgEvJuUjJsSG3tmzAkJJzkZJjQ25w2eCLlJyLlDxQbw2Xeik5Fyl5rN4a
K+BSci5ScmzIrS0bMKTkXKTk2JAbXDb4IiXnIiUP1FvDpV5KzkVKHqu3xgq4
lJyLlBwbcmvLBgwpORcpOTbkBpcNvkjJuUjJA/XWcKmXknORksfqrbECLiXn
IiXHhtzasgFDSs5FSo4NucFlgy9Sci5S8kC9NVzqpeRcpOSxemusgEvJuUjJ
sSG3tmzAkJJzkZJjQ25w2eCLlJyLlDxQbw2Xeik5Fyl5rN4aK+BSci5ScmzI
rS0bMKTkXKTk2JAbXDb4sp51X53+YP1fvVgvKXmU3hou9euV8xcffkSZ1T/7
Fj9Z9Nf6w5eSB+qtsQK+WTxToq10d7uFU84elJK3sGzA2CjhLz5+Uz7d9GTV
8PryzSedlNw+5AaXDb6sZ90vf3i2jn/J16/e/ngz5wvXrfDVScnj9NZwqb//
Puu7J5RZvV5L0MNFf60/fCl5oN4aK+AbJS8/q3/+7e+tX/Rw0V/rhVMnJbcP
ubVlA8Y3D2301z/5aeFZvTkJQA8X/bWRFCm5dcgNLht8yVdCAF24vsdFyUUx
vPZ7GXThOheXC9dFSbx2fQF04ToXlwvXRUm8dn0BvtGF61TyP3/2ZG8Ox71P
RErOxUXJ32HwKfV0N6uu134vg5Sci4uS/w8MPqWe7iaW9tr1BZCSc3FRckrv
JrZv7rLBa9cXQErOxUXJKb2b2L7Vu/ORknORkmO9lVXXa7+XQUrORUqO9VZi
aa9dXwApORcpOdZDKXW7aO1bSs5FSo41UErdPlrvnkBKzkVKjvVWVl2v/V4G
KTkXKTnWW4mlvXZ9AaTkXKTkWA+l1O2itW8pORcpOdZAKXX7aL17ghhKvrpa
XZxfn51fX9zMuV0Qq8v7DTu7XHXItknJsd7Kqpuzp8oTQ8lrTveQFXApOdZb
iaVzdlZhwih5zQHPSLeUHOuhlLpdtPYdRskXmm4pOdZAKXX7aL17AtviuTuf
enDA2VXi25iU/O7iNKnE6rK3bIOZsfd/+pnYq0vJsd7Kqpuzp8pjWzw7pXuw
zOpa0j1RIiPgUnKstxJL5+yswpgXz04BN83qWgI+Q7ql5FgPpdTtorVvsxI6
pds0qxecbik51kApdftovXsCkxI+C2AhJb+63r7/6eSJuN1fmyv14++/ORF3
sv0Qrjvb+0rJsd7Kqpuzp8qDL54LKXkl6Z4skRFwKTnWW4mlc3ZWYaxK6BVw
y6yuJOCzpFtKjvVQSt0uWvu2KqFXui2zesnplpJjDZRSt4/WuyewKOHN6sQn
WQYl35z+eu90tZr4O1f70M2S+rT3vz27/wu98eodKTnWW1l1c/ZUeSyLZ7d0
D+mzuoZ0J5cAAi4lx3orsXTOziqMUQndAm6Y1TUEfLZ0S8mxHkqp20Vr30Yl
dEu3YVYvOt1ScqyBUur20Xr3BBYl3J6Msn4R/BqDkm+vPDm/Hfnzu+68R7/L
SyH9/bdnKY0bICXHeiurbs6eKg/wfVZ+uof0Wc1Ot6kEEHApOdZbiaVzdlZh
jEroFnDDrGYHfNZ0S8mxHkqp20Vr30YldEu3YVYvOt1ScqyBUur20Xr3BAYl
TDknloZZyU8u7w5sz9X1yf5andPePfXG95eSl+ytrLo5e6o8zt9nJWNTckq6
7SWk5MV6K7F0zs4qjE0J/QJuVvKFtm8pOdZDKXW7aO3bpoR+6TYr+ULTLSXH
Giilbh+td09gUMKJABrxUPL9z1g+6M/Wf+p52S32/lLykr2VVTdnT5XHZ/Fs
J1vJ5043UkJKXqy3Ekvn7KzC2JTQL+AeR5UltG8pOdZDKXW7aO3bpoR+6fZQ
8iWkW0qONVBK3T5a754gXQl3P8e4uusun52hOru8NZ6ac1Pyk/Nd6XlSb3l/
KXnJ3sqqm7OnypO+eHZM9+Cl5DOmGykhJS/WW4mlc3ZWYUxK6BhwNyUP3r6l
5FgPpdTtorVvkxI6pttNyYOnW0qONVBK3T5a754gWQl30/7w69T0UEKXC9fv
nh1q/Bft1vffpt54olJKjvVWVt2cPVWe5MWzZ7oHjwvX5043UAIIuJQc663E
0jk7qzAWJfQMuMu1Nwto31JyrIdS6nbR2rdFCT3T7XLh+gLSLSXHGiilbh+t
d0+QrITPrhXZn3m7e3LDw/Q7S6QreXKUZlm0m95fSl6yt7Lq5uyp8iQvnj3T
PSTP6mrSnVRCSl6stxJL5+yswkCPK3IIePqsribgUvJa2reUPBGLEnqmO31W
LzvdUnKsgVLq9tF69wS277MOP0dgf45u9NaLL0hX8s0FOQlZ5qf+6P0nD/8j
KTnUW1l1c/ZUeVIXz67pHpJndTXpTithD7iUHOutxNI5O6sw9nsj+wTc+nOY
CgI+S7ql5FgPpdTtorVvgxK6pjt9Vi873VJyrIFS6vbRevcE+Up4z/Z+j6nn
4lKV3PC2FaR+d67S9PRDKTnWW1l1c/ZUefKV8B5juofEWV1RuhNLmAMuJcd6
K7F0zs4qTL4SbjEGPHVWVxTwWdItJcd6KKVuF6195yvhFmO6U2f10tMtJcca
KKVuH613T+Cj5PsrZ9JCl6DkN7cX55ZHJ9SQ+ienK5PvqiElx3orq27OniqP
j5Ib0z0cn9W1pTu5hDHgUnKstxJL5+yswrgpuTHgCbO6toDPkm4pOdZDKXW7
aO3bTcmN6U6Y1U2kW0qONVBK3T5a757AScltoTuu5LtTcMkntepI/WDecik5
1ltZdXP2VHmclNwcriOzurp0W0pYNl5KjvVWYumcnVUYPyW35ev4rK4u4LOk
W0qO9VBK3S5a+/ZTclu4js/qNtItJccaKKVuH613T1Ctku9uWHGadr1NHal/
ej8NKfmcvZVVN2dPladaJa8s3ckljAGXkmO9lVg6Z2cVpmYlryzgs6RbSo71
UErdLlr7rlnJW0i3lBxroJS6fbTePUGiEm7v5DB6x0LbLzUSf0t+t73U5HR1
/DqTGlL/+HfS7+soJcd6K6tuzp4qT6IS+qZ7SJvVNaU7sYQ54FJyrLcSS+fs
rMKYb8TkFPDEWV1TwGdJt5Qc66GUul209p2uhL7pTpzVi0+3lBxroJS6fbTe
PUGqEk4H0BDPe6x3XE84mFSQ+u1VMakfwgYpOdZbWXVz9lR5jHdc90n3YDzR
V0G600rYAy4lx3orsXTOziqM/Y7rPgG33nG9goDPkm4pOdZDKXW7aO3bfsd1
n3RbT/QtNd1ScqyBUur20Xr3BMlK+HiPiJdnmVbmuz8t8rnk20OfnktepLey
6ubsqfKYn0vuke5hoc8lBwIuJcd6K7F0zs4qDPJcco+AL/K55EC6peRYD6XU
7aK1b+S55B7pXuRzyYF0S8mxBkqp20fr3ROkK+E2gA8Te3/Hwrtue8ME0yP/
0pU8OUr81CcfoJ4hJcd6K6tuzp4qj3nx7JHuwXrtDT/dSSWAgEvJsd5KLJ2z
swpjUkLHgBtmdS0BnyXdUnKsh1LqdtHat0kJHdNtvvZmoemWkmMNlFK3j9a7
JzAp4WPwX75sV2ublfz4IeVYKvdPQLA8NNzw/vsPx3jYkZJjvZVVN2dPlcek
hF7pHsw/h6GnO6EEFHApOdZbiaVzdlZhrEroFXCzkvMDPku6peRYD6XU7aK1
b6sSeqXb/nOYZaZbSo41UErdPlrvnsCshKur1dlpv8/7yen1heFuZhsI35JX
mfpBSo72VlbdnD1VHrMSeqR7KP8tuZR8KT29V1tPBlFCj4ATviWvsn1LybEe
SqnbRWvfiBJ6pJvwLXmV6ZaSYw2UUreP1rsnyFdCgBmUPIX7n9WkPbUBQUpe
srey6ubsqfI4PQTNjLeSpzBvugcpecHeSiyds7MK4/cQNBszKHkK1bVvKTnW
Qyl1u2jt2+8haDZmUPIUqku3lBxroJS6fbTePUEMJTf+lPUwDzddrCr1g5Qc
7a2sujl7qjwxlDxCugcpecHeSiyds7MKE0bJIwRcSl6sh1LqdtHadxglX2i6
peRYA6XU7aP17gkaUvL7tzL/Kjad5EdCPENKjvVWVt2cPVWehpR85nQPUMCl
5FhvJZbO2VmFaUvJ62vfUnKsh1LqdtHad1tKXl+6peRYA6XU7aP17glqV/Ld
8x36s8vb1U3GFTIPvzeZ55aPd+sNuzjf/ITHeqJPSo71VlbdnD1VntqVPEK6
h4yAS8mx3kosnbOzChNAySMEHE63lBzroZS6XbT2HUDJF51uKTnWQCl1+2i9
e4LqlXx7gmv7gmO7uux9fvPyit29KbAThlJyrLey6ubsqfJUr+TVp3vICriU
HOutxNI5O6swEZS8+oBnpFtKjvVQSt0uWvuOoORLTreUHGuglLp9tN49Qf1K
Pgw3t2en/ewPJkbZpn69hY9PhDT8ayk51FtZdXP2VHnqV/La0z1kBVxKjvVW
YumcnVWYEEpee8Az0i0lx3oopW4XrX2HUPIFp1tKjjVQSt0+Wu+eIIKSLxkp
OdZbWXW99nsZIij5kpGSY72VWNpr1xcgiJIvFik51kMpdbto7TuIki8WKTnW
QCl1+2i9ewIpORcpOdZbWXW99nsZpORcpORYbyWW9tr1BZCSc5GSYz2UUreL
1r6l5Fyk5FgDpdTto/XuCaTkXKTkWG9l1fXa72WQknORkmO9lVjaa9cXQErO
RUqO9VBK3S5a+5aSc5GSYw2UUreP1rsnkJJzkZJjvZVV12u/l0FKzkVKjvVW
YmmvXV8AKTkXKTnWQyl1u2jtW0rORUqONVBK3T5a755ASs5FSo71VlZdr/1e
Bik5Fyk51luJpb12fQGk5Fyk5FgPpdTtorVvKTkXKTnWQCl1+2i9ewIpORcp
OdZbWXW99nsZpORcpORYbyWW9tr1BZCSc5GSYz2UUreL1r6l5Fyk5FgDpdTt
o/XuCaTkXKTkWG9l1fXa72WQknORkmO9lVjaa9cXQErORUqO9VBK3S5a+5aS
c5GSYw2UUreP1rsnkJJzkZJjvZVV12u/l0FKzkVKjvVWYmmvXV8AKTkXKTnW
Qyl1u2jtW0rORUqONVBK3T5a755gPev+8Q//5Ks/+GHJ1y8+frOu+8V3Py5c
t8KXlBzrray6Xrkrw3rl/MXvfkSZ1V985/v0cNFf6w9fSg70VmJpr+gVYLN4
Lj+r//63fmf9ooeL/lovnKTkQA+l1O2ite+NEl7/6V8WntXrxk05qtT2+uUf
/4WUHGiglLp9tN49wX36Tn+w/q9erJeUHOitrLpeuSvDvZJ/+BFlVv/sW/xk
0V/rD19KDvRWYmmv6BVgo+SUaCvd3W7hlLMHpeSFS3tFrwAbJd98e1U43fRk
1fD68s0nnZTc3kApdftovXuCTheuU8n//D8VBfHa72XQhetcXC5cFyXx2vUF
0IXrXFwuXBcl8dr1BdCF61xcLlwXJXHc+0Sk5FxclJx1zplSl1g6XOql5Fxc
lJz1JRrxdDextNeuL4CUnIuLklMaWUftoZS6XbT2LSXn4qLklN5NbN/q3flI
yblIyQOVDpd6KTkXKTnWW4mlvXZ9AaTkXKTkgep20dq3lJyLlBxroJS6fbTe
PYGUnIuUPFDpcKmXknORkmO9lVjaa9cXQErORUoeqG4XrX1LyblIybEGSqnb
R+vdE8RQ8tXV6uL8+uz8+uJmzu2CWF3eb9jZ5apDtk1KHqh0uNTHUPKa0z1k
BVxKjvVWYumcnVWYMEpec8Az0i0lD1S3i9a+wyj5QtMtJccaKKVuH613T5Cl
hKvL/r0PurMr678zKfndxenjjRAnaqEbk8rY+3fnSZs3gpQ8UOlwqbcr4c3t
xXl/8njf0f7kHGhn6bO6lnRPlMgIuJQc663E0jk7qzC5SohmyjSrawn4DOmW
kgeq20Vr35ASOrRv06xecLql5FgDpdTto/XuCTKU8Ooa9VCLku+qvHc6eSIO
35g0xt9/cyJudxi87mzvKyUPVDpc6m1KuJ7JT7r501dvjFXyrK4k3ZMlMgIu
Jcd6K7F0zs4qTJ4S4pmyzOpKAj5LuqXkgep20dq3WQmd2rdlVi853VJyrIFS
6vbRevcEoBKurh7jP6uSb05/vXe6Ws21MQnbkPT+t2cPRz/j1TtS8kClw6Ue
XDzvz6uvrla7mW+a2KmzuoZ0J5cAAi4lx3orsXTOzioMroR5mTLM6hoCPlu6
peSB6nbR2rdRCd3at2FWLzrdUnKsgVLq9tF69wSAEt515/3Ts3CzKvn2ypPz
29k2Zpr0999ewzPX94mjtNlbWXVz9lR50hfPm551sL3u/mg0g69JndXsdJtK
AAGXkmO9lVg6Z2cVBlPC/EwZZjU74LOmW0oeqG4XrX2blNCxfRtm9aLTLSXH
Giilbh+td09gU8L7U1L7H4+c9sWU/OTybraNGcX4/lLyxZcOl/rUxfP2dPfI
lV27H2SlX/dlU3JKuu0lpOTFeiuxdM7OKgxwIyaXTJmVfKHtW0oeqG4XrX0b
lNC1fZuVfKHplpJjDZRSt4/WuyewKOH+2pgP+rN1DG+2V8VwlNxtY0Ywv7+U
fPGlw6U+cfG8u0mL4XvwabKVfO50IyWk5MV6K7F0zs4qjFEJ3TLloeRLaN9S
8kB1u2jtO10Jfdu3h5IvId1ScqyBUur20Xr3BGYlPzm/3V4bU4GSe2zMCOb3
l5IvvnS41Kctnv2F10fJZ0w3UkJKXqy3Ekvn7KzCIErukSk3JQ/evqXkgep2
0dp3shI6Z8dNyYOnW0qONVBK3T5a757ApIR3z36owlVyt40Zw/r+29QfvIxn
HCl5oNLhUp+2eN6ec97c/OTu2SVh909RuZ24ecsI+Reuz51uoAQQcCk51luJ
pXN2VmGsSuiVKZcL1xfQvqXkgep20dp3shI6t2+XC9cXkG4pOdZAKXX7aL17
ggwlLKHkyVGaZdFuen8p+eJLh0u9Scmvu5vbsyePGX3ymuk5AtWkO6mElLxY
byWWztlZhclTwhJKXk3ApeQHellTdbto7duq5F7tO31WLzvdUnKsgVLq9tF6
9wSVK/n2dpHHS/BTf/T+k4f/kZQ8TulwqU9aPO9uDtNvzq4/Pa8+80PQqkl3
Wgl7wKXkWG8lls7ZWYWpX8mrCfgs6ZaSB6rbRWvfqUro3b7TZ/Wy0y0lxxoo
pW4frXdPULWST99J0mlj0kh5/2dXECUiJQ9UOlzqTUo+Mr1vJh6wMkbSrK4o
3YklzAGXkmO9lVg6Z2cVpnYlryjgs6RbSh6obhetfVuV3Kt9p87qpadbSo41
UErdPlrvnqBWJb+5vTi3PDqhhtQ/Pm+iP7tM/AmPlDxQ6XCpNyr5yDnk/Xn4
5HZ2bFbXlu7kEsaAS8mx3kosnbOzClOxktcW8FnSLSUPVLeL1r7tSu7TvhNm
dRPplpJjDZRSt4/WuyeoVMnNFlBH6gfzlkvJA5UOl3rTb8nHf2llDteRWV1d
ui0lLBsvJcd6K7F0zs4qTL1KXl3AZ0m3lDxQ3S5a+7b+ltyrfR+f1W2kW0qO
NVBK3T5a756gWiXfPXnwNOHCmKyNSSPt/e9vd7m9iOhaSr640uFSb3sIWkEl
ryzdySWMAZeSY72VWDpnZxWmZiWvLOCzpFtKHqhuF619mx+CVlDJW0i3lBxr
oJS6fbTePUGlSv7A3fZSk5RfwdSQ+se/k35fRyl5oNLhUp+ohNufm432dPPv
sFJmdU3pTixhDriUHOutxNI5O6sw9Sr5AzUFfJZ0S8kD1e2ite90JfRt34mz
evHplpJjDZRSt4/WuyeoWcmH3dEm4WBSQeq3V8UY7oI1SMlDlQ6X+tTF88X2
4SmHT3obbuSyJXFWV5PutBL2gEvJsd5KLJ2zswpTuZIPFQV8lnRLyQPV7aK1
73Ql9G3f1juuLzXdUnKsgVLq9tF69wSVK3mgRx9ubx+h55Ivt3S41Ccvnid+
j7ab+ZYHiCTO6mrSnVbCHnApOdZbiaVzdlZh6lfyagI+S7ql5IHqdtHat0UJ
Pdv3Ip9LDqRbSo41UErdPlrvnqByJU+OEj/1yQeoZ0jJA5UOl3qDEu7uR9qd
nK+63Xnvpz+/Sv6KfEif1bWkO6kEEHApOdZbiaVzdlZh6lfyagI+S7ql5IHq
dtHat00J/dq3YVYvOt1ScqyBUur20Xr3BDGU/PgpvmMbs38CguWh4Yb336fe
+GlIyQOVDpd6kxLedeePTzh99jpNvFfhHpuS89OdUAIKuJQc663E0jk7qzBh
lJwf8FnSLSUPVLeL1r6tSujVvs1KvtB0S8mxBkqp20fr3RPEUPL8E3FVpn6Q
kocqHS71ZiVcPTxy9OSxmyc+xPMFpb8ll5Ivpaf3auvJhFFyfsCl5Ad6WVN1
u2jtG1FCj/ZN+Ja8ynRLybEGSqnbR+vdE+QrIcAMSp7C/S9uTNffmpCSL750
uNTnKyGGt5KnMG+6Byl5wd5KLJ2zswqTr4QYMyh5CtW1byl5oLpdtPadr4QY
Myh5CtWlW0qONVBK3T5a754ghpJbbi01ysNNF6tK/SAlD1U6XOpjKHmEdA9S
8oK9lVg6Z2cVJoySRwi4lHzZdbto7TuMki803VJyrIFS6vbRevcEDSn5/VvZ
nlBmIvmREM+QkgcqHS71DSn5zOkeoIBLybHeSiyds7MK05aS19e+peSB6nbR
2ndbSl5fuqXkWAOl1O2j9e4Jalfy3fMdHn4Uc5NxhczD703mueXj3XrDLs6t
z27eICUPVDpc6mtX8gjpHjICLiXHeiuxdM7OKkwAJY8QcDjdUvJAdbto7TuA
ki863VJyrIFS6vbRevcE1Sv59gTX9gXHdnXZ+/zm5RX7x09AJwyl5IFKh0t9
9UpefbqHrIBLybHeSiyds7MKE0HJqw94Rrql5IHqdtHadwQlX3K6peRYA6XU
7aP17gnqV/JhuLk9O+1nfzAxyjb16y2c897U47TZW1l1c/ZUeepX8trTPWQF
XEqO9VZi6ZydVZgQSl57wDPSLSUPVLeL1r5DKPmC0y0lxxoopW4frXdPEEHJ
l4yUPFDpcKmPoORLRkqO9VZiaa9dX4AgSr5YpOSB6nbR2ncQJV8sUnKsgVLq
9tF69wRSci5S8kClw6VeSs5FSo71VmJpr11fACk5Fyl5oLpdtPYtJeciJcca
KKVuH613TyAl5yIlD1Q6XOql5Fyk5FhvJZb22vUFkJJzkZIHqttFa99Sci5S
cqyBUur20Xr3BFJyLlLyQKXDpV5KzkVKjvVWYmmvXV8AKTkXKXmgul209i0l
5yIlxxoopW4frXdPICXnIiUPVDpc6qXkXKTkWG8llvba9QWQknORkgeq20Vr
31JyLlJyrIFS6vbRevcEUnIuUvJApcOlXkrORUqO9VZiaa9dXwApORcpeaC6
XbT2LSXnIiXHGiilbh+td08gJeciJQ9UOlzqpeRcpORYbyWW9tr1BZCSc5GS
B6rbRWvfUnIuUnKsgVLq9tF69wRSci5S8kClw6VeSs5FSo71VmJpr11fACk5
Fyl5oLpdtPYtJeciJccaKKVuH613T7Cedb/84dl6+pV8/ertj9d1v3zzSeG6
Fb6k5IFKh0v9/eL5uyeUWf2Lj9/Qw0V/rT98KTnQW4mlvaJXgM3iufys/vm3
v7d+0cNFf60XTlLyKHW7aO37m4c2+uuf/LTwrF43bspRpbbXRlKk5NYGSqnb
R+vdE6xn3VenP1j/Vy/WK1/JRTG8cleGtQ9+8eFHlFn9s2/xk0V/rT/8fCUX
JfGKXgE2Sk6JttLd7RZOOXuQPdmbwyt6Bfhmd2a7fLrpyarh9eWbT7psJRcl
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
pOSBemusnj5IydlIybHSlOVELyVPQ0q+QUqODbm1ZQOGlJyLlBxroMQh++z4
tZNPfk/+9ec/ev/dd9+f5aL1e6TkXKTkgXprrJ4+SMnZSMmx0pTlRC8lT0NK
vkFKjg25tWUDhpSci5Qca6DEIbvt+3srf/9Hn399yLq/vhfyd9//fC4jl5KT
cVFyUQyv/V4GKTkXFyUXJfHa9QWQknNxUXJREq9dXwApORcXJRcl8dv5X2++
CB/37mNfpWewnnX/+Id/8tUf/LDk6xcfv1nX/eK7HxeuW+HLRcl/g8Gn7Z3u
ZtWFWa+cv/jdjyiz+ovvfJ8eLvpr/eHnK/nvM/h0Gae77Z82qzTAZvFcflb/
/W/9zvpFDxf9tV445Ss5pXdv2rfXPLQOubVlA8ZGCa//9C8Lz+p146YcVWp7
/fKP/yJfySm9e9O+Haeiacjxlw1puj3n7d2+Ov3B+r96sV5S8ii91aHu5++/
+84778z4S5Rn3Cv5hx9RZvXPvsVPFv21/vCl5LzeinzaWf++bLo3Sk6JttLd
7RZOOXtQSh5p2VA23Rsl33x7VTjd9GTV8PryzSedlNw+5PDLhtRbrushaMsk
//OXkhcjv+7n77+zZa7LXp6hC9e5uFy4zurp4Xsr9Gnn/PPC6daF61xcLlyn
9O7fkJLbKZxuXbjOxeXCdUrv/n0peQZ6LnnjSMnL99acjzr7PXaNXUreAFJy
Ym/FPu28Nyiabik5Fyk5NuSwy4ai6ZaSc5GSY0OOvmyQkjeOlJzRW/GPOv9N
tn1dSt4AUnJib8U+7cx3KJluKTkXKTk25LjLhpLplpJzkZJjQ46+bJCSN46U
nNJb4Y868x2+3vwerVBXl5KTkZITeyv2aef888LplpJzkZJjQw66bCicbik5
Fyk5NuToywYpeRKrq9XF+fXZ+fXFzZzbBbG6vN+ws8tVh2yblLx8b835qOF/
+/WP3t39FO2dmW7V+JoYSl5zuoesgEvJib0V+7Sxf0hJdxglrzngGemWkmND
DrdsoKQ7jJIvNN1ScmzI0ZcN4ZV8ddnf35/wdLUy/COTkt9dnD7eCPHs6tkf
dZfXJ0/+9OT0+uLqzrT9R7i5PTvtp9+/Ox/bvBSk5CV7ayb5Sj79sEN3rIvn
u9XV00D16wnf3QCBSp/V1HQPcwdcSk7srdinjf1DSrodlBxq36ZZPRHwpPRl
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
S7IS7m+i+MHT8+p3qyvgEQPpSm6N0v6+Fm5PSkp+fyl5yd7Kqpuzp8pjU8LX
F5XNrOSsdG+/Shite/jqOCn54ntrrIBDjytyaN/ps/r/b+/seaRJruys3yNX
v0Xe0JFRS2NFcZ0F2DRo9MgQRFLQB1poQU0QkLNIY4G22lrIkVlUUwMUQUps
ERB2qhdYoQXIacgqVXd99FdlVtwTN++Jm3keFMaYeaduxhtx68STlZU57fiW
kmMZSql7nS2+zUroFN/lq/pky2DZ6oJvd0vJsSHPcNvgi+37rNNnt45n4Esv
NitX8g/X4RQf5Fjn2Iffv+f+k2feUkoOZSurbs1MxWNRwn0Xf2jwkZWc1d3g
tsHe4FLyXNmaq8Ht90b2ie/yVT3t+JaSYxlKqXudLb6NSugW3+Wr+mR305Tc
u7ul5NiQZ7ht8KVeCV84PJig8OR2qZKb3nZ54/XcQ/T9kWtypORYtrLq1sxU
PLWb51GVnNfd6LbB3OBS8lzZmqvB65VwjzG+S1f11ONbSo5lKKXudbb4Nimh
Y3yXruqe7uYo+QjdLSXHhjzDbYMvPkpufJxogZI/Pt0euqzgPZ/fWtLhIS/4
+x+/jCi+Z46UHMtWVt2amYqndPPcdw55LCUndze+bTA2uJQ8V7bmanA3JTfG
d8GqnkV8S8mxDKXUvc4W3wYldI3vglU91N3xSj5Sd0vJsSHPcNvgi5OS2xrt
vJIfTsGVnNQ6/oTk5UNpjEA3vb/lyDdScjRbWXVrZiqeIiUceC7JSErO7u5z
vywbPKNuOXgpea5szdXgfkpui+/zq5rd4Pj7W45cSo5lKKXudbb4LlVC7/g+
v6oHe6QqW+2M191ScmzIM9w2+NKskh9uR3M5eNnb49PVoSUvxrjgzfj+7++W
IyUfM1tZdWtmKp4SJXwXaudexWe2zyo5t7vxu8IaG1xKnitbczV4y0o+h/iW
kmMZSql7nS2+C5XQPb5LlHyguwPvuD5ud0vJsSHPcNvgS6ESnrscxdZohb8l
fz5zlu/dg11GuSGM9f3fNjblByMlx7KVVbdmpuJpVMl3dYndPfDNwtB/NTe4
lDxXtuZqcPONmJziu3BVTz6+peRYhlLqXmeL73aVfFe3r7vBbLUyendLybEh
z3Db4EupEg7Hq/EKGesd1wfvEzvyIw7L3x/6tJGSY9nKqlszU/HUKmHIHdcZ
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
3a2XyLFJybFsZdWtmal4cih5y929qWpwKTmWrcTSNZMVTBolb7nBK7pbSo5l
KKXudbb4TqPkE+1uKTkWoJS6XbbsHqBKCdd3q29+uLy6t/5/JiV/vr18ezbB
x1rPy7uHi3f/9eLy4fb+2Xo0A6VL3n9503d4JUjJsWxl1a2ZqXhsm+f3K/nr
y7K2y1c1sbtLS1Q0uJQcy1Zi6ZrJCqZWCdH4Nq3qCce3lBzLUErd62zxbVZC
p/g2reoJd7eUHAtQSt0uW3YPUKGE9w+oh1qU/FDlm8uPJ+Ie1xd9nz+XD0vr
EX2l+P13J+IOf9haWkqOZSurbs1MxYNvnoOUnNXdlhIVDS4lx7KVWLpmsoKp
U0I8vi2resrxLSXHMpRS9zpbfFuV0Cu+Lat6yt0tJccClFK3y5bdA4BKuL4/
rvNxlXx3Jv+by/X6w79+utpXX707M/a83P3hE3/eCvD+u/9lZbx6R0qOZSur
bs1MxWPZPB9izt7OXyld1aTuxkoADS4lx7KVWLpmsoLBlbAuvg2retLxLSXH
MpRS9zpbfBuV0C2+Dat60t0tJccClFK3y5bdAwBK+Ly8OSz+8ZV8f+XJzdP7
f7n/KDjZYvjJ/8r335+lNNaVkmPZyqpbM1PxAN9nuXwHXbqqKd2NlgAaXEqO
ZSuxdM1kBYMpYX18G1b1pONbSo5lKKXudbb4NiqhW3wbVvWku1tKjgUopW6X
LbsHsCnhy9n14+Uxl6swJb+4e/8jkX1/ffyXn//rpw8KC9j7S8kjs5VVt2am
4qn/PgvDpuSx3Q2XkJKHZSuxdM1kBQPciMklvs1KPtH4lpJjGUqpe50tvm1K
6BffZiWfaHdLybEApdTtsmX3ABYlPP5y5Ierq21H4JfK1Cn5ubr7c3fwpxP4
/lLyyGxl1a2ZqXgqN88wFUo+dnfjJaTkYdlKLF0zWcEYldAtvus+VaYT31Jy
LEMpda+zxbdNCf3iu07Jp9PdUnIsQCl1u2zZPYBZyS9unvarnaXkZ3D5Hg14
fyl5ZLay6tbMVDzlm+fDj63uP97I9HK7e3+yp2fNt+TDjN3dAyWk5GHZSixd
M1nBIEruEd+jnuhLFN9ScixDKXWvs8W3SQkd47vyW/JhEnW3lBwLUErdLlt2
D2BSwucP3d2mkh+Oyun7vvL3H76ipg8pOZatrLo1MxVP8eZ54BamL8lufeTo
aEo+dncPlQAaXEqOZSuxdM1kBWNVQq/4HlPJM8W3lBzLUErd62zxbVFCz/ge
U8kzdbeUHAtQSt0uW3YPUKGEEUpubaXjkyCcnpRkeH8peWS2surWzFQ8xZvn
Dxe1Hs+rP7+7M7OpoQpXdWvdPVxCSh6WrcTSNZMVTJ0SRih5aw3u291ScixD
KXWvs8W3RQk947t8VU+7u6XkWIBS6nbZsnuAxpV8/7yDwhL7H5KMdhZu+P1P
3n/y7FtKyaFsZdWtmal4SjfPh4V96i6mxzPwhoVduKrb6u6zJewNLiXHspVY
umaygmlfydtqcO/ulpJjGUqpe50tvg1K6Brf5at62t0tJccClFK3y5bdAzSt
5IfnHRSdVXt7tss4P1Q5//77c5Wmpx9KybFsZdWtmal46pXwBVMbvlK0qpvq
7qIS5gaXkmPZSixdM1nBtK7kTTX4CN0tJccylFL3Olt81yvhHmN8l67qqXe3
lBwLUErdLlt2D9Cqkj8+3d6UP6Xl3bNWfZ7iBL7/8XRl8V01pORYtrLq1sxU
PD5Kbn+c6LlV3VZ3G0oYG1xKjmUrsXTNZAXTsJK31eAjdbeUHMtQSt3rbPHt
puTG+C5Y1bPobik5FqCUul227B6gUSU/nIIrOal1/AnJyymyMVre9P6WI99I
ydFsZdWtmal4nJTc3OlnVnVL3W0uYTl4KTmWrcTSNZMVTLtK3lKDj9fdUnIs
Qyl1r7PFt5+S2zr9/KqeR3dLybEApdTtsmX3AM0q+eGGFZeDF8Y8Pl0dWvJi
jEtijO///n4aUvIxs5VVt2am4mlWydvobnsJY4NLybFsJZaumaxgWlbyNhp8
3O6WkmMZSql7nS2+W1byOXS3lBwLUErdLlt2D9Cokr/yvL/UpO9ylHePfhjl
lhHW93/7Cyk/GCk5lq2sujUzFU+hEu7v09K7yM2/wypZ1ezuBkqYG1xKjmUr
sXTNZAXTrpK/wm7w0btbSo5lKKXudbb4LldC3/guXNWT724pORaglLpdtuwe
oGUl3xw+bQbvJGm7nVox9vffXxVj+72MlBzLVlbdmpmKx3jH9Z6leyZ8T/0f
ljuuM7obKmFvcCk5lq3E0jWTFUzjSr6ZenxLybEMpdS9zhbf9juu+8S39Y7r
U+1uKTkWoJS6XbbsHqBxJe95nmB7Lb85fPTpueQh2cqqWzNT8ZifS/71HPLa
fG+3Te1zyZv08Q3S4FJyLFuJpWsmK5j2lXza8S0lxzKUUvc6W3wjzyX3iO/q
55JPpLul5FiAUup22bJ7gMaV/GQrHW/pMNKOHXv/ng+oM0jJsWxl1a2ZqXjM
m+fXBXy8Tcrz8g57dknpqmZ0N1wCaHApOZatxNI1kxVM+0o+7fiWkmMZSql7
nS2+TUroGN+GVT3p7paSYwFKqdtly+4Bcij5h4+Uw3m/c68Pt544PgHhfCND
73/seuPfhpQcy1ZW3ZqZisekhO9uXvrpZX52iU3JQ7sbLQE1uJQcy1Zi6ZrJ
CiaNkk80vqXkWIZS6l5ni2+rEnrFt1nJJ9rdUnIsQCl1u2zZPUCFEpK+JV8f
T/2N0/XY+0vJY7OVVbdmpuIxK+H6fn11+bb+Ly4fbg33KjxSuqrjuxsuISUP
zFZi6ZrJCiaNkk80vqXkWIZS6l5ni29ECT3iu+pb8gl1t5QcC1BK3S5bdg9Q
r4QAlReuo7ycYRt8akMVUvLIbGXVrZmpeJwegmYGV3Kccbt7IyUPzFZi6ZrJ
CqZeCTEqL1xHaS6+peRYhlLqXmeLb7+HoNmovHAdpbnulpJjAUqp22XL7gFy
KLnxp6yneT3D1lTXb6TkaLay6tbMVDw5lDxDd2+k5IHZSixdM1nBpFHyDA0u
JQ/LUErd62zxnUbJJ9rdUnIsQCl1u2zZPcCMlPzlrcy/ii2n/5EQQ0jJsWxl
1a2ZqXhmpOQjd/cGanApOZatxNI1kxXMvJS8vfiWkmMZSql7nS2+56Xk7XW3
lBwLUErdLlt2D9C6kh/u57C6untaP1ZcIfP60zn77+ZKeN4e2O3N6tRvWM4i
JceylVW3ZqbiaV3JM3T3pqLBpeRYthJL10xWMAmUPEODw90tJccylFL3Olt8
J1DySXe3lBwLUErdLlt2D9C8ku9PcO1fcNuu71Y+v3n5wuHeFNgJQyk5lq2s
ujUzFU/zSt58d2+qGlxKjmUrsXTNZAWTQcmbb/CK7paSYxlKqXudLb4zKPmU
u1tKjgUopW6XLbsHaF/JN5vHp6vLFXp72NHZd/32CN+eCGn4v6XkULay6tbM
VDztK3nr3b2panApOZatxNI1kxVMCiVvvcErultKjmUope51tvhOoeQT7m4p
ORaglLpdtuweIIOSTxkpOZatrLpe8x5DBiWfMlJyLFuJpb2mPoAkSj5ZpORY
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
K78lH2bs+Na35Nz4VnbX46Hkh8+E4t4cRcnXj8ebrFpvEG2hd7DDV9T0ISXH
spU15JqZiqds8/zhm6MvTw66ebKf3RpNyc0fNXY8G1xKjmUrsXTNZAXjpOTm
nhpTyUdr8HPbA6C7peRYXeK2oWaygilWQuf4HlPJx45vz+yWkmMBSqnbZcvu
AeqV8Hh30/KfmpYreUkrfXg24jeXDxW/Ii89noH7w0jJQ7KVNeSamYrHpOQP
y8e+JweN9BwBa8sAHzVWfBtcSo5lK7F0zWQF46LkQE+Vr+oWGrxweyAlD6tL
3DbUTFYwViX3im+vO1T0/vnR4ts3u6XkWIBS6nbZsnuAWiU83DvCtNrLlXx/
u8jBb723f2Z1cfnyOn4EvXv0iSfDgz19c/hzbyklh7KVNeSamYqnaPN8vIXp
7uz6+/PqIz8EraS7370p8lFjw7vBpeRYthJL10xWMA5KDvWU+TkO1AYv3R7Y
u1tKjtUlbhtqJiuYUiX0ju/yVd1Cd5e+v727peRYgFLqdtmye4AqJTw+6NPo
oaVKPnwnyVM8HxvT/dr184NF7iwnJceylTXkmpmKx6TkPV3zOPCAlT6KVrWp
u9GPGgMjNLiUHMtWYumayQqmVgnRnvJ5joPTwZgY3B6Yu1tKjtUlbhtqJisY
q5J7xXfpqm6qu0fIbik5FqCUul227B4AVsLnty4w30utQMkfn24P72+U61Eu
fisc7CHxV1d3hT/hkZJj2coacs1MxWNU8p44G3oS6GnOrWpbd9d81BQyUoNL
ybFsJZaumaxgapSwpqcKVnVzDf5Wa2B7YOxuKTlWl7htqJmsYOxK7hPfBau6
re4eKbul5FiAUup22bJ7AEwJ3/0+C7n703klt1vAOxweTf4e22CNRy4lx7KV
NeSamYrH9Fvy/ivKzPd0PbOqLT1S+VFTwngNLiXHspVYumaygoGVsLKnzq/q
xhr8I4PbA8uRS8mxusRtQ81kBWP9LblXfJ9f1S1193jZLSXHApRSt8uW3QPY
lfDdTSQuwKtQSpT84XDiy/5lt+NTIYyDfbnd5f4iosK7zEnJsWxlDblmpuKx
PQQtUMnLutvho+Yc4za4lBzLVmLpmskKBlJCh54qUfJmGvxE0d5PM2N3S8mx
usRtQ81kBWN+CFqgkrfR3eNmt5QcC1BK3S5bdg9gVMLH4/0iau7SUPhb8uee
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
9fVxsLsTcRf7//qwtBWRkifK1nRdb9k8P64vTq7219Yba1Xzurt8vBUNLiXH
spUy5G52Sg7Gt2VV9zZ4abyilH6AVHS3lBwb8ty2DRhGJXSLb8uq7utuz73E
SQK6W0qO1SVuG+CZaooaJXy6AmPUoOQ9p/GPZ+dWV29n3p6XN/uUv7irPh33
brtyuOjleXncRZzwgt3fxsp49Y6UPFG2puv68s3zsZdXt+8b6rjgbQ1euqpp
3Y2MF2hwKTmWrZQhdzNTcji+Dau691t4c7yaAD5AgO6WkmNDntu2AcOkhI7x
bVjVPd3tu5f4Skx3S8mxusRtAzxTTQEr4YdLVsZT8v2VJ58y+hDoX69FOVyp
Unku7jC6L3uDw7n9r929/1+Ml8dIyRNla7quL90896/qoV7rp3RVk7obGy/Q
4FJyLFspQ+7mpOQ18W1Y1acbHIlXC8gHCNDdUnJsyHPbNmAYlNA1vg2r+mR3
e+8lDG/i2t1ScqwucdsAz1RTgEp4PD92exOh5J9OfC0Hiu4b1iXTT75J33ZC
Sj75bE3X9YWb5/3S7fn2uXf/3I9NyaO7GxyvlDwsWylD7uaj5HXxbVbyz42G
xKsB6ANESh7DDLcNGOVK6BvfZiX/WNd9L3G66PjdLSXH6hK3DfBMNQWkhPuV
/3IyaqhBeqlV8oJjq9q0Dw9q+GpbKfl0szVd15dtng+//OpbuvYer1LyIVyU
HByvlDwsWylD7uai5LXxXavkULw6ISV/i++aI68Z8ty2DRjFSugc33VK7r+X
sCAlfwsyVl3itgGeqaYAlHD/U5Hd8m5NyT1a/typvNONLyWffLam63qXh6BF
f0t+9s+PFeh79C05PVspQ+7moeT18V2p5Fi8+tA/Xil5DDPcNmB4PQQt+Fty
34Ox4drdUnKsLnHbAM9UU5iV8FMbtqPk68fjbRhXVb9VqVNy472npOSJsjVd
13so+eG8t2Vh+yu5X3efo3e8QINLybFspQy5m4OSe8R3SiU/9wECdLeUHBvy
3LYNGE5Kbo7vMZUc2UsUMUJ3S8mxusRtAzxTTWFTwq8XlY2s5CWt9OlONQ/V
Ub7/HqG36OmLc6Tkk8/WdF1fr4TH5jLdUa1wVVO6u+iQBm4RIyUfP1spQ+4m
r+RO8V2+qk+2DBavMIUfIFLyGGa4bcBwUXIgvstXtbVlsL1E4Xu6d7eUHKtL
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
KduJ1ZSV3DO+R1HyhPEtJccylFJ3kS2+a5UQbSiXC9et2VrLCN0tJccClDhk
eKaaolgJP1yLcjyv/vzuhorld5AoV/KSVvr4bBfb7qKEwveXkkdmK6tuzUzF
gylhfUMVruoWuvuAlPxzwFHq/kxKXgz0uCKH+DY/x2Gi8S0lxzKUUneRLb5h
JaxsqPJVXdwyIyr5eN0tJccClDhkeKaawvZ91unfpBzPwJc+ALFcyXeX2w33
8vbPrC4uX15vu477+l/Mmd//3P0nTyIlx7KVVbdmpuLBlLC+oQpXdQvdfaBg
22BvcCk5VpqynVhNWMld47t8VbfQ4OPFt5Qcy1BK3UW2+IaVsLKhyld1SXe/
MqKSj9fdUnIsQIlDhmeqKeqV8IX93VxLz7SXKrnxbTevj13YnzEb5yKZwfcf
80ZY/UjJI+vWzFQ89UqINVTRqm6ru0u2DeYGl5JjpSnbidWElXwYYyeWruq2
Gvzs+495I6wepOTBpWsmKxiX35IDDVW6qg3dHfRbct/ulpJjAUocMjxTTeGj
5APPCjxFgZI/Pt3eYI9OOF7K4vjw4tL3P34ZUXzPHCk5lq2sujUzFY/HHdeR
hjq3qhvs7rJtg7HBpeRYacp2YjVbJTfGd8GqbrDBC97f2N1ScixDKXUX2eLb
6Y7r5oYqWNXW7g6747pnd0vJsQAlDhmeqaZwUnJb051X8sMpOOhhKLQHqbxg
PHIpOZatrLo1MxWPi5IDDXVmVbfY3cWfYJaDl5JjpSnbidV8ldwW3+dXdYsN
Xvb+liOXkmMZSqm7yBbfXkpubajzq9rc3XFK7tjdUnIsQIlDhmeqKZpV8sPt
aC7tZ8vH/gTof//3d8uRko+Zray6NTMVj5OSmxvqrJK3191lb2tscCk5Vpqy
nVhJyf2UvL0GL3h/Y3dLybEMpdRdZItvPyW3NVSJkhu7O1LJ3bpbSo4FKHHI
8Ew1RaES7u/k0HvHQtuJuMLfkj/3PGdwfzC992qo/QRA3//t35ffTENKjmUr
q27NTMVTqITuDVWyqlnd3UPJ25obXEqOlaZsJ1bTVXLf+C5c1ZOPbyk5lqGU
uots8V2uhL4NVbiq+7q7/gCGCetuKTkWoMQhwzPVFKVKONyAhvZ8wXrH9c9b
hcOvQk6fo7PfVeYz2Pvv/33pX8K+lJQcylZW3ZqZiqdUCb0bynSiL7q7T1Ow
bbA3uJQcK03ZTqymq+S+8W294/pU41tKjmUope4iW3wblNC1oawn+grO47me
RY/qbik5FqDEIcMz1RTFSvh2B5jPZ5nWtpvDbByeS36oeOK0v/mRLqeA3n/3
WaHnkodkK6tuzUzFU7x5dm6owlVN6u6TFD8ETc8lH780ZTuxmrCSu8Z39XPJ
JxLfUnIsQyl1F9ni26KEng3V/HPJg7pbSo4FKHHI8Ew1RbkSHm9muF3YxzsW
Pi/vDg8ENGRouZL3ttLxeQcXN28H8/7XIpVfotnfv/gD6mMdKTmUray6NTMV
j0EJXRvKdu1NfHef4Py2AWhwKTlWmrKdWE1ZyT3j2/ypMtH4lpJjGUqpu8gW
3zYl9Gso87U30Uoe1N1ScixAiUOGZ6opTEr4FuufX7artc1KfmrDMHAwD8sv
19Icn4BQfB9X2/sf/7zxY0dKjmUrq27NTMVjUkLrgh/ApuSM7v5CsZJbGlxK
jpWmbCdWk1byjV9820/0TTO+peRYhlLqLrLFt1UJveLb/nOYs2fzzmVrk90t
JccClDhkeKaawqyE6/v11eXq2AIXlw+3hruZ7XD4lnzgYIZ+LmfctJe/v5Q8
NltZdWtmKh6zEloW/AA2JWd19wek5J8DjlL3Z1LyYhAl9Ihvh2/JBw4mT3xL
ybEMpdRdZItvRAk94pvwLXmT3S0lxwKUOGR4ppqiXgkB3JTcxsuPUEa45HWP
lDwyW1l1a2YqHqeHoJnxUXIb43b3RkoeWJqynVjNQck9cFNyG83Ft5Qcy1BK
3UW2+PZ7CJqNEZS8hOa6W0qOBShxyPBMNUUOJXe5m9PrTReb6vqNlBzNVlbd
mpmKJ4eSZ+jujZQ8sDRlO7GSkpfhcuG6mfbiW0qOZSil7iJbfKdR8ol2t5Qc
C1DikOGZaooZKfnLW9l+NGei+JEQH5CSY9nKqlszU/HMSMlH7u4N1OBScqw0
ZTuxkpKXwVHy9uJbSo5lKKXuIlt8z0vJ2+tuKTkWoMQhwzPVFK0r+eGRB6ur
u6f1Y8UVMq+/Z/G65eNHnrcHdnuDPU1VSo5lK6tuzUzF07qSZ+juTUWDS8mx
0pTtxEpKXoZlVSdocLi7peRYhlLqLrLFdwIln3R3S8mxACUOGZ6ppmheyfcn
uPYvuG3Xdyuf37x84fhEBuiEoZQcy1ZW3ZqZiqd5JW++uzdVDS4lx0pTthMr
KXkZplXdeoNXdLeUHMtQSt1FtvjOoORT7m4pORagxCHDM9UU7Sv5ZvP4dHW5
8n2yoSP7rt8e4dvzXg3/t5QcylZW3ZqZiqd9JW+9uzdVDS4lx0pTthMrKXkZ
xlXddoNXdLeUHMtQSt1FtvhOoeQT7m4pORagxCHDM9UUGZR8ykjJsWxl1fWa
9xgyKPmUkZJjpSnbiZWUvAzWp0prSMmxDKXUXWSL7yRKPlmk5FiAEofsOPtE
pORcpORYtrLqes17DFJyLlJyrDRlO7GSkpchJd8hJccylFJ3kS2+peRcpORY
gBKH7Dj7RKTkXKTkWLay6nrNewxSci5Scqw0ZTuxkpKXISXfISXHMpRSd5Et
vqXkXKTkWIASh+w4+0Sk5FxclFyE4TXvMUjJubgouYjEa+oDkJJzcVFyEYnX
1AcgJefiouQiEsfZJyIl5+Ki5EsGv9K35M0jJefiouT/mMGvZnm6O1eDS8m5
uCg5JbuJ8c3dNnhNfQBSci4uSk7J7l18O/5VmIY8w22DL1JyLlJyLFtZdb3m
PQYpORcpea5szdXgUnIuUnIsQyl1F9niW0rORUqODXmG2wZfpORcpORYtrLq
es17DFJyLlLyXNmaq8Gl5Fyk5FiGUuoussW3lJyLlBwb8gy3Db5IyblIybFs
ZdX1mvcYpORcpOS5sjVXg0vJuUjJsQyl1F1ki28pORcpOTbkGW4bfNmuuj/+
8mq7/CJff7r+9bbu77/9RXDdBl9ScixbWXW9+i6Gl83zjy8oq/p3P/2W3lz0
1/YvX0qeKFtzNfhu8xy/qn/7Z3+xfdGbi/7abpyk5ECGUuoussX3968x+rd/
9dfBq3ob3JRPldZeO0mRkluHPMNtgy/bVfeHy59v/6kX6yUlB7KVVder72LY
+uB3P/oJZVX/5gf8zqK/tn/5UvJE2ZqrwXdKTmltdffysHGqmUEpeXBpr9YL
4PvDme347qZ3Vguv33/7i6WU3D7kGW4bfNmuuv/57/7jduFFvv7u7m+2df90
/evgug2+llJyKFtZdb36Lobdt+SUVf0//uW/pTcX/aVvyXNla64G3yl5/Kr+
b3/+l9sXvbnor+3GaSklt2cope4iW3zvlPzv//N/CV7V2+CmfKq09vpf/6mT
kgNDnuG2wZd6JQT4v/ot+QEpOZatrLpe8x6DfkvORb8lz5WtuRpcvyXnot+S
YxlKqbvIFt/f67fkVOr//qXkM9k2+CIl5yIlx7KVVddr3mOQknORkufK1lwN
LiXnIiXHMpRSd5EtvqXkXKTk2JBnuG3wRUrORUqOZSurrte8xyAl5yIlz5Wt
uRpcSs5FSo5lKKXuIlt8S8m5SMmxIc9w2+CLlJyLlBzLVlZdr3mPQUrORUqe
K1tzNbiUnIuUHMtQSt1FtviWknORkmNDnuG2wZccSr6+X9/ePFzdPNw+jnlc
EOu7lwO7ulsvkWOTkmPZyqpbM1Px5FDylrt7U9XgUvJc2ZqrwdMoecsNXtHd
UnIsQyl1F9niO42ST7S7peTYkGe4bfClSgnXd6tvfri8urf+fyYlf769fHs2
wcdaz+v7h4u3/7q6uHxYPj5bj2agdMn7L2/6Dq8EKTmWray6NTMVT60S7hr8
m8v12vb/la9qYne/8vh0dbk6HsC2xO29Y4NLyXNla64Gr1VCNL5Nq3rC8S0l
xzKUUneRLb4dlByKb9OqHujuomytYOzulpJjQ57htsGXCiW8f0A91KLkhyrf
XH46Ebft99OPFLy4ebIe0ClK3393Iu5i/18flrYqUnIsW1l1a2YqnjolfGu9
0ZSc1t0v7HcsX18fx1vR4FLyXNmaq8HrlBCPb8uqnnJ8S8mxDKXUXWSL72ol
BOPbsqp7u7s0W1ECultKjg15htsGX0AlfDlDhX81bFDynhN9x7Nzq6u3M2/P
y5v958DFXeXpOOD9n65e/7zx6h0pOZatrLo1MxVPjRLu1vO4Sk7q7lfe7VgO
V7U9L48biRNeADS4lDxXtuZqcFwJ6+LbsKonHd9ScixDKXUX2eK7Ugnh+Das
6t5v4c3ZaiKmu6Xk2JBnuG3wBVDCt8UfoOT7K08+dXH/Gf7DlSrWb6s/grz/
/oPC+LchJceylVW3ZqbigZXwwwVp4yk5p7tfOAzwy/bgcHr/a3wDDS4lz5Wt
uRocU8L6+Das6knHt5Qcy1BK3UW2+K5Rwpr4Nqzq092NZKuFoO6WkmNDnuG2
wRebEn74+cbhdyIBSv7pxNe+9U5+1OwbtqrrofeXkkdmK6tuzUzFAyrh8ez3
7UAjDGFT8uDuPvc+fTsKKfnkszVXgwM3YnKJb7OSTzS+peRYhlLqLrLFN66E
dfFtVvLP30oj2Wogqrul5NiQZ7ht8MWihMfLUX64utq24eP6gqTkBQdZvWk3
v7+UPDJbWXVrZioeSAn3K/zlVPNQ/A1RpeQFx1bb3cPjGr7aVko+3WzN1eBG
JXSL71olLzjIFPEtJccylFJ3kS2+USWsje9aJYey1Qkp+Vt8w4ddwzy3Db6Y
lfzi5mnfTU0qOSoRpfS/v5Q8MltZdWtmKh5ACfe/Qdst49aU3Km7z52rP53s
UvLJZ2uuBkeU3CO+R1TyVPEtJccylFJ3kS2+MSWsj+9KJcey1QfX7paSY0Oe
4bbBF5MSPn9Y6o0p+frxeBvGlf2QznPu/fddb7w1jZQcy1ZW3ZqZiseshJ/a
rR0ld+3uKiW3NLiUPFe25mpwqxJ6xfcoSp4wvqXkWIZS6i6yxTeihB7xnVLJ
R+huKTk25BluG3ypUMIIJS9ppU/3snjwPv9W+P5S8shsZdWtmal4bEr49aKy
kZWc1d37rxJ6657+ZJOSTz5bczV4nRJGKPm041tKjmUope4iW3ybldApvstX
9cmWwbIVZrzulpJjQ57htsGXxpX8w3U4/X9mdXH58nr7rdy9yYvPHkPR+/fc
f3IYKTmWray6NTMVj0UJ9+384fT1yErO6m5w22BvcCl5rmzN1eDtK/m041tK
jmUope4iW3wbldAtvstX9cnuDlby8bpbSo4NeYbbBl+aVvLDQxPKH4nyfHgO
glfLW94fuSZHSo5lK6tuzUzFU7t5HlXJed2NbhvMDS4lz5WtuRq8dSWfenxL
ybEMpdRdZItvkxI6xnfpqu7p7mAlf49vd0vJsSHPcNvgS6tK/vh0e4M9peV4
KUv9w4vN73/4TFhd3T2VfQxKybFsZdWtmal4SjfPfeeQx1Jycnfj2wZjg0vJ
c2VrrgZvWMlnEd9ScixDKXUX2eLboISu8V2wqoe6m6jkG9fulpJjQ57htsGX
RpX8cAoOugsE7UEqLxiPXEqOZSurbs1MxVOkhAPPJRlJydndfe6XZW4NLiXP
la25GrxdJWc3OP7+liOXkmMZSqm7yBbfpUroHd/nV/Vgj1RlqwNu3S0lx4Y8
w22DL80q+eEhqpf2s+Xjnogbev/1/cPF/icthbepkZJj2cqqWzNT8ZQo4ccb
pAy+ihvqrJJzuxu/K6yxwaXkubI1V4O3rORziG8pOZahlLqLbPFdqITu8V2i
5APdzXwI2gtu3S0lx4Y8w22DL40q+SvPPWf59tfG9HZ9baaj7//278vvTiMl
x7KVVbdmpuJpVMl3dUnd/cLANwtD/9Xc4FLyXNmaq8HbVfJXJh/fUnIsQyl1
F9niu10l39Xt+woezNZSwrpbSo4NeYbbBl9aVvLNoQE/n1I7/Crk9Bl4+11l
PoO9P/RpIyXHspVVt2am4qlVwpA7rkd39wtD5+p7z/PbG1xKnitbczV440q+
mXp8S8mxDKXUXWSL73oljLnj+pcMhbK1nKjulpJjQ57htsGXxpW855cp+64/
9YuVw1HVdD32/rvPCj2XPCRbWXVrZiqexpWc1N3vSvee5D+1o7A3uJQ8V7bm
avD2lXza8S0lxzKUUneRLb7bV/K+n40j2WogqLul5NiQZ7ht8KVxJe9tpePz
Di5ujrdPfH7/a5HK+7Xa3//cfS166kjJoWxl1a2ZqXgaV3Jad79wf/xB3Hq5
3yE8L+8Ojzc9YQRAg0vJc2VrrgZvX8mnHd9ScixDKXUX2eK7fSXv91xzttoI
6W4pOTbkGW4bfMmh5AM75BOvy4dlzzdclhN0tvc//nnj34aUHMtWVt2amYon
h5IzuvuF9XGT8LnEyfECDS4lz5WtuRo8jZJPNL6l5FiGUuoussV3GiU/qdim
bG2yu6Xk2JBnuG3wJYeS953dWt+vry7fev/i8uH2/vnk5w+4aS9+fyl5bLay
6tbMVDw5lJzV3S88Pn0t0fNHpeSTz9ZcDZ5GySca31JyLEMpdRfZ4juNkvc/
grw0W5vsbik5NuQZbht8qVdCADclt/FyOY3HJa+nkZJHZiurbs1MxVOvhBg+
Sm5j3O7eSMlnkK25GrxeCTHclNxGc/EtJccylFJ3kS2+HZQcwk/JTTTX3VJy
bMgz3Db4kkPJ639+stlfS9NU12+k5Gi2surWzFQ8OZQ8Q3dvpOQzyNZcDZ5G
yTM0uJQ8LEMpdRfZ4juNkk+0u6Xk2JBnuG3wZUZK/vJW+PMQz9LzSIgzSMmx
bGXVrZmpeGak5CN39wZqcCl5rmzN1eDzUvL24ltKjmUope4iW3zPS8nb624p
OTbkGW4bfGldyY9POby6e1o/Vlwh8/rTOfvv5kp43h7Y7Q32NFUpOZatrLo1
MxVP60qeobs3FQ0uJc+VrbkaPIGSZ2hwuLul5FiGUuoussV3AiWfdHdLybEh
z3Db4EvzSr4/wbV/wW27vlv5/OblC8cnMkAnDKXkWLay6tbMVDzNK3nz3b2p
anApea5szdXgGZS8+Qav6G4pOZahlLqLbPGdQcmn3N1ScmzIM9w2+NK+ku/v
3IjeHnZ0Dre13H6qPNkvvJGSY9nKqlszU/G0r+Std/emqsGl5LmyNVeDp1Dy
1hu8orul5FiGUuoussV3CiWfcHdLybEhz3Db4EsGJZ8yUnIsW1l1veY9hgxK
PmWk5LmyNVeDJ1HyySIlxzKUUneRLb6TKPlkkZJjQ57htsEXKTkXFyUXYXjN
ewxSci4uSi4i8Zr6AKTkXFyUXETiNfUBSMm5uCi5iMRx9olIyblIXsR4SMm5
SF7EeEjJuUhexHhIybmw/v7FzJGSc5G8iPGQknORvIjxkJJzkbyI8ZCSc5GS
CwpSci6SFzEeUnIukhcxHlJyLpIXMR5Sci5SckFBSs5F8iLGQ0rORfIixkNK
zkXyIsZDSs5FSi4oSMm5SF7EeEjJuUhexHhIyblIXsR4SMm5SMkFBSk5F8mL
GA8pORfJixgPKTkXyYsYDyk5Fym5oLBddXpxX5IXMRLbnTN9ec/8JXkRI7Hb
POvFfbFXgZgmOyXUi/uSkotgto2vF/f1f5a/Za8CMU3+7u5v6Mt75q/tFLBX
gZgm2+CgL2+92KtATJOtDNLXtl7/7+//N3shCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEILJ/weLtlFQ
    
    "], {{0, 439.2}, {797.4, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->120],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{661.1999999999999, Automatic},
  ImageSizeRaw->{797.4, 439.2},
  PlotRange->{{0, 797.4}, {0, 439.2}}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.835279262811553*^9, 3.835279426468804*^9}, 
   3.8353502757061253`*^9, {3.8353668499298763`*^9, 3.835366881110498*^9}, {
   3.835366933028841*^9, 3.835366943765087*^9}, 3.835366993839733*^9},
 CellLabel->"Out[88]=",
 CellID->34019030]
}, Open  ]],

Cell[TextData[{
 "Looking at the models shown above, it's quite evident that these counter \
machines have a pattern; however, this pattern wasn't picked up by the ",
 StyleBox["checkPattern",
  FontSlant->"Italic"],
 " function. This means that ultimately, none of the 5 types of two-register \
counter machines produce a completely unpredictable counter machine."
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.835279268191739*^9, 3.835279292927291*^9}, {
  3.835279345479068*^9, 3.835279367117139*^9}, {3.835279424041252*^9, 
  3.8352795403508368`*^9}, {3.835350281398*^9, 3.835350286312854*^9}, {
  3.835364329839416*^9, 3.8353644142245083`*^9}},
 CellID->1436400504]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Complexity with More Registers", "Section",
 TaggingRules->{},
 CellChangeTimes->{{3.834849153540751*^9, 3.834849168607637*^9}, {
  3.835352358913118*^9, 3.835352374171899*^9}},
 CellTags->"SectionHeader",
 CellID->603657416],

Cell[CellGroupData[{

Cell["Analyzing Three-Register Counter Machines", "Subsection",
 TaggingRules->{},
 CellChangeTimes->{{3.83536445016919*^9, 3.83536448527246*^9}},
 CellID->323857147],

Cell["\<\
All possible two-register counter machines of the 5 types are predictable. \
However, a more complex counter machine could possibly be unpredictable. That \
means the logical next question is if adding more registers creates more \
complexity. \
\>", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.834849169946419*^9, 3.834849307054071*^9}, {
  3.834849360450725*^9, 3.834849539047326*^9}, {3.8349186450203*^9, 
  3.834918686135601*^9}, {3.834920804856948*^9, 3.834920965021443*^9}, {
  3.835261360605619*^9, 3.835261364147509*^9}, {3.835275488255508*^9, 
  3.835275493000288*^9}, {3.835275575340561*^9, 3.835275600208775*^9}, {
  3.835346883735046*^9, 3.835346904821887*^9}, {3.8353491376169863`*^9, 
  3.835349153704314*^9}, {3.835352385492852*^9, 3.835352668931731*^9}, {
  3.835357133673452*^9, 3.835357138589264*^9}, {3.83536450068355*^9, 
  3.83536450704006*^9}},
 CellTags->"ExampleTopicSentence",
 CellID->957442284],

Cell["\<\
The first step is to analyze and compare the differences between 2 and 3 \
registers. The Minsky machine is best for this comparison, since it has the \
smallest number of possibilities to explore. \
\>", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.8353526752807293`*^9, 3.835352819571617*^9}, {
  3.835361803555377*^9, 3.835361804090948*^9}},
 CellID->343485900],

Cell["Create a two-register and three-register Minsky machine:", "CodeText",
 TaggingRules->{},
 CellChangeTimes->{{3.835352821836232*^9, 3.83535284186858*^9}, {
  3.835353032145401*^9, 3.835353033926119*^9}, {3.835361831377982*^9, 
  3.8353618389210443`*^9}, {3.83536244395854*^9, 3.835362453889515*^9}},
 CellID->294622437],

Cell[BoxData[{
 RowBox[{
  RowBox[{"minskyTwoReg", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"cmEvolveList", "[", 
      RowBox[{"#", ",", 
       RowBox[{"counterMachine", "[", "2", "]"}], ",", "30"}], "]"}], " ", 
     "&"}], "/@", " ", 
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"inc", "[", 
           RowBox[{"r1", ",", "z1"}], "]"}], ",", 
          RowBox[{"jzdec", "[", 
           RowBox[{"r2", ",", "z2", ",", "z3"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"r1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"r2", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"z1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"z2", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"z3", ",", "2"}], "}"}]}], "]"}], ",", "4"}], "]"}]}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"minskyThreeReg", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"cmEvolveList", "[", 
      RowBox[{"#", ",", 
       RowBox[{"counterMachine", "[", "3", "]"}], ",", "30"}], "]"}], " ", 
     "&"}], "/@", " ", 
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"inc", "[", 
           RowBox[{"r1", ",", "z1"}], "]"}], ",", 
          RowBox[{"jzdec", "[", 
           RowBox[{"r2", ",", "z2", ",", "z3"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"r1", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"r2", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"z1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"z2", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"z3", ",", "2"}], "}"}]}], "]"}], ",", "4"}], "]"}]}]}], 
  ";"}]}], "Input",
 TaggingRules->{},
 InitializationCell->True,
 CellChangeTimes->{{3.835352849871084*^9, 3.835352859580625*^9}, {
  3.835352894029986*^9, 3.835352966640929*^9}},
 CellLabel->"In[38]:=",
 CellID->1055246995],

Cell["\<\
With this, the next step is to model a few Minsky machines to look for any \
similarities or differences. \
\>", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.83535297353869*^9, 3.835353003691194*^9}},
 CellID->765534562],

Cell["\<\
Model the first 10 two-register and three-register Minsky machines:\
\>", "CodeText",
 TaggingRules->{},
 CellChangeTimes->{{3.83535300741971*^9, 3.835353028858856*^9}, {
  3.835361841063151*^9, 3.8353618500900517`*^9}, {3.835362457762841*^9, 
  3.835362465453864*^9}},
 CellID->1045903403],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"mTwo", "=", 
   RowBox[{"minskyTwoReg", "[", 
    RowBox[{"[", 
     RowBox[{"1", ";;", "10"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mThree", "=", 
   RowBox[{"minskyThreeReg", "[", 
    RowBox[{"[", 
     RowBox[{"1", ";;", "10"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GraphicsRow", "[", 
    RowBox[{"{", 
     RowBox[{"ArrayPlot", "[", 
      RowBox[{
       RowBox[{"Partition", "[", 
        RowBox[{
         RowBox[{"Flatten", "[", "#", "]"}], ",", "3"}], "]"}], ",", 
       RowBox[{"Mesh", "\[Rule]", "True"}]}], "]"}], "}"}], "]"}], "&"}], "/@",
   "mTwo"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GraphicsRow", "[", 
    RowBox[{"{", 
     RowBox[{"ArrayPlot", "[", 
      RowBox[{
       RowBox[{"Partition", "[", 
        RowBox[{
         RowBox[{"Flatten", "[", "#", "]"}], ",", "4"}], "]"}], ",", 
       RowBox[{"Mesh", "\[Rule]", "True"}]}], "]"}], "}"}], "]"}], "&"}], "/@",
   "mThree"}]}], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.835353052604899*^9, 3.8353530758424883`*^9}, {
  3.83535317170855*^9, 3.8353531782077103`*^9}, {3.835353305143838*^9, 
  3.835353307189341*^9}, {3.835353351549171*^9, 3.835353374685264*^9}, {
  3.835353408727347*^9, 3.8353534379528713`*^9}, {3.83535348321625*^9, 
  3.835353487295712*^9}, {3.835356356903434*^9, 3.835356366990408*^9}, {
  3.835366393978471*^9, 3.835366425028911*^9}, {3.835366460355487*^9, 
  3.8353665247754583`*^9}},
 CellLabel->"In[72]:=",
 CellID->1308575589],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztnSHs9dtylhswlSCRILEYclAkGBJUSSWiDT0ExCVpSRoUFnmQmL9AokhI
jsEisagvWCQW+eO7tCW0nXfu7DfrzF6z53kFKeRbedZ6Mv8979653P7N3/+X
v/PjX/mt3/qtP/rt7//H7/zeH//9P/zD3/vX//ivff+//O6v/uif/7Nf/cE/
/Ye/+ld/8M/+4A//7u//1e//j//i+7/9T9//h1//zw8hhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGkN1/XBzMqmAmDFhXMqGAmDFpUMKOCmTBoUXmXmTDf7/O/X4/x
Cu/hb9SFmQTdoOWx3jhLy56B+TevBzOntDwD/5QYGIXGjEKzlUI0W6kedCVo
zCh0g5aHTx4N8q5nnDoSlniCbtDyDPxTYmAUGjMKzVYK0WyletCVoDGj0A1a
Hj55NMi7nnHqSFjiCbpByzPwT4mBUWjMKDRbKUSzlepBV4LGjEI3aHn45NEg
73rGqSNhiSfoBi3PwD8lBkahMaPQbKUQzVaqB10JGjMK3aDl4ZNHg7zrGaeO
hCWeoBu0PAP/lBgYhcaMQrOVQjRbqR50JWjMKHSDlodPHg3yrmecOhKWeIJu
0PIM/FNiYBQaMwrNVgrRbKV60JWgMaPQDVoePnk0yLuecepIWOIJukHLM/BP
iYFRaMwoNFspRLOV6kFXgsaMQjdoefjk0SDvesapI2GJJ+gGLc/APyUGRqEx
o9BspRDNVqoHXQkaMwrdoOXhk0eDvOsZp46EJZ6gG7Q8A/+UGBiFxoxCs5VC
NFupHnQlaMwodIOWh08eDfKuZ5w6EpZ4gm7Q8gz8U2JgFBozCs1WCtFspXrQ
laAxo9ANWh4+eTTIu55x6khY4gm6Qcsz8E+JgVFozCg0WylEs5XqQVeCxoxC
N2h5+OTRIO96xqkjYYkn6AYtz8A/JQZGoTGj0GylEM1WqgddCRozCt2g5eGT
R4O86xmnjoQlnqAbtDwD/5QYGIXGjEKzlUI0W6kedCVozCh0g5aHTx4N8q5n
nDoSlniCbtDyDPxTYmAUGjMKzVYK0WyletCVoDGj0A1aHj55NMi7nnHqSFji
CbpByzPwT4mBUWjMKDRbKUSzlepBV4LGjEI3aHn45NEg73rGqSNhiSfoBi3P
wD8lBkahMaPQbKUQzVaq5+v6YEYFM2HQooIZFcyEQYsKZlQwEwYtKu8yE+bL
/frQ8I3jmfnFCjNHtHhmZmnxzEwcmN96PV8X/3Z6KoYZQ0vnL4RHwsAkaMwo
dMNnr/fxO0uLZ2bcwIRBV4LGjEI3aPHMzNLimZk4MCxxhW7Q4pmZpYWBwUzD
Z6/38TtLi2dm3MCEQVeCxoxCN2jxzMzS4pmZODAscYVu0OKZmaWFgcFMw2ev
9/E7S4tnZtzAhEFXgsaMQjdo8czM0uKZmTgwLHGFbtDimZmlhYHBTMNnr/fx
O0uLZ2bcwIRBV4LGjEI3aPHMzNLimZk4MCxxhW7Q4pmZpYWBwUzDZ6/38TtL
i2dm3MCEQVeCxoxCN2jxzMzS4pmZODAscYVu0OKZmaWFgcFMw2ev9/E7S4tn
ZtzAhEFXgsaMQjdo8czM0uKZmTgwLHGFbtDimZmlhYHBTMNnr/fxO0uLZ2bc
wIRBV4LGjEI3aPHMzNLimZk4MCxxhW7Q4pmZpYWBwUzDZ6/38TtLi2dm3MCE
QVeCxoxCN2jxzMzS4pmZODAscYVu0OKZmaWFgcFMw2ev9/E7S4tnZtzAhEFX
gsaMQjdo8czM0uKZmTgwLHGFbtDimZmlhYHBTMNnr/fxO0uLZ2bcwIRBV4LG
jEI3aPHMzNLimZk4MCxxhW7Q4pmZpYWBwUzDZ6/38TtLi2dm3MCEQVeCxoxC
N2jxzMzS4pmZODAscYVu0OKZmaWFgcFMw2ev9/E7S4tnZtzAhEFXgsaMQjdo
8czM0uKZmTgwLHGFbtDimZmlhYHBTMNnr/fxO0uLZ2bcwIRBV4LGjEI3aPHM
zNLimZk4MCxxhW7Q4pmZpYWBwUzDZ6/38TtLi2dm3MCEQVeCxoxCN2jxzMzS
4pmZODAscYVu0OKZmaWFgcFMw2ev9/E7S4tnZtzAhEFXgsaMQjdo8czM0uKZ
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
CCGEEEIIIYQQQgghhBBCCCGEEEJIPf8HQ8NNaw==
    "], {{0, 370.8}, {566.4, 0}}, {0,
     255},
    ColorFunction->RGBColor,
    ImageResolution->120],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{566.4, Automatic},
  ImageSizeRaw->{566.4, 370.8},
  PlotRange->{{0, 566.4}, {0, 370.8}}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{
  3.8353532099411297`*^9, 3.8353533223421793`*^9, {3.8353533703944597`*^9, 
   3.8353533887108507`*^9}, {3.835353423069599*^9, 3.83535345227527*^9}, 
   3.835353494196188*^9, 3.835356388172833*^9, {3.835366410966549*^9, 
   3.835366431453925*^9}, 3.835366474707094*^9, {3.83536650510107*^9, 
   3.8353665316453323`*^9}},
 CellLabel->"Out[74]=",
 CellID->419631242],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzt3SGs5Xma1+EOIFaCXAkSiyGFIllDglqyErEbpjaYIZkl2aAwCGQhQfwF
EktSBovEoipYJBZ5uZ3eqSn6dg91fpzP+d6+9TyCAJmTe/jkzbzvr8+w87f/
7F/88fu/9t133/3FHzz/L3/8p3/5D3/zmz/9V//kbz7/H/7k13/xz//817/6
Z//o1//yV3/+q9/8/T/768//l//m+V/7H/7Gd999/79/AgAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAH7e9aat68or77l1XXnlPbeuK6+8
59Z15ZX33LquvBvP3+1/3+7s/0XHHR785+5I3pS8KXlTz9/hX99O3q//DvJ2
5E3Jm7LaUvJOyJ6SNyVvSt6Ugy0lb0relLwpqy0l74TsKXlT8qbkTTnYUvKm
5E3Jm7LaUvJOyJ6SNyVvSt6Ugy0lb0relLwpqy0l74TsKXlT8qbkTTnYUvKm
5E3Jm7LaUvJOyJ6SNyVvSt6Ugy0lb0relLwpqy0l74TsKXlT8qbkTTnYUvKm
5E3Jm7LaUvJOyJ6SNyVvSt6Ugy0lb0relLwpqy0l74TsKXlT8qbkTTnYUvKm
5E3Jm7LaUvJOyJ6SNyVvSt6Ugy0lb0relLwpqy0l74TsKXlT8qbkTTnYUvKm
5E3Jm7LaUvJOyJ6SNyVvSt6Ugy0lb0relLwpqy0l74TsKXlT8qbkTTnYUvKm
5E3Jm7LaUvJOyJ6SNyVvSt6Ugy0lb0relLwpqy0l74TsKXlT8qbkTTnYUvKm
5E3Jm7LaUvJOyJ6SNyVvSt6Ugy0lb0relLwpqy0l74TsKXlT8qbkTTnYUvKm
5E3Jm7LaUvJOXG/auq688p5b15VX3nPruvLKe25dV155z63ryrtxnT6iH/b0
fvolP6LlTcmbkjf1/B2+u931wH9o/ySvvD//HeTtyJuy2lLyTsiekjclb0re
lIMtJW9K3pS8KastJe+E7Cl5U/Km5E052FLypuRNyZuy2lLyTsiekjclb0re
lIMtJW9K3pS8KastJe+E7Cl5U/Km5E052FLypuRNyZuy2lLyTsiekjclb0re
lIMtJW9K3pS8KastJe+E7Cl5U/Km5E052FLypuRNyZuy2lLyTsiekjclb0re
lIMtJW9K3pS8KastJe+E7Cl5U/Km5E052FLypuRNyZuy2lLyTsiekjclb0re
lIMtJW9K3pS8KastJe+E7Cl5U/Km5E052FLypuRNyZuy2lLyTsiekjclb0re
lIMtJW9K3pS8KastJe+E7Cl5U/Km5E052FLypuRNyZuy2lLyTsiekjclb0re
lIMtJW9K3pS8KastJe+E7Cl5U/Km5E052FLypuRNyZuy2lLyTsiekjclb0re
lIMtJW9K3pS8KastJe+E7Cl5U/Km5E052FLypuRNyZuy2lLyTlxv2rquvPKe
W9eVV95z67ryyntuXVdeec+t68q7cZ0+h//X7Y47nH3wNWSXNyVvSt7U9cB/
kP5t5j37dePsbx1/yUf+uTsyvSnTm7LaUvJOyJ6SNyVvSt6UezjlHk6Z3pTp
TVltKXknZE/Jm5I3JW/KPZxyD6dMb8r0pqy2lLwTsqfkTcmbkjflHk65h1Om
N2V6U1ZbSt4J2VPypuRNyZtyD6fcwynTmzK9KastJe+E7Cl5U/Km5E25h1Pu
4ZTpTZnelNWWkndC9pS8KXlT8qbcwyn3cMr0pkxvympLyTshe0relLwpeVPu
4ZR7OGV6U6Y3ZbWl5J2QPSVvSt6UvCn3cMo9nDK9KdObstpS8k7InpI3JW9K
3pR7OOUeTpnelOlNWW0peSdkT8mbkjclb8o9nHIPp0xvyvSmrLaUvBOyp+RN
yZuSN+UeTrmHU6Y3ZXpTVltK3gnZU/Km5E3Jm3IPp9zDKdObMr0pqy0l74Ts
KXlT8qbkTbmHU+7hlOlNmd6U1ZaSd0L2lLwpeVPyptzDKfdwyvSmTG/KakvJ
OyF7St6UvCl5U+7hlHs4ZXpTpjdltaXknZA9JW9K3pS8Kfdwyj2cMr0p05uy
2lLyTsiekjclb0relHs45R5Omd6U6U1ZbSl5J643bV1XXnnPrevKK++5dV15
5T23riuvvOfWdeXduE4f0f/zdscdzj74GrLLm5I3JW/qOv3H7w/7TeTpF57X
j0cd05s6znv2t46/5CP/3B1ZbSl5J2RPyZuSNyVvyj2c8ppLmd6U11zKakvJ
OyF7St6UvCl5U+7hlNdcyvSmvOZSVltK3gnZU/Km5E3Jm3IPp7zmUqY35TWX
stpS8k7InpI3JW9K3pR7OOU1lzK9Ka+5lNWWkndC9pS8KXlT8qbcwymvuZTp
TXnNpay2lLwTsqfkTcmbkjflHk55zaVMb8prLmW1peSdkD0lb0relLwp93DK
ay5lelNecymrLSXvhOwpeVPypuRNuYdTXnMp05vymktZbSl5J2RPyZuSNyVv
yj2c8ppLmd6U11zKakvJOyF7St6UvCl5U+7hlNdcyvSmvOZSVltK3gnZU/Km
5E3Jm3IPp7zmUqY35TWXstpS8k7InpI3JW9K3pR7OOU1lzK9Ka+5lNWWkndC
9pS8KXlT8qbcwymvuZTpTXnNpay2lLwTsqfkTcmbkjflHk55zaVMb8prLmW1
peSdkD0lb0relLwp93DKay5lelNecymrLSXvhOwpeVPypuRNuYdTXnMp05vy
mktZbSl5J643bV1XXnnPrevKK++5dV155T23riuvvOfWdeXduE4f0f/jdscd
zj74GrLLm5I3JW/q8uNR6fLjUcn0po6n9+xvHX/JR/65O7LaUvJOyJ6SNyVv
St6UezjlNZcyvSmvuZTVlpJ3QvaUvCl5U/Km3MMpr7mU6U15zaWstpS8E7Kn
5E3Jm5I35R5Oec2lTG/Kay5ltaXknZA9JW9K3pS8KfdwymsuZXpTXnMpqy0l
74TsKXlT8qbkTbmHU15zKdOb8ppLWW0peSdkT8mbkjclb8o9nPKaS5nelNdc
ympLyTshe0relLwpeVPu4ZTXXMr0przmUlZbSt4J2VPypuRNyZtyD6e85lKm
N+U1l7LaUvJOyJ6SNyVvSt6UezjlNZcyvSmvuZTVlpJ3QvaUvCl5U/Km3MMp
r7mU6U15zaWstpS8E7Kn5E3Jm5I35R5Oec2lTG/Kay5ltaXknZA9JW9K3pS8
KfdwymsuZXpTXnMpqy0l74TsKXlT8qbkTbmHU15zKdOb8ppLWW0peSdkT8mb
kjclb8o9nPKaS5nelNdcympLyTshe0relLwpeVPu4ZTXXMr0przmUlZbSt4J
2VPypuRNyZtyD6e85lKmN+U1l7LaUvJOXG/auq688p5b15VX3nPruvLKe25d
V155z63ryrtxnT6i//vtjjucffA1ZJc3JW9K3tTlx6PScd6zv3X8JR/55+7I
9KZMb8pqS8k7IXtK3pS8KXlT7uGUezhlelOmN2W1peSdkD0lb0relLwp93DK
PZwyvSnTm7LaUvJOyJ6SNyVvSt6UezjlHk6Z3pTpTVltKXknZE/Jm5I3JW/K
PZxyD6dMb8r0pqy2lLwTsqfkTcmbkjflHk65h1OmN2V6U1ZbSt4J2VPypuRN
yZtyD6fcwynTmzK9KastJe+E7Cl5U/Km5E25h1Pu4ZTpTZnelNWWkndC9pS8
KXlT8qbcwyn3cMr0pkxvympLyTshe0relLwpeVPu4ZR7OGV6U6Y3ZbWl5J2Q
PSVvSt6UvCn3cMo9nDK9KdObstpS8k7InpI3JW9K3pR7OOUeTpnelOlNWW0p
eSdkT8mbkjclb8o9nHIPp0xvyvSmrLaUvBOyp+RNyZuSN+UeTrmHU6Y3ZXpT
VltK3gnZU/Km5E3Jm3IPp9zDKdObMr0pqy0l74TsKXlT8qbkTbmHU+7hlOlN
md6U1ZaSd0L2lLwpeVPyptzDKfdwyvSmTG/KakvJOyF7St6UvCl5U+7hlHs4
ZXpTpjdltaXknbjetHVdeeU9t64rr7zn1nXllffcuq688p5b15V34zp9RP+3
2x13OPvga8gub0relLyp64G/U8gr733Jm7r8Nley2lLyTsiekjclb0relHs4
JW9K3pTXXMpqS8k7IXtK3pS8KXlT7uGUvCl5U15zKastJe+E7Cl5U/Km5E25
h1PypuRNec2lrLaUvBOyp+RNyZuSN+UeTsmbkjflNZey2lLyTsiekjclb0re
lHs4JW9K3pTXXMpqS8k7IXtK3pS8KXlT7uGUvCl5U15zKastJe+E7Cl5U/Km
5E25h1PypuRNec2lrLaUvBOyp+RNyZuSN+UeTsmbkjflNZey2lLyTsiekjcl
b0relHs4JW9K3pTXXMpqS8k7IXtK3pS8KXlT7uGUvCl5U15zKastJe+E7Cl5
U/Km5E25h1PypuRNec2lrLaUvBOyp+RNyZuSN+UeTsmbkjflNZey2lLyTsie
kjclb0relHs4JW9K3pTXXMpqS8k7IXtK3pS8KXlT7uGUvCl5U15zKastJe+E
7Cl5U/Km5E25h1PypuRNec2lrLaUvBOyp+RNyZuSN+UeTsmbkjflNZey2lLy
Tlxv2rquvPKeW9eVV95z67ryyntuXVdeec+t68q7cZ0+ov/r7Y47nH3wNWSX
NyVvSt7UdfqP3x/2m8iTvPL+/HeQt3Oc9+xvHX/JR/65O7LaUvJOyJ6SNyVv
St6Uezglb0relNdcympLyTshe0relLwpeVPu4ZS8KXlTXnMpqy0l74TsKXlT
8qbkTbmHU/Km5E15zaWstpS8E7Kn5E3Jm5I35R5OyZuSN+U1l7LaUvJOyJ6S
NyVvSt6Uezglb0relNdcympLyTshe0relLwpeVPu4ZS8KXlTXnMpqy0l74Ts
KXlT8qbkTbmHU/Km5E15zaWstpS8E7Kn5E3Jm5I35R5OyZuSN+U1l7LaUvJO
yJ6SNyVvSt6Uezglb0relNdcympLyTshe0relLwpeVPu4ZS8KXlTXnMpqy0l
74TsKXlT8qbkTbmHU/Km5E15zaWstpS8E7Kn5E3Jm5I35R5OyZuSN+U1l7La
UvJOyJ6SNyVvSt6Uezglb0relNdcympLyTshe0relLwpeVPu4ZS8KXlTXnMp
qy0l74TsKXlT8qbkTbmHU/Km5E15zaWstpS8E7Kn5E3Jm5I35R5OyZuSN+U1
l7LaUvJOXG/auq688p5b15VX3nPruvLKe25dV155z63ryrtxnT6i/8vtjjuc
ffA1ZJc3JW9K3tT1wN8pvs28ft3omN6U6U1ZbSl5J2RPyZuSNyVvyj2ccg+n
TG/K9KastpS8E7Kn5E3Jm5I35R5OuYdTpjdlelNWW0reCdlT8qbkTcmbcg+n
3MMp05syvSmrLSXvhOwpeVPypuRNuYdT7uGU6U2Z3pTVlpJ3QvaUvCl5U/Km
3MMp93DK9KZMb8pqS8k7IXtK3pS8KXlT7uGUezhlelOmN2W1peSdkD0lb0re
lLwp93DKPZwyvSnTm7LaUvJOyJ6SNyVvSt6UezjlHk6Z3pTpTVltKXknZE/J
m5I3JW/KPZxyD6dMb8r0pqy2lLwTsqfkTcmbkjflHk65h1OmN2V6U1ZbSt4J
2VPypuRNyZtyD6fcwynTmzK9KastJe+E7Cl5U/Km5E25h1Pu4ZTpTZnelNWW
kndC9pS8KXlT8qbcwyn3cMr0pkxvympLyTshe0relLwpeVPu4ZR7OGV6U6Y3
ZbWl5J2QPSVvSt6UvCn3cMo9nDK9KdObstpS8k7InpI3JW9K3pR7OOUeTpne
lOlNWW0peSdkT8mbkjclb8o9nHIPp0xvyvSmrLaUvBPXm7auK6+859Z15ZX3
3LquvPKeW9eVV95z67ryblynj+j/fLvjDmcffA3Z5U3Jm5I3dZ3+4/eH/Sby
9AvP68ejjulNHec9+1vHX/KRf+6OrLaUvBOyp+RNyZuSN+UeTnnNpUxvymsu
ZbWl5J2QPSVvSt6UvCn3cMprLmV6U15zKastJe+E7Cl5U/Km5E25h1NecynT
m/KaS1ltKXknZE/Jm5I3JW/KPZzymkuZ3pTXXMpqS8k7IXtK3pS8KXlT7uGU
11zK9Ka85lJWW0reCdlT8qbkTcmbcg+nvOZSpjflNZey2lLyTsiekjclb0re
lHs45TWXMr0pr7mU1ZaSd0L2lLwpeVPyptzDKa+5lOlNec2lrLaUvBOyp+RN
yZuSN+UeTnnNpUxvymsuZbWl5J2QPSVvSt6UvCn3cMprLmV6U15zKastJe+E
7Cl5U/Km5E25h1NecynTm/KaS1ltKXknZE/Jm5I3JW/KPZzymkuZ3pTXXMpq
S8k7IXtK3pS8KXlT7uGU11zK9Ka85lJWW0reCdlT8qbkTcmbcg+nvOZSpjfl
NZey2lLyTsiekjclb0relHs45TWXMr0pr7mU1ZaSd0L2lLwpeVPyptzDKa+5
lOlNec2lrLaUvBPXm7auK6+859Z15ZX33LquvPKeW9eVV95z67ryblynj+j/
dLvjDmcffA3Z5U3Jm5I3dfnxqHT58ahkelPH03v2t46/5CP/3B1ZbSl5J2RP
yZuSNyVvyj2c8ppLmd6U11zKakvJOyF7St6UvCl5U+7hlNdcyvSmvOZSVltK
3gnZU/Km5E3Jm3IPp7zmUqY35TWXstpS8k7InpI3JW9K3pR7OOU1lzK9Ka+5
lNWWkndC9pS8KXlT8qbcwymvuZTpTXnNpay2lLwTsqfkTcmbkjflHk55zaVM
b8prLmW1peSdkD0lb0relLwp93DKay5lelNecymrLSXvhOwpeVPypuRNuYdT
XnMp05vymktZbSl5J2RPyZuSNyVvyj2c8ppLmd6U11zKakvJOyF7St6UvCl5
U+7hlNdcyvSmvOZSVltK3gnZU/Km5E3Jm3IPp7zmUqY35TWXstpS8k7InpI3
JW9K3pR7OOU1lzK9Ka+5lNWWkndC9pS8KXlT8qbcwymvuZTpTXnNpay2lLwT
sqfkTcmbkjflHk55zaVMb8prLmW1peSdkD0lb0relLwp93DKay5lelNecymr
LSXvhOwpeVPypuRNuYdTXnMp05vymktZbSl5J643bV1XXnnPrevKK++5dV15
5T23riuvvOfWdeXduE4f0f/xdscdzj74GrLLm5I3JW/q8uNR6Tjv2d86/pKP
/HN3ZHpTpjdltaXknZA9JW9K3pS8Kfdwyj2cMr0p05uy2lLyTsiekjclb0re
lHs45R5Omd6U6U1ZbSl5J2RPyZuSNyVvyj2ccg+nTG/K9KastpS8E7Kn5E3J
m5I35R5OuYdTpjdlelNWW0reCdlT8qbkTcmbcg+n3MMp05syvSmrLSXvhOwp
eVPypuRNuYdT7uGU6U2Z3pTVlpJ3QvaUvCl5U/Km3MMp93DK9KZMb8pqS8k7
IXtK3pS8KXlT7uGUezhlelOmN2W1peSdkD0lb0relLwp93DKPZwyvSnTm7La
UvJOyJ6SNyVvSt6UezjlHk6Z3pTpTVltKXknZE/Jm5I3JW/KPZxyD6dMb8r0
pqy2lLwTsqfkTcmbkjflHk65h1OmN2V6U1ZbSt4J2VPypuRNyZtyD6fcwynT
mzK9KastJe+E7Cl5U/Km5E25h1Pu4ZTpTZnelNWWkndC9pS8KXlT8qbcwyn3
cMr0pkxvympLyTshe0relLwpeVPu4ZR7OGV6U6Y3ZbWl5J2QPSVvSt6UvCn3
cMo9nDK9KdObstpS8k5cb9q6rrzynlvXlVfec+u68sp7bl1XXnnPrevKu3Gd
PqL//e2OO5x98DVklzclb0re1PXA3ynklfe+5E1dfpsrWW0peSdkT8mbkjcl
b8o9nJI3JW/Kay5ltaXknZA9JW9K3pS8KfdwSt6UvCmvuZTVlpJ3QvaUvCl5
U/Km3MMpeVPyprzmUlZbSt4J2VPypuRNyZtyD6fkTcmb8ppLWW0peSdkT8mb
kjclb8o9nJI3JW/Kay5ltaXknZA9JW9K3pS8KfdwSt6UvCmvuZTVlpJ3QvaU
vCl5U/Km3MMpeVPyprzmUlZbSt4J2VPypuRNyZtyD6fkTcmb8ppLWW0peSdk
T8mbkjclb8o9nJI3JW/Kay5ltaXknZA9JW9K3pS8KfdwSt6UvCmvuZTVlpJ3
QvaUvCl5U/Km3MMpeVPyprzmUlZbSt4J2VPypuRNyZtyD6fkTcmb8ppLWW0p
eSdkT8mbkjclb8o9nJI3JW/Kay5ltaXknZA9JW9K3pS8KfdwSt6UvCmvuZTV
lpJ3QvaUvCl5U/Km3MMpeVPyprzmUlZbSt4J2VPypuRNyZtyD6fkTcmb8ppL
WW0peSeuN21dV155z63ryivvuXVdeeU9t64rr7zn1nXl3bhOH9H/7nbHHc4+
+Bqyy5uSNyVv6jr9x+8P+03kSV55f/47yNs5znv2t46/5CP/3B1ZbSl5J2RP
yZuSNyVvyj2ckjclb8prLmW1peSdkD0lb0relLwp93BK3pS8Ka+5lNWWkndC
9pS8KXlT8qbcwyl5U/KmvOZSVltK3gnZU/Km5E3Jm3IPp+RNyZvymktZbSl5
J2RPyZuSNyVvyj2ckjclb8prLmW1peSdkD0lb0relLwp93BK3pS8Ka+5lNWW
kndC9pS8KXlT8qbcwyl5U/KmvOZSVltK3gnZU/Km5E3Jm3IPp+RNyZvymktZ
bSl5J2RPyZuSNyVvyj2ckjclb8prLmW1peSdkD0lb0relLwp93BK3pS8Ka+5
lNWWkndC9pS8KXlT8qbcwyl5U/KmvOZSVltK3gnZU/Km5E3Jm3IPp+RNyZvy
mktZbSl5J2RPyZuSNyVvyj2ckjclb8prLmW1peSdkD0lb0relLwp93BK3pS8
Ka+5lNWWkndC9pS8KXlT8qbcwyl5U/KmvOZSVltK3gnZU/Km5E3Jm3IPp+RN
yZvymktZbSl5J643bV1XXnnPrevKK++5dV155T23riuvvOfWdeXduE4f0f/2
dscdzj74GrLLm5I3JW/qeuDvFN9mXr9udExvyvSmrLaUvBOyp+RNyZuSN+Ue
TrmHU6Y3ZXpTVltK3gnZU/Km5E3Jm3IPp9zDKdObMr0pqy0l74TsKXlT8qbk
TbmHU+7hlOlNmd6U1ZaSd0L2lLwpeVPyptzDKfdwyvSmTG/KakvJOyF7St6U
vCl5U+7hlHs4ZXpTpjdltaXknZA9JW9K3pS8Kfdwyj2cMr0p05uy2lLyTsie
kjclb0relHs45R5Omd6U6U1ZbSl57+HTp4/PPn366g/InpI3JW9K3pR7OOUe
TpnelOlNWW0peX9w83vstz6+f/fu3fsPzx+95bOyp+RNyZuSN+UeTrmHU6Y3
ZXpTVltK3t/6/j334f33L7Ovf5Z9+vDu3Q3/8t+RPSVvSt6UvCn3cMo9nDK9
KdObstpS8v7Yx/fv3n/8un/p82Pua/+lPyJ7St6UvCl5U+7hlHs4ZXpTpjdl
taXkfeHr32jPD7+jX+Zkj8mbkjclb8o9nHIPp0xvyvSmrLaUvC999SPNa+5u
n7oveVPypuRNuYdT7uGU6U2Z3pTVlpL3Ja+5z1/yYZ+6L3lT8qbkTbmHU+7h
lOlNmd6U1ZaS9yWvuc9f8mGfui95U/Km5E25h1Pu4ZTpTZnelNWWkvclr7nP
X/Jhn7oveVPypuRNuYdT7uGU6U2Z3pTVlpL3Ja+5z1/yYZ+6L3lT8qbkTbmH
U+7hlOlNmd6U1ZaS96XHvObesKMk97QO0FrXlVfec+u68sp7bl1XXnnPrevK
K++5syav+be5h/1zuadv8p9RyPuV30Hejryp6/Qfv8v7ld/hYaG+zbymt3Oc
9+xvHX/JR/65O7LaUvK+5DX3+Us+7FP3JW9K3pS8KfdwymsuZXpTXnMpqy0l
70tec5+/5MM+dV/ypuRNyZtyD6e85lKmN+U1l7LaUvK+5DX3+Us+7FP3JW9K
3pS8KfdwymsuZXpTXnMpqy0l70tec5+/5MM+dV/ypuRNyZtyD6e85lKmN+U1
l7LaUvK+9LWPtE8f3r3/ePYnZE/Jm5I3JW/KPZzymkuZ3pTXXMpqS8n70le+
0p4ffaePOdlb8qbkTcmbcg+nvOZSpjflNZey2lLy/oTn59zv/XXu08cP79+9
e3/4n7L8nuwpeVPypuRNuYdTXnMp05vymktZbSl5f9r3D7r3Hz5++qkH26fv
33Lv3n88f8zJ3pI3JW9K3pR7OOU1lzK9Ka+5lNWWkvdnfPrh57eff7L9v37A
+71kT8mbkjclb8o9nPKaS5nelNdcympLyftTvu6l5n8Kyr0+9fH9u+d/T/z/
+s+u/vg7yPs78qafkjf9VJDXPfw7Qd6Hhfo285re33k1ec/+1vGXfNCnrLb0
U/LGn/re1/4PtfTfUHCfT318/9t/Wzz/tfPH30Hez+RNPyVv+qkir3v4syLv
w0J9m3lN72evJ+/Z3zr+ko/5lNWWfkre+lNP/vvmvviSj/rUb+faVCefkjf9
lLzpp+6f9+xgk/crv8PDQn2beU3vF15L3rO/dfwlH/Upqy39lLztp5685r74
kg/71F+NtaluPiVv+il500/dPa97+Et3z/uwUN9mXtP7pVeS9+xvHX/Jh33K
aks/JW/6qSevuS++5GM+9emH//zw3YZa3v+LvOmn5E0/VeR1D39W5H1YqG8z
r+n97PXkPftbx1/yMZ+y2tJPyVt/6slr7osvWX/q04d3n/8t8fy/i/2nvoO8
T/LGn5I3/VSX9+xgk/crv8PDQn2beU3v0+vLe/a3jr9k/SmrLf2UvI/51JPX
3Bdfsv7UD1P9+/+rIM6+g7xP8safkjf9VJfXPfxU5n1YqG8zr+l9en15z/7W
8ZesP2W1pZ+S9zGfenrUa+4NO0pyT+sArXVdeeU9t64rr7zn1nXllffcuq68
8p47a/Kaf5v7y9sddzj74PGfuyN5U/Km5E1dfjwqXX48Kpne1PH0nv2t4y/5
yD93R1ZbSt6XvOY+f8mHfeq+5E3Jm5I35R5Oec2lTG/Kay5ltaXkfclr7vOX
fNin7kvelLwpeVPu4ZTXXMr0przmUlZbSt6XvOY+f8mHfeq+5E3Jm5I35R5O
ec2lTG/Kay5ltaXkfclr7vOXfNin7kvelLwpeVPu4ZTXXMr0przmUlZbSt6X
vvqR9unD6X9XhOwpeVPypuRNuYdTXnMp05vymktZbSl5X/r6n9ye/5VnzznZ
U/Km5E3Jm3IPp7zmUqY35TWXstpS8v7Ypw/vbvjPTz6/554fdDf/xy1lT8mb
kjclb8o9nPKaS5nelNdcympLyfulTx+fn3K3/v+F+/T8qec33bv3N3xO9pS8
KXlT8qbcwymvuZTpTXnNpay2lLw/+PT9g+z9+w+3/8x2RPaUvCl5U/Km3MMp
r7mU6U15zaWstpS8E7Kn5E3Jm5I35R5Oec2lTG/Kay5ltaXknZA9JW9K3pS8
KfdwymsuZXpTXnMpqy0l74TsKXlT8qbkTbmHU15zKdOb8ppLWW0peSdkT8mb
kjclb8o9nPKaS5nelNdcympLyTshe0relLwpeVPu4ZTXXMr0przmUlZbSt4J
2VPypuRNyZtyD6e85lKmN+U1l7LaUvJOyJ6SNyVvSt6UezjlNZcyvSmvuZTV
lpJ3QvaUvCl5U/Km3MMpr7mU6U15zaWstpS8E9ebtq4rr7zn1nXllffcuq68
8p5b15VX3nPruvJuXKeP6F/f7rjD2QdfQ3Z5U/Km5E1dfjwqHec9+1vHX/KR
f+6OTG/K9KastpS8E7Kn5E3Jm5I35R5OuYdTpjdlelNWW0reCdlT8qbkTcmb
cg+n3MMp05syvSmrLSXvhOwpeVPypuRNuYdT7uGU6U2Z3pTVlpJ3QvaUvCl5
U/Km3MMp93DK9KZMb8pqS8k7IXtK3pS8KXlT7uGUezhlelOmN2W1peSdkD0l
b0relLwp93DKPZwyvSnTm7LaUvJOyJ6SNyVvSt6UezjlHk6Z3pTpTVltKXkn
ZE/Jm5I3JW/KPZxyD6dMb8r0pqy2lLwTsqfkTcmbkjflHk65h1OmN2V6U1Zb
St4J2VPypuRNyZtyD6fcwynTmzK9KastJe+E7Cl5U/Km5E25h1Pu4ZTpTZne
lNWWkndC9pS8KXlT8qbcwyn3cMr0pkxvympLyTshe0relLwpeVPu4ZR7OGV6
U6Y3ZbWl5J2QPSVvSt6UvCn3cMo9nDK9KdObstpS8k7InpI3JW9K3pR7OOUe
TpnelOlNWW0peSdkT8mbkjclb8o9nHIPp0xvyvSmrLaUvBPXm7auK6+859Z1
5ZX33LquvPKeW9eVV95z67ryblynj+j3tzvucPbB15Bd3pS8KXlT1wN/p5BX
3vuSN3X5ba5ktaXknZA9JW9K3pS8KfdwSt6UvCmvuZTVlpJ3QvaUvCl5U/Km
3MMpeVPyprzmUlZbSt4J2VPypuRNyZtyD6fkTcmb8ppLWW0peSdkT8mbkjcl
b8o9nJI3JW/Kay5ltaXknZA9JW9K3pS8KfdwSt6UvCmvuZTVlpJ3QvaUvCl5
U/Km3MMpeVPyprzmUlZbSt4J2VPypuRNyZtyD6fkTcmb8ppLWW0peSdkT8mb
kjclb8o9nJI3JW/Kay5ltaXknZA9JW9K3pS8KfdwSt6UvCmvuZTVlpJ3QvaU
vCl5U/Km3MMpeVPyprzmUlZbSt4J2VPypuRNyZtyD6fkTcmb8ppLWW0peSdk
T8mbkjclb8o9nJI3JW/Kay5ltaXknZA9JW9K3pS8KfdwSt6UvCmvuZTVlpJ3
QvaUvCl5U/Km3MMpeVPyprzmUlZbSt4J2VPypuRNyZtyD6fkTcmb8ppLWW0p
eSdkT8mbkjclb8o9nJI3JW/Kay5ltaXknbjetHVdeeU9t64rr7zn1nXllffc
uq688p5b15V34zp9RP/T2x13OPvga8gub0relLyp6/Qfvz/sN5EneeX9+e8g
b+c479nfOv6Sj/xzd2S1peSdkD0lb0relLwp93BK3pS8Ka+5lNWWkndC9pS8
KXlT8qbcwyl5U/KmvOZSVltK3gnZU/Km5E3Jm3IPp+RNyZvymktZbSl5J2RP
yZuSNyVvyj2ckjclb8prLmW1peSdkD0lb0relLwp93BK3pS8Ka+5lNWWkndC
9pS8KXlT8qbcwyl5U/KmvOZSVltK3gnZU/Km5E3Jm3IPp+RNyZvymktZbSl5
J2RPyZuSNyVvyj2ckjclb8prLmW1peSdkD0lb0relLwp93BK3pS8Ka+5lNWW
kndC9pS8KXlT8qbcwyl5U/KmvOZSVltK3gnZU/Km5E3Jm3IPp+RNyZvymktZ
bSl5J2RPyZuSNyVvyj2ckjclb8prLmW1peSdkD0lb0relLwp93BK3pS8Ka+5
lNWWkndC9pS8KXlT8qbcwyl5U/KmvOZSVltK3gnZU/Km5E3Jm3IPp+RNyZvy
mktZbSl5J2RPyZuSNyVvyj2ckjclb8prLmW1peSdkD0lb0relLwp93BK3pS8
Ka+5lNWWknfietPWdeWV99y6rrzynlvXlVfec+u68sp7bl1X3o3r9BH9J7c7
7nD2wdeQXd6UvCl5U9cDf6f4NvP6daNjelOmN2W1peSdkD0lb0relLwp93DK
PZwyvSnTm7LaUvJOyJ6SNyVvSt6UezjlHk6Z3pTpTVltKXknZE/Jm5I3JW/K
PZxyD6dMb8r0pqy2lLwTsqfkTcmbkjflHk65h1OmN2V6U1ZbSt4J2VPypuRN
yZtyD6fcwynTmzK9KastJe+E7Cl5U/Km5E25h1Pu4ZTpTZnelNWWkndC9pS8
KXlT8qbcwyn3cMr0pkxvympLyTshe0relLwpeVPu4ZR7OGV6U6Y3ZbWl5J2Q
PSVvSt6UvCn3cMo9nDK9KdObstpS8k7InpI3JW9K3pR7OOUeTpnelOlNWW0p
eSdkT8mbkjclb8o9nHIPp0xvyvSmrLaUvBOyp+RNyZuSN+UeTrmHU6Y3ZXpT
VltK3gnZU/Km5E3Jm3IPp9zDKdObMr0pqy0l74TsKXlT8qbkTbmHU+7hlOlN
md6U1ZaSd0L2lLwpeVPyptzDKfdwyvSmTG/KakvJOyF7St6UvCl5U+7hlHs4
ZXpTpjdltaXknbjetHVdeeU9t64rr7zn1nXllffcuq688p5b15V34zp9RP/j
2x13OPvga8gub0relLyp6/Qfvz/sN5GnX3hePx51TG/qOO/Z3zr+ko/8c3dk
taXknZA9JW9K3pS8KfdwymsuZXpTXnMpqy0l74TsKXlT8qbkTbmHU15zKdOb
8ppLWW0peSdkT8mbkjclb8o9nPKaS5nelNdcympLyTshe0relLwpeVPu4ZTX
XMr0przmUlZbSt4J2VPypuRNyZtyD6e85lKmN+U1l7LaUvJOyJ6SNyVvSt6U
ezjlNZcyvSmvuZTVlpJ3QvaUvCl5U/Km3MMpr7mU6U15zaWstpS8E7Kn5E3J
m5I35R5Oec2lTG/Kay5ltaXknZA9JW9K3pS8KfdwymsuZXpTXnMpqy0l74Ts
KXlT8qbkTbmHU15zKdOb8ppLWW0peSdkT8mbkjclb8o9nPKaS5nelNdcympL
yTshe0relLwpeVPu4ZTXXMr0przmUlZbSt4J2VPypuRNyZtyD6e85lKmN+U1
l7LaUvJOyJ6SNyVvSt6UezjlNZcyvSmvuZTVlpJ3QvaUvCl5U/Km3MMpr7mU
6U15zaWstpS8E7Kn5E3Jm5I35R5Oec2lTG/Kay5ltaXknbjetHVdeeU9t64r
r7zn1nXllffcuq688p5b15V34zp9RP/R7Y47nH3wNWSXNyVvSt7U5cej0uXH
o5LpTR1P79nfOv6Sj/xzd2S1peSdkD0lb0relLwp93DKay5lelNecymrLSXv
hOwpeVPypuRNuYdTXnMp05vymktZbSl5J2RPyZuSNyVvyj2c8ppLmd6U11zK
akvJOyF7St6UvCl5U+7hlNdcyvSmvOZSVltK3gnZU/Km5E3Jm3IPp7zmUqY3
5TWXstpS8k7InpI3JW9K3pR7OOU1lzK9Ka+5lNWWkndC9pS8KXlT8qbcwymv
uZTpTXnNpay2lLwTsqfkTcmbkjflHk55zaVMb8prLmW1peSdkD0lb0relLwp
93DKay5lelNecymrLSXvhOwpeVPypuRNuYdTXnMp05vymktZbSl5J2RPyZuS
NyVvyj2c8ppLmd6U11zKakvJOyF7St6UvCl5U+7hlNdcyvSmvOZSVltK3gnZ
U/Km5E3Jm3IPp7zmUqY35TWXstpS8k7InpI3JW9K3pR7OOU1lzK9Ka+5lNWW
kndC9pS8KXlT8qbcwymvuZTpTXnNpay2lLwTsqfkTcmbkjflHk55zaVMb8pr
LmW1peSdkD0lb0relLwp93DKay5lelNecymrLSXvxPWmrevKK++5dV155T23
riuvvOfWdeWV99y6rrwb1+kj+h/c7rjD2QdfQ3Z5U/Km5E1dfjwqHec9+1vH
X/KRf+6OTG/K9KastpS8E7Kn5E3Jm5I35R5OuYdTpjdlelNWW0reCdlT8qbk
Tcmbcg+n3MMp05syvSmrLSXvhOwpeVPypuRNuYdT7uGU6U2Z3pTVlpJ3QvaU
vCl5U/Km3MMp93DK9KZMb8pqS8k7IXtK3pS8KXlT7uGUezhlelOmN2W1peSd
kD0lb0relLwp93DKPZwyvSnTm7LaUvJOyJ6SNyVvSt6UezjlHk6Z3pTpTVlt
KXknZE/Jm5I3JW/KPZxyD6dMb8r0pqy2lLwTsqfkTcmbkjflHk65h1OmN2V6
U1ZbSt4J2VPypuRNyZtyD6fcwynTmzK9KastJe+E7Cl5U/Km5E25h1Pu4ZTp
TZnelNWWkndC9pS8KXlT8qbcwyn3cMr0pkxvympLyTshe0relLwpeVPu4ZR7
OGV6U6Y3ZbWl5J2QPSVvSt6UvCn3cMo9nDK9KdObstpS8k7InpI3JW9K3pR7
OOUeTpnelOlNWW0peSdkT8mbkjclb8o9nHIPp0xvyvSmrLaUvBPXm7auK6+8
59Z15ZX33LquvPKeW9eVV95z67ryblynj+i/d7vjDmcffA3Z5U3Jm5I3dT3w
dwp55b0veVOX3+ZKVltK3gnZU/Km5E3Jm3IPp+RNyZvymktZbSl5J2RPyZuS
NyVvyj2ckjclb8prLmW1peSdkD0lb0relLwp93BK3pS8Ka+5lNWWkndC9pS8
KXlT8qbcwyl5U/KmvOZSVltK3gnZU/Km5E3Jm3IPp+RNyZvymktZbSl5J2RP
yZuSNyVvyj2ckjclb8prLmW1peSdkD0lb0relLwp93BK3pS8Ka+5lNWWkndC
9pS8KXlT8qbcwyl5U/KmvOZSVltK3gnZU/Km5E3Jm3IPp+RNyZvymktZbSl5
J2RPyZuSNyVvyj2ckjclb8prLmW1peSdkD0lb0relLwp93BK3pS8Ka+5lNWW
kndC9pS8KXlT8qbcwyl5U/KmvOZSVltK3gnZU/Km5E3Jm3IPp+RNyZvymktZ
bSl5J2RPyZuSNyVvyj2ckjclb8prLmW1peSdkD0lb0relLwp93BK3pS8Ka+5
lNWWkndC9pS8KXlT8qbcwyl5U/KmvOZSVltK3onrTVvXlVfec+u68sp7bl1X
XnnPrevKK++5dV15N67TR/Tfvd1xh7MPvobs8qbkTcmbuk7/8fvDfhN5klfe
n/8O8naO8579reMv+cg/d0dWW0reCdlT8qbkTcmbcg+n5E3Jm/KaS1ltKXkn
ZE/Jm5I3JW/KPZySNyVvymsuZbWl5J2QPSVvSt6UvCn3cErelLwpr7mU1ZaS
d0L2lLwpeVPyptzDKXlT8qa85lJWW0reCdlT8qbkTcmbcg+n5E3Jm/KaS1lt
KXknZE/Jm5I3JW/KPZySNyVvymsuZbWl5J2QPSVvSt6UvCn3cErelLwpr7mU
1ZaSd0L2lLwpeVPyptzDKXlT8qa85lJWW0reCdlT8qbkTcmbcg+n5E3Jm/Ka
S1ltKXknZE/Jm5I3JW/KPZySNyVvymsuZbWl5J2QPSVvSt6UvCn3cErelLwp
r7mU1ZaSd0L2lLwpeVPyptzDKXlT8qa85lJWW0reCdlT8qbkTcmbcg+n5E3J
m/KaS1ltKXknZE/Jm5I3JW/KPZySNyVvymsuZbWl5J2QPSVvSt6UvCn3cEre
lLwpr7mU1ZaSd0L2lLwpeVPyptzDKXlT8qa85lJWW0reCdlT8qbkTcmbcg+n
5E3Jm/KaS1ltKXknrjdtXVdeec+t68or77l1XXnlPbeuK6+859Z15d24Th/R
f+d2xx3OPvgassubkjclb+p64O8U32Zev250TG/K9KastpS8E7Kn5E3Jm5I3
5R5OuYdTpjdlelNWW0reCdlT8qbkTcmbcg+n3MMp05syvSmrLSXvhOwpeVPy
puRNuYdT7uGU6U2Z3pTVlpJ3QvaUvCl5U/Km3MMp93DK9KZMb8pqS8k7IXtK
3pS8KXlT7uGUezhlelOmN2W1peSdkD0lb0relLwp93DKPZwyvSnTm7LaUvJO
yJ6SNyVvSt6UezjlHk6Z3pTpTVltKXknZE/Jm5I3JW/KPZxyD6dMb8r0pqy2
lLwTsqfkTcmbkjflHk65h1OmN2V6U1ZbSt4J2VPypuRNyZtyD6fcwynTmzK9
KastJe+E7Cl5U/Km5E25h1Pu4ZTpTZnelNWWkndC9pS8KXlT8qbcwyn3cMr0
pkxvympLyTshe0relLwpeVPu4ZR7OGV6U6Y3ZbWl5J2QPSVvSt6UvCn3cMo9
nDK9KdObstpS8k7InpI3JW9K3pR7OOUeTpnelOlNWW0peSdkT8mbkjclb8o9
nHIPp0xvyvSmrLaUvBPXm7auK6+859Z15ZX33LquvPKeW9eVV95z67ryblyn
j+g/vN1xh7MPvobs8qbkTcmbuk7/8fvDfhN5+oXn9eNRx/SmjvOe/a3jL/nI
P3dHVltK3gnZU/Km5E3Jm3IPp7zmUqY35TWXstpS8k7InpI3JW9K3pR7OOU1
lzK9Ka+5lNWWkndC9pS8KXlT8qbcwymvuZTpTXnNpay2lLwTsqfkTcmbkjfl
Hk55zaVMb8prLmW1peSdkD0lb0relLwp93DKay5lelNecymrLSXvhOwpeVPy
puRNuYdTXnMp05vymktZbSl5J2RPyZuSNyVvyj2c8ppLmd6U11zKakvJOyF7
St6UvCl5U+7hlNdcyvSmvOZSVltK3gnZU/Km5E3Jm3IPp7zmUqY35TWXstpS
8k7InpI3JW9K3pR7OOU1lzK9Ka+5lNWWkndC9pS8KXlT8qbcwymvuZTpTXnN
pay2lLwTsqfkTcmbkjflHk55zaVMb8prLmW1peSdkD0lb0relLwp93DKay5l
elNecymrLSXvhOwpeVPypuRNuYdTXnMp05vymktZbSl5J2RPyZuSNyVvyj2c
8ppLmd6U11zKakvJOyF7St6UvCl5U+7hlNdcyvSmvOZSVltK3onrTVvXlVfe
c+u68sp7bl1XXnnPrevKK++5dV15N67TR/Tfut1xh7MPvobs8qbkTcmbuvx4
VLr8eFQyvanj6T37W8df8pF/7o6stpS8E7Kn5E3Jm5I35R5Oec2lTG/Kay5l
taXknZA9JW9K3pS8KfdwymsuZXpTXnMpqy0l74TsKXlT8qbkTbmHU15zKdOb
8ppLWW0peSdkT8mbkjclb8o9nPKaS5nelNdcympLyTshe0relLwpeVPu4ZTX
XMr0przmUlZbSt4J2VPypuRNyZtyD6e85lKmN+U1l7LaUvJOyJ6SNyVvSt6U
ezjlNZcyvSmvuZTVlpJ3QvaUvCl5U/Km3MMpr7mU6U15zaWstpS8E7Kn5E3J
m5I35R5Oec2lTG/Kay5ltaXknZA9JW9K3pS8KfdwymsuZXpTXnMpqy0l74Ts
KXlT8qbkTbmHU15zKdOb8ppLWW0peSdkT8mbkjclb8o9nPKaS5nelNdcympL
yTshe0relLwpeVPu4ZTXXMr0przmUlZbSt4J2VPypuRNyZtyD6e85lKmN+U1
l7LaUvJOyJ6SNyVvSt6UezjlNZcyvSmvuZTVlpJ3QvaUvCl5U/Km3MMpr7mU
6U15zaWstpS8E7Kn5E3Jm5I35R5Oec2lTG/Kay5ltaXknbjetHVdeeU9t64r
r7zn1nXllffcuq688p5b15V34zp9RP/B7Y47nH3wNWSXNyVvSt7U5cej0nHe
s791/CUf+efuyPSmTG/KakvJOyF7St6UvCl5U+7hlHs4ZXpTpjdltaXknZA9
JW9K3pS8Kfdwyj2cMr0p05uy2lLyTsiekjclb0relHs45R5Omd6U6U1ZbSl5
J2RPyZuSNyVvyj2ccg+nTG/K9KastpS8E7Kn5E3Jm5I35R5OuYdTpjdlelNW
W0reCdlT8qbkTcmbcg+n3MMp05syvSmrLSXvhOwpeVPypuRNuYdT7uGU6U2Z
3pTVlpJ3QvaUvCl5U/Km3MMp93DK9KZMb8pqS8k7IXtK3pS8KXlT7uGUezhl
elOmN2W1peSdkD0lb0relLwp93DKPZwyvSnTm7LaUvJOyJ6SNyVvSt6Uezjl
Hk6Z3pTpTVltKXknZE/Jm5I3JW/KPZxyD6dMb8r0pqy2lLwTsqfkTcmbkjfl
Hk65h1OmN2V6U1ZbSt4J2VPypuRNyZtyD6fcwynTmzK9KastJe+E7Cl5U/Km
5E25h1Pu4ZTpTZnelNWWkndC9pS8KXlT8qbcwyn3cMr0pkxvympLyTtxvWnr
uvLKe25dV155z63ryivvuXVdeeU9t64r78Z1+oh+2D84evolP6LlTcmbkjd1
PfB3CnnlvS95U4/8d9FvM6/V1pF3QvaUvCl5U/Km3MMpeVPyprzmUlZbSt4J
2VPypuRNyZtyD6fkTcmb8ppLWW0peSdkT8mbkjclb8o9nJI3JW/Kay5ltaXk
nZA9JW9K3pS8KfdwSt6UvCmvuZTVlpJ3QvaUvCl5U/Km3MMpeVPyprzmUlZb
St4J2VPypuRNyZtyD6fkTcmb8ppLWW0peSdkT8mbkjclb8o9nJI3JW/Kay5l
taXknZA9JW9K3pS8KfdwSt6UvCmvuZTVlpJ3QvaUvCl5U/Km3MMpeVPyprzm
UlZbSt4J2VPypuRNyZtyD6fkTcmb8ppLWW0peSdkT8mbkjclb8o9nJI3JW/K
ay5ltaXknZA9JW9K3pS8KfdwSt6UvCmvuZTVlpJ3QvaUvCl5U/Km3MMpeVPy
przmUlZbSt4J2VPypuRNyZtyD6fkTcmb8ppLWW0peSdkT8mbkjclb8o9nJI3
JW/Kay5ltaXknZA9JW9K3pS8KfdwSt6UvCmvuZTVlpJ34nrT1nXllffcuq68
8p5b15VX3nPruvLKe25dV14AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAACAX5j/A0Kue48=
    "], {{0, 386.4}, {706.8, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->120],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{660.5999999999999, Automatic},
  ImageSizeRaw->{706.8, 386.4},
  PlotRange->{{0, 706.8}, {0, 386.4}}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{
  3.8353532099411297`*^9, 3.8353533223421793`*^9, {3.8353533703944597`*^9, 
   3.8353533887108507`*^9}, {3.835353423069599*^9, 3.83535345227527*^9}, 
   3.835353494196188*^9, 3.835356388172833*^9, {3.835366410966549*^9, 
   3.835366431453925*^9}, 3.835366474707094*^9, 3.83536650510107*^9, 
   3.8353665388123713`*^9},
 CellLabel->"Out[75]=",
 CellID->130977509]
}, Open  ]],

Cell["\<\
Comparing the models, it becomes clear that the register values for two and \
three register Minsky machines are close to identical. The only differences \
are caused by the three-register Minsky machine having one more empty \
register. Hence, a reasonable hypothesis is that the register values for all \
two-register Minsky machines are identical to the register values for all \
three-register Minsky machines.\
\>", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.83535309007026*^9, 3.835353091954928*^9}, 
   3.835353190320354*^9, {3.835353316149839*^9, 3.8353533224436903`*^9}, {
   3.835353441746567*^9, 3.8353534692470503`*^9}, {3.835353505494561*^9, 
   3.835353583750181*^9}, {3.835353677402998*^9, 3.835353763473439*^9}, {
   3.835364565345194*^9, 3.835364567391522*^9}, {3.835364707253674*^9, 
   3.8353647195637617`*^9}},
 CellID->1537720558],

Cell["\<\
To prove this, the steps are: 1) finding the register values for all \
two-register and three-register Minsky machines, 2) eliminating 0's (as they \
represent empty registers), 3) deleting duplicates, and 4) checking if the \
resultant lists of two-register and three-register values are the same.\
\>", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.835353587185687*^9, 3.835353624478899*^9}, {
  3.835353659131078*^9, 3.835353672522539*^9}, {3.8353537656590776`*^9, 
  3.835353970892495*^9}, {3.835364740647028*^9, 3.835364745065937*^9}},
 CellID->667159469],

Cell["\<\
Follow the steps above for two-register and three-register Minsky machines:\
\>", "CodeText",
 TaggingRules->{},
 CellChangeTimes->{{3.835353974734668*^9, 3.8353540054848013`*^9}, 
   3.8353541747301702`*^9, {3.835362471487462*^9, 3.835362476514482*^9}},
 CellID->1419386531],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"minskyTwoValues", "=", 
   RowBox[{"DeleteDuplicates", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{"minskyTwoReg", "[", 
         RowBox[{"[", 
          RowBox[{"n", ",", "All", ",", "2"}], "]"}], "]"}], "]"}], "/.", " ", 
       RowBox[{"0", "\[Rule]", "Nothing"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", 
        RowBox[{"Length", "[", "minskyTwoReg", "]"}]}], "}"}]}], "]"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"minskyThreeValues", "=", 
   RowBox[{"DeleteDuplicates", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{"minskyThreeReg", "[", 
         RowBox[{"[", 
          RowBox[{"n", ",", "All", ",", "2"}], "]"}], "]"}], "]"}], "/.", " ", 
       RowBox[{"0", "\[Rule]", "Nothing"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", 
        RowBox[{"Length", "[", "minskyThreeReg", "]"}]}], "}"}]}], "]"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"minskyTwoValues", "\[Equal]", "minskyThreeValues"}]}], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.8353540145134907`*^9, 3.835354067275659*^9}},
 CellLabel->"In[516]:=",
 CellID->1736768479],

Cell[BoxData["True"], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.835354062353674*^9, 3.835354067787483*^9}},
 CellLabel->"Out[518]=",
 CellID->666773477]
}, Open  ]],

Cell["\<\
Clearly, the values for two-register and three-register Minsky machines are \
identical. When the same steps are used to test the other 4 types of counter \
machines, the results are clear. \
\>", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.8353540720429153`*^9, 3.835354126212685*^9}},
 CellID->766884297],

Cell["\<\
Check if two-register and three-register Shepherdson-Sturgis machines are \
identical:\
\>", "CodeText",
 TaggingRules->{},
 CellChangeTimes->{{3.835354137184472*^9, 3.8353541914417353`*^9}, {
  3.835354872517371*^9, 3.835354879547574*^9}, {3.835362482100491*^9, 
  3.835362485305869*^9}},
 CellID->1377889846],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ssTwoReg", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"cmEvolveList", "[", 
      RowBox[{"#", ",", 
       RowBox[{"counterMachine", "[", "2", "]"}], ",", "30"}], "]"}], " ", 
     "&"}], "/@", " ", 
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"inc", "[", "r1", "]"}], ",", 
          RowBox[{"dec", "[", "r2", "]"}], ",", 
          RowBox[{"clr", "[", "r3", "]"}], ",", 
          RowBox[{"cpy", "[", 
           RowBox[{"r4", ",", "r5"}], "]"}], ",", 
          RowBox[{"jnz", "[", 
           RowBox[{"r6", ",", "z1", ",", "z2"}], "]"}], ",", 
          RowBox[{"j", "[", "z", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"r1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"r2", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"r3", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"r4", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"r5", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"r6", ",", " ", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"z1", ",", " ", "6"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"z2", ",", " ", "6"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"z", ",", "6"}], "}"}]}], "]"}], ",", "8"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ssThreeReg", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"cmEvolveList", "[", 
      RowBox[{"#", ",", 
       RowBox[{"counterMachine", "[", "3", "]"}], ",", "30"}], "]"}], " ", 
     "&"}], "/@", " ", 
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"inc", "[", "r1", "]"}], ",", 
          RowBox[{"dec", "[", "r2", "]"}], ",", 
          RowBox[{"clr", "[", "r3", "]"}], ",", 
          RowBox[{"cpy", "[", 
           RowBox[{"r4", ",", "r5"}], "]"}], ",", 
          RowBox[{"jnz", "[", 
           RowBox[{"r6", ",", "z1", ",", "z2"}], "]"}], ",", 
          RowBox[{"j", "[", "z", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"r1", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"r2", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"r3", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"r4", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"r5", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"r6", ",", " ", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"z1", ",", " ", "6"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"z2", ",", " ", "6"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"z", ",", "6"}], "}"}]}], "]"}], ",", "8"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ssTwoValues", "=", 
   RowBox[{"DeleteDuplicates", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{"ssTwoReg", "[", 
         RowBox[{"[", 
          RowBox[{"n", ",", "All", ",", "2"}], "]"}], "]"}], "]"}], "/.", " ", 
       RowBox[{"0", "\[Rule]", "Nothing"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", 
        RowBox[{"Length", "[", "ssTwoReg", "]"}]}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ssThreeValues", "=", 
   RowBox[{"DeleteDuplicates", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{"ssThreeReg", "[", 
         RowBox[{"[", 
          RowBox[{"n", ",", "All", ",", "2"}], "]"}], "]"}], "]"}], "/.", " ", 
       RowBox[{"0", "\[Rule]", "Nothing"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", 
        RowBox[{"Length", "[", "ssThreeReg", "]"}]}], "}"}]}], "]"}], "]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{"ssTwoValues", "\[Equal]", "ssThreeValues"}]}], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.8353541981782713`*^9, 3.835354305240922*^9}, 
   3.835354335427539*^9, {3.835354457645089*^9, 3.835354465897612*^9}, {
   3.835355061673081*^9, 3.835355062143756*^9}, {3.835355119603363*^9, 
   3.8353551345086527`*^9}},
 CellLabel->"In[47]:=",
 CellID->1299638292],

Cell[BoxData["False"], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.835355199342638*^9, 3.835366342389863*^9},
 CellLabel->"Out[51]=",
 CellID->791229377]
}, Open  ]],

Cell["\<\
Check if two-register and three-register Program machines are identical:\
\>", "CodeText",
 TaggingRules->{},
 CellChangeTimes->{{3.835354884766021*^9, 3.835354889868629*^9}, {
  3.835362489560178*^9, 3.835362494961447*^9}},
 CellID->1916458390],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"programTwoReg", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"cmEvolveList", "[", 
      RowBox[{"#", ",", 
       RowBox[{"counterMachine", "[", "2", "]"}], ",", "30"}], "]"}], " ", 
     "&"}], "/@", " ", 
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"inc", "[", "r1", "]"}], ",", 
          RowBox[{"dec", "[", "r2", "]"}], ",", 
          RowBox[{"jz", "[", 
           RowBox[{"r3", ",", "z1", ",", "z2"}], "]"}]}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"r1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"r2", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"r3", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"z1", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"z2", ",", "3"}], "}"}]}], "]"}], ",", "4"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"programThreeReg", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"cmEvolveList", "[", 
      RowBox[{"#", ",", 
       RowBox[{"counterMachine", "[", "3", "]"}], ",", "30"}], "]"}], " ", 
     "&"}], "/@", " ", 
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"inc", "[", "r1", "]"}], ",", 
          RowBox[{"dec", "[", "r2", "]"}], ",", 
          RowBox[{"jz", "[", 
           RowBox[{"r3", ",", "z1", ",", "z2"}], "]"}]}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"r1", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"r2", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"r3", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"z1", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"z2", ",", "3"}], "}"}]}], "]"}], ",", "4"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"programTwoValues", "=", 
   RowBox[{"DeleteDuplicates", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{"programTwoReg", "[", 
         RowBox[{"[", 
          RowBox[{"n", ",", "All", ",", "2"}], "]"}], "]"}], "]"}], "/.", " ", 
       RowBox[{"0", "\[Rule]", "Nothing"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", 
        RowBox[{"Length", "[", "programTwoReg", "]"}]}], "}"}]}], "]"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"programThreeValues", " ", "=", " ", 
   RowBox[{"DeleteDuplicates", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{"programThreeReg", "[", 
         RowBox[{"[", 
          RowBox[{"n", ",", "All", ",", "2"}], "]"}], "]"}], "]"}], "/.", " ", 
       RowBox[{"0", "\[Rule]", "Nothing"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", 
        RowBox[{"Length", "[", "programThreeReg", "]"}]}], "}"}]}], "]"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"programTwoValues", "\[Equal]", " ", 
  "programThreeValues"}]}], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.835354422807893*^9, 3.83535457095901*^9}, {
  3.835354674286933*^9, 3.8353546851404667`*^9}},
 CellLabel->"In[555]:=",
 CellID->912213857],

Cell[BoxData["True"], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.8353545281494923`*^9, 3.835354572454033*^9}, {
  3.8353546799368773`*^9, 3.835354686026533*^9}},
 CellLabel->"Out[559]=",
 CellID->669262540]
}, Open  ]],

Cell["\<\
Check if two-register and three-register Successor machines are identical:\
\>", "CodeText",
 TaggingRules->{},
 CellChangeTimes->{{3.8353548972531223`*^9, 3.835354899835937*^9}, {
  3.835362499447515*^9, 3.835362503800021*^9}},
 CellID->1467430808],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"succTwoReg", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"cmEvolveList", "[", 
      RowBox[{"#", ",", 
       RowBox[{"counterMachine", "[", "2", "]"}], ",", "30"}], "]"}], " ", 
     "&"}], "/@", " ", 
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"clr", "[", "r1", "]"}], ",", 
          RowBox[{"inc", "[", "r2", "]"}], ",", 
          RowBox[{"je", "[", 
           RowBox[{"r3", ",", "r4", ",", "z1", ",", "z2"}], "]"}]}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"r1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"r2", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"r3", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"r4", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"z1", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"z2", ",", "3"}], "}"}]}], "]"}], ",", "5"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"succThreeReg", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"cmEvolveList", "[", 
      RowBox[{"#", ",", 
       RowBox[{"counterMachine", "[", "3", "]"}], ",", "30"}], "]"}], " ", 
     "&"}], "/@", " ", 
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"clr", "[", "r1", "]"}], ",", 
          RowBox[{"inc", "[", "r2", "]"}], ",", 
          RowBox[{"je", "[", 
           RowBox[{"r3", ",", "r4", ",", "z1", ",", "z2"}], "]"}]}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"r1", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"r2", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"r3", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"r4", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"z1", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"z2", ",", "3"}], "}"}]}], "]"}], ",", "5"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"succTwoValues", "=", 
   RowBox[{"DeleteDuplicates", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{"succTwoReg", "[", 
         RowBox[{"[", 
          RowBox[{"n", ",", "All", ",", "2"}], "]"}], "]"}], "]"}], "/.", " ", 
       RowBox[{"0", "\[Rule]", "Nothing"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", 
        RowBox[{"Length", "[", "succTwoReg", "]"}]}], "}"}]}], "]"}], "]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"succThreeValues", " ", "=", " ", 
   RowBox[{"DeleteDuplicates", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{"succThreeReg", "[", 
         RowBox[{"[", 
          RowBox[{"n", ",", "All", ",", "2"}], "]"}], "]"}], "]"}], "/.", " ", 
       RowBox[{"0", "\[Rule]", "Nothing"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", 
        RowBox[{"Length", "[", "succThreeReg", "]"}]}], "}"}]}], "]"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"succTwoValues", "\[Equal]", " ", "succThreeValues"}]}], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.8353549023361464`*^9, 3.835354954249618*^9}},
 CellLabel->"In[560]:=",
 CellID->563548576],

Cell[BoxData["True"], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.8353549557632427`*^9},
 CellLabel->"Out[564]=",
 CellID->528484149]
}, Open  ]],

Cell["\<\
 Check if two-register and three-register Elgot-Robinson models are identical:\
\>", "CodeText",
 TaggingRules->{},
 CellChangeTimes->{{3.83535496081325*^9, 3.8353549694694757`*^9}, {
  3.8353625076435213`*^9, 3.835362512662489*^9}},
 CellID->2055830373],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"erTwoReg", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"cmEvolveList", "[", 
      RowBox[{"#", ",", 
       RowBox[{"counterMachine", "[", "2", "]"}], ",", "30"}], "]"}], " ", 
     "&"}], "/@", " ", "\[IndentingNewLine]", 
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"inc", "[", "r1", "]"}], ",", 
          RowBox[{"cpy", "[", 
           RowBox[{"r2", ",", "r3"}], "]"}], ",", 
          RowBox[{"je", "[", 
           RowBox[{"r4", ",", "r5", ",", "z1", ",", "z2"}], "]"}]}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"r1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"r2", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"r3", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"r4", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"r5", ",", " ", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"z1", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"z2", ",", "3"}], "}"}]}], "]"}], ",", "6"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"erThreeReg", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"cmEvolveList", "[", 
      RowBox[{"#", ",", 
       RowBox[{"counterMachine", "[", "3", "]"}], ",", "30"}], "]"}], " ", 
     "&"}], "/@", " ", 
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"inc", "[", "r1", "]"}], ",", 
          RowBox[{"cpy", "[", 
           RowBox[{"r2", ",", "r3"}], "]"}], ",", 
          RowBox[{"je", "[", 
           RowBox[{"r4", ",", "r5", ",", "z1", ",", "z2"}], "]"}]}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"r1", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"r2", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"r3", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"r4", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"r5", ",", " ", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"z1", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"z2", ",", "3"}], "}"}]}], "]"}], ",", "6"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"erTwoValues", "=", 
   RowBox[{"DeleteDuplicates", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{"erTwoReg", "[", 
         RowBox[{"[", 
          RowBox[{"n", ",", "All", ",", "2"}], "]"}], "]"}], "]"}], "/.", " ", 
       RowBox[{"0", "\[Rule]", "Nothing"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", 
        RowBox[{"Length", "[", "erTwoReg", "]"}]}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"erThreeValues", " ", "=", " ", 
   RowBox[{"DeleteDuplicates", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{"erThreeReg", "[", 
         RowBox[{"[", 
          RowBox[{"n", ",", "All", ",", "2"}], "]"}], "]"}], "]"}], "/.", " ", 
       RowBox[{"0", "\[Rule]", "Nothing"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", 
        RowBox[{"Length", "[", "erThreeReg", "]"}]}], "}"}]}], "]"}], "]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{"erTwoValues", "\[Equal]", " ", "erThreeValues"}]}], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.8353549754211597`*^9, 3.8353550396684523`*^9}},
 CellLabel->"In[42]:=",
 CellID->289750401],

Cell[BoxData["True"], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.835355045618658*^9, 3.835366269267393*^9},
 CellLabel->"Out[46]=",
 CellID->1748512625]
}, Open  ]],

Cell["\<\
Only the Shepherdson-Sturgis counter machine shows a difference between \
values in two and three registers. Now, the next step is to check whether or \
not these differences could cause unpredictability. Demonstrating the values \
with an ArrayPlot reveals a pattern, that while complex, renders these \
counter machines predictable.\
\>", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.835355156863535*^9, 3.835355336198741*^9}, {
  3.835356014409328*^9, 3.835356048285043*^9}, {3.835356083944532*^9, 
  3.8353561944600773`*^9}, {3.8353647653701487`*^9, 3.8353647660063868`*^9}},
 CellID->847718966],

Cell["\<\
Visualize the unique three-register values for a Shepherdson-Sturgis machine:\
\
\>", "CodeText",
 TaggingRules->{},
 CellChangeTimes->{{3.8353561976075287`*^9, 3.835356275786563*^9}, {
  3.8353625208722363`*^9, 3.835362530019661*^9}, {3.835364817188724*^9, 
  3.835364823993636*^9}},
 CellID->827517931],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ssDiff", "=", 
   RowBox[{"Complement", "[", 
    RowBox[{"ssThreeValues", ",", "ssTwoValues"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ArrayPlot", "[", 
    RowBox[{
     RowBox[{"Partition", "[", 
      RowBox[{
       RowBox[{"Flatten", "[", "#", "]"}], ",", "4"}], "]"}], ",", 
     RowBox[{"Mesh", "\[Rule]", "True"}], ",", " ", 
     RowBox[{"ColorFunction", "\[Rule]", "\"\<Rainbow\>\""}]}], "]"}], "&"}], 
  "/@", "ssDiff"}]}], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.8353562835019207`*^9, 3.8353562903502293`*^9}, {
   3.835356330491996*^9, 3.8353563365852413`*^9}, {3.835366251063398*^9, 
   3.8353662601588507`*^9}, {3.8353663321466637`*^9, 3.835366332790113*^9}, {
   3.8353663672236347`*^9, 3.835366367676556*^9}, {3.835366621474991*^9, 
   3.835366626878969*^9}, 3.835366700361364*^9},
 CellLabel->"In[78]:=",
 CellID->755160562],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{RasterBox[CompressedData["
1:eJxTTMoPSmVmYGDgBWIWIAaxP3rssZmrfc/ebP2rNWI3dts//t+3IuDuA/tR
8VHxUfFR8aEuDgBcDtLD
      "], {{0, 0}, {4, 13}}, {0, 1}], {
      {GrayLevel[
        NCache[-1 + GoldenRatio, 0.6180339887498949]], 
       StyleBox[
        LineBox[{{{0, 13}, {4, 13}}, {{0, 12}, {4, 12}}, {{0, 11}, {4, 
         11}}, {{0, 10}, {4, 10}}, {{0, 9}, {4, 9}}, {{0, 8}, {4, 8}}, {{0, 
         7}, {4, 7}}, {{0, 6}, {4, 6}}, {{0, 5}, {4, 5}}, {{0, 4}, {4, 4}}, {{
         0, 3}, {4, 3}}, {{0, 2}, {4, 2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 
         0}}}],
        Antialiasing->False]}, 
      {GrayLevel[
        NCache[-1 + GoldenRatio, 0.6180339887498949]], 
       StyleBox[
        LineBox[{{{0, 0}, {0, 13}}, {{1, 0}, {1, 13}}, {{2, 0}, {2, 13}}, {{3,
          0}, {3, 13}}, {{4, 0}, {4, 13}}}],
        Antialiasing->False]}}},
    Frame->False,
    FrameLabel->{None, None},
    FrameTicks->{{None, None}, {None, None}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultPlotStyle" -> Automatic}], ",", 
   GraphicsBox[{RasterBox[CompressedData["
1:eJxTTMoPSmVmYGDgBWIWIAaxX52xVanJf22/aKb6dZETB+yPpxT+n/jygD2t
xc/+D7i6cvobe4EnC1pmmj22bxZc4H3X6gzVzKGW+HN33u29AU/taz9fnPH/
2HP7mfJ5tj9XXaG5+aSK09p8XOLHDty/subGDXtxvpYUxslP7fV3fltlFfAY
pzi1zKGWuNiu7cfLz523f2qaGjtp5w373kS/C2rsr2iuntbiHz322MzVvmdv
tv7VGrEbu+0f/+9bEXD3AdXMGSriAFO0rvQ=
      "], {{0, 0}, {4, 13}}, {0, 1}], {
      {GrayLevel[
        NCache[-1 + GoldenRatio, 0.6180339887498949]], 
       StyleBox[
        LineBox[{{{0, 13}, {4, 13}}, {{0, 12}, {4, 12}}, {{0, 11}, {4, 
         11}}, {{0, 10}, {4, 10}}, {{0, 9}, {4, 9}}, {{0, 8}, {4, 8}}, {{0, 
         7}, {4, 7}}, {{0, 6}, {4, 6}}, {{0, 5}, {4, 5}}, {{0, 4}, {4, 4}}, {{
         0, 3}, {4, 3}}, {{0, 2}, {4, 2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 
         0}}}],
        Antialiasing->False]}, 
      {GrayLevel[
        NCache[-1 + GoldenRatio, 0.6180339887498949]], 
       StyleBox[
        LineBox[{{{0, 0}, {0, 13}}, {{1, 0}, {1, 13}}, {{2, 0}, {2, 13}}, {{3,
          0}, {3, 13}}, {{4, 0}, {4, 13}}}],
        Antialiasing->False]}}},
    Frame->False,
    FrameLabel->{None, None},
    FrameTicks->{{None, None}, {None, None}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultPlotStyle" -> Automatic}], ",", 
   GraphicsBox[{RasterBox[CompressedData["
1:eJxTTMoPSmVmYGDgBWIWIAaxX52xVanJf22/aKb6dZETB+yPpxT+n/jygD21
xM/+D7i6cvobe4EnC1pmmj22bxZc4H3X6gzN1ZMqTqr5z915t/cGPLWv/Xxx
xv9jz+1nyufZ/lx1hWR7cZlDqvm41B87cP/Kmhs37MX5WlIYJz+119/5bZVV
wGOS7aWW+dRST2txsV3bj5efO2//1DQ1dtLOG/a9iX4X1Nhfkaye1uIfPfbY
zNW+Z2+2/tUasRu77R//71sRcPcBzdWTKk5r83GJAwByRK70
      "], {{0, 0}, {4, 
      13}}, {0, 1}], {
      {GrayLevel[
        NCache[-1 + GoldenRatio, 0.6180339887498949]], 
       StyleBox[
        LineBox[{{{0, 13}, {4, 13}}, {{0, 12}, {4, 12}}, {{0, 11}, {4, 
         11}}, {{0, 10}, {4, 10}}, {{0, 9}, {4, 9}}, {{0, 8}, {4, 8}}, {{0, 
         7}, {4, 7}}, {{0, 6}, {4, 6}}, {{0, 5}, {4, 5}}, {{0, 4}, {4, 4}}, {{
         0, 3}, {4, 3}}, {{0, 2}, {4, 2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 
         0}}}],
        Antialiasing->False]}, 
      {GrayLevel[
        NCache[-1 + GoldenRatio, 0.6180339887498949]], 
       StyleBox[
        LineBox[{{{0, 0}, {0, 13}}, {{1, 0}, {1, 13}}, {{2, 0}, {2, 13}}, {{3,
          0}, {3, 13}}, {{4, 0}, {4, 13}}}],
        Antialiasing->False]}}},
    Frame->False,
    FrameLabel->{None, None},
    FrameTicks->{{None, None}, {None, None}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultPlotStyle" -> Automatic}], ",", 
   GraphicsBox[{RasterBox[CompressedData["
1:eJxTTMoPSmVmYGDgBWIWIAaxX52xVanJf22/aKb6dZETB+yPpxT+n/jygD21
xOubv716vPC1/bvY5n1fyp7aX5i5ZeUu93M0N59UcVqbT6r4nd1stS9zH9g7
eogZNEY/tw95Wu2mZHKHauYMFXHfA+snqnBctF/zj+Nwg+p9e6d3Sj6B617S
XP1QEf/oscdmrvY9e7P1r9aI3dht//h/34qAuw9wilPLnKEiDgCg/aTj
      "], {{0, 0}, {
      4, 13}}, {0, 1}], {
      {GrayLevel[
        NCache[-1 + GoldenRatio, 0.6180339887498949]], 
       StyleBox[
        LineBox[{{{0, 13}, {4, 13}}, {{0, 12}, {4, 12}}, {{0, 11}, {4, 
         11}}, {{0, 10}, {4, 10}}, {{0, 9}, {4, 9}}, {{0, 8}, {4, 8}}, {{0, 
         7}, {4, 7}}, {{0, 6}, {4, 6}}, {{0, 5}, {4, 5}}, {{0, 4}, {4, 4}}, {{
         0, 3}, {4, 3}}, {{0, 2}, {4, 2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 
         0}}}],
        Antialiasing->False]}, 
      {GrayLevel[
        NCache[-1 + GoldenRatio, 0.6180339887498949]], 
       StyleBox[
        LineBox[{{{0, 0}, {0, 13}}, {{1, 0}, {1, 13}}, {{2, 0}, {2, 13}}, {{3,
          0}, {3, 13}}, {{4, 0}, {4, 13}}}],
        Antialiasing->False]}}},
    Frame->False,
    FrameLabel->{None, None},
    FrameTicks->{{None, None}, {None, None}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultPlotStyle" -> Automatic}], ",", 
   GraphicsBox[{RasterBox[CompressedData["
1:eJxTTMoPSmVmYGDgBWIWIAaxX52xVanJf22/aKb6dZETB+yPpxT+n/jygD2t
xeubv716vPC1/bvY5n1fyp7aX5i5ZeUu93NUM4dU80k1h1rid3az1b7MfWDv
6CFm0Bj93D7kabWbkskdmqsnVZzW5pMq7ntg/UQVjov2a/5xHG5QvW/v9E7J
J3DdS5LV01r8o8cem7na9+zN1r9aI3Zjt/3j/30rAu4+GDDzqaV+qIgDAMIv
pOM=
      "], {{0, 0}, {4, 13}}, {0, 1}], {
      {GrayLevel[
        NCache[-1 + GoldenRatio, 0.6180339887498949]], 
       StyleBox[
        LineBox[{{{0, 13}, {4, 13}}, {{0, 12}, {4, 12}}, {{0, 11}, {4, 
         11}}, {{0, 10}, {4, 10}}, {{0, 9}, {4, 9}}, {{0, 8}, {4, 8}}, {{0, 
         7}, {4, 7}}, {{0, 6}, {4, 6}}, {{0, 5}, {4, 5}}, {{0, 4}, {4, 4}}, {{
         0, 3}, {4, 3}}, {{0, 2}, {4, 2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 
         0}}}],
        Antialiasing->False]}, 
      {GrayLevel[
        NCache[-1 + GoldenRatio, 0.6180339887498949]], 
       StyleBox[
        LineBox[{{{0, 0}, {0, 13}}, {{1, 0}, {1, 13}}, {{2, 0}, {2, 13}}, {{3,
          0}, {3, 13}}, {{4, 0}, {4, 13}}}],
        Antialiasing->False]}}},
    Frame->False,
    FrameLabel->{None, None},
    FrameTicks->{{None, None}, {None, None}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultPlotStyle" -> Automatic}], ",", 
   GraphicsBox[{RasterBox[CompressedData["
1:eJxTTMoPSmVmYGDgBWIWIAaxX52xVanJf22/aKb6dZETB+yPpxT+n/jygD2t
xe/sZqt9mfvA3tFDzKAx+rl9yNNqNyWTOySrr2/+9urxwtf272Kb930pe2p/
YeaWlbvczw15cd8D6yeqcFy0X/OP43CD6n17p3dKPoHrXpKsHle4DXXxjx57
bOZq37M3W/9qjdiN3faP//etCLj7gGT1uMJtqIjj8he1/Euq+YNNHABGzJ7r

      "], {{0, 0}, {4, 13}}, {0, 1}], {
      {GrayLevel[
        NCache[-1 + GoldenRatio, 0.6180339887498949]], 
       StyleBox[
        LineBox[{{{0, 13}, {4, 13}}, {{0, 12}, {4, 12}}, {{0, 11}, {4, 
         11}}, {{0, 10}, {4, 10}}, {{0, 9}, {4, 9}}, {{0, 8}, {4, 8}}, {{0, 
         7}, {4, 7}}, {{0, 6}, {4, 6}}, {{0, 5}, {4, 5}}, {{0, 4}, {4, 4}}, {{
         0, 3}, {4, 3}}, {{0, 2}, {4, 2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 
         0}}}],
        Antialiasing->False]}, 
      {GrayLevel[
        NCache[-1 + GoldenRatio, 0.6180339887498949]], 
       StyleBox[
        LineBox[{{{0, 0}, {0, 13}}, {{1, 0}, {1, 13}}, {{2, 0}, {2, 13}}, {{3,
          0}, {3, 13}}, {{4, 0}, {4, 13}}}],
        Antialiasing->False]}}},
    Frame->False,
    FrameLabel->{None, None},
    FrameTicks->{{None, None}, {None, None}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultPlotStyle" -> Automatic}], ",", 
   GraphicsBox[{RasterBox[CompressedData["
1:eJxTTMoPSmVmYGDgBWIWIAax7+xmq32Z+8De0UPMoDH6uX3I02o3JZM79q/O
2KrU5L+2XzRT/brIiQP2x1MK/098eYBk8frmb68eL3xt/y62ed+Xsqf2F2Zu
WbnL/RxO9aS6B5f5pIrjMt/3wPqJKhwX7df84zjcoHrf3umdkk/gupdUsxeX
f3GpJ9U9uMwnVRyX+R899tjM1b5nb7b+1RqxG7vtH//vWxFw9wHV7MXlX1zq
SXUPLvNJFae1+bjEcfmX1uqHijgA8Mie6w==
      "], {{0, 0}, {4, 13}}, {0, 1}], {
      {GrayLevel[
        NCache[-1 + GoldenRatio, 0.6180339887498949]], 
       StyleBox[
        LineBox[{{{0, 13}, {4, 13}}, {{0, 12}, {4, 12}}, {{0, 11}, {4, 
         11}}, {{0, 10}, {4, 10}}, {{0, 9}, {4, 9}}, {{0, 8}, {4, 8}}, {{0, 
         7}, {4, 7}}, {{0, 6}, {4, 6}}, {{0, 5}, {4, 5}}, {{0, 4}, {4, 4}}, {{
         0, 3}, {4, 3}}, {{0, 2}, {4, 2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 
         0}}}],
        Antialiasing->False]}, 
      {GrayLevel[
        NCache[-1 + GoldenRatio, 0.6180339887498949]], 
       StyleBox[
        LineBox[{{{0, 0}, {0, 13}}, {{1, 0}, {1, 13}}, {{2, 0}, {2, 13}}, {{3,
          0}, {3, 13}}, {{4, 0}, {4, 13}}}],
        Antialiasing->False]}}},
    Frame->False,
    FrameLabel->{None, None},
    FrameTicks->{{None, None}, {None, None}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultPlotStyle" -> Automatic}], ",", 
   GraphicsBox[{RasterBox[CompressedData["
1:eJxTTMoPSmVmYGDgBWIWIAaxX52xVanJf22/aKb6dZETB+yPpxT+n/jygP1z
d97tvQFP7Ws/X5zx/9hz+5nyebY/V12xx6Uel/jZ/wFXV05/Yy/wZEHLTLPH
9s2CC7zvWp3BKU6qe0g1n1rixw7cv7Lmxg17cb6WFMbJT+31d35bZRXwmGT1
uPxFa3GxXduPl587b//UNDV20s4b9r2JfhfU2F+RbA4uf5HqX1zuIdV8aol/
9NhjM1f7nr3Z+ldrxG7stn/8v29FwN0HJKvH5a+hIo7LX0NFHABXqK6t
      "], {{0, 0}, {
      4, 13}}, {0, 1}], {
      {GrayLevel[
        NCache[-1 + GoldenRatio, 0.6180339887498949]], 
       StyleBox[
        LineBox[{{{0, 13}, {4, 13}}, {{0, 12}, {4, 12}}, {{0, 11}, {4, 
         11}}, {{0, 10}, {4, 10}}, {{0, 9}, {4, 9}}, {{0, 8}, {4, 8}}, {{0, 
         7}, {4, 7}}, {{0, 6}, {4, 6}}, {{0, 5}, {4, 5}}, {{0, 4}, {4, 4}}, {{
         0, 3}, {4, 3}}, {{0, 2}, {4, 2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 
         0}}}],
        Antialiasing->False]}, 
      {GrayLevel[
        NCache[-1 + GoldenRatio, 0.6180339887498949]], 
       StyleBox[
        LineBox[{{{0, 0}, {0, 13}}, {{1, 0}, {1, 13}}, {{2, 0}, {2, 13}}, {{3,
          0}, {3, 13}}, {{4, 0}, {4, 13}}}],
        Antialiasing->False]}}},
    Frame->False,
    FrameLabel->{None, None},
    FrameTicks->{{None, None}, {None, None}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultPlotStyle" -> Automatic}], ",", 
   GraphicsBox[{RasterBox[CompressedData["
1:eJxTTMoPSmVmYGDgBWIWIAaxn7vzbu8NeGpf+/nijP/HntvPlM+z/bnqiv2r
M7YqNfmv7RfNVL8ucuKA/fGUwv8TXx6wJ1X92f8BV1dOf2Mv8GRBy0yzx/bN
ggu871qdoZr6YwfuX1lz44a9OF9LCuPkp/b6O7+tsgp4jNMcUsVx+ReXelLd
g8t8UsVxmS+2a/vx8nPn7Z+apsZO2nnDvjfR74Ia+yuc5pCqHpd/qaX+o8ce
m7na9+zN1r9aI3Zjt/3j/30rAu4+wGkOqeK4/ItLPanuwWU+qeKkuoda9uIy
n1RxWpuPSxwAjJ+urQ==
      "], {{0, 0}, {4, 13}}, {0, 1}], {
      {GrayLevel[
        NCache[-1 + GoldenRatio, 0.6180339887498949]], 
       StyleBox[
        LineBox[{{{0, 13}, {4, 13}}, {{0, 12}, {4, 12}}, {{0, 11}, {4, 
         11}}, {{0, 10}, {4, 10}}, {{0, 9}, {4, 9}}, {{0, 8}, {4, 8}}, {{0, 
         7}, {4, 7}}, {{0, 6}, {4, 6}}, {{0, 5}, {4, 5}}, {{0, 4}, {4, 4}}, {{
         0, 3}, {4, 3}}, {{0, 2}, {4, 2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 
         0}}}],
        Antialiasing->False]}, 
      {GrayLevel[
        NCache[-1 + GoldenRatio, 0.6180339887498949]], 
       StyleBox[
        LineBox[{{{0, 0}, {0, 13}}, {{1, 0}, {1, 13}}, {{2, 0}, {2, 13}}, {{3,
          0}, {3, 13}}, {{4, 0}, {4, 13}}}],
        Antialiasing->False]}}},
    Frame->False,
    FrameLabel->{None, None},
    FrameTicks->{{None, None}, {None, None}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultPlotStyle" -> Automatic}], ",", 
   GraphicsBox[{RasterBox[CompressedData["
1:eJxTTMoPSmVmYGDgA2IWIAaxX52xVanJf22/aKb6dZETB+yPpxT+n/jygD2t
xeubv716vPC1/bvY5n1fyp7aX5i5ZeUu93NUM4dU80k1h9bid3az1b7MfWDv
6CFm0Bj93D7kabWbkskdqplDqvmkmkNrcd8D6yeqcFy0X/OP43CD6n17p3dK
PoHrXlLNHFLNJ9UcWot/9NhjM1f7nr3Z+ldrxG7stn/8v29FwN0HVDOHVPNJ
NWeoiAMA4oLYkA==
      "], {{0, 0}, {4, 14}}, {0, 1}], {
      {GrayLevel[
        NCache[-1 + GoldenRatio, 0.6180339887498949]], 
       StyleBox[
        LineBox[{{{0, 14}, {4, 14}}, {{0, 13}, {4, 13}}, {{0, 12}, {4, 
         12}}, {{0, 11}, {4, 11}}, {{0, 10}, {4, 10}}, {{0, 9}, {4, 9}}, {{0, 
         8}, {4, 8}}, {{0, 7}, {4, 7}}, {{0, 6}, {4, 6}}, {{0, 5}, {4, 5}}, {{
         0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 2}}, {{0, 1}, {4, 
         1}}, {{0, 0}, {4, 0}}}],
        Antialiasing->False]}, 
      {GrayLevel[
        NCache[-1 + GoldenRatio, 0.6180339887498949]], 
       StyleBox[
        LineBox[{{{0, 0}, {0, 14}}, {{1, 0}, {1, 14}}, {{2, 0}, {2, 14}}, {{3,
          0}, {3, 14}}, {{4, 0}, {4, 14}}}],
        Antialiasing->False]}}},
    Frame->False,
    FrameLabel->{None, None},
    FrameTicks->{{None, None}, {None, None}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultPlotStyle" -> Automatic}], ",", 
   GraphicsBox[{RasterBox[CompressedData["
1:eJxTTMoPSmVmYGDgA2IWIAaxX52xVanJf22/aKb6dZETB+yPpxT+n/jygD21
xOubv716vPC1/bvY5n1fyp7aX5i5ZeUu93NDXj21xO/sZqt9mfvA3tFDzKAx
+rl9yNNqNyWTO0NePbXEfQ+sn6jCcdF+zT+Oww2q9+2d3in5BK57OeTVU0v8
o8cem7na9+zN1r9aI3Zjt/3j/30rAu4+GPLqh4o4ACLJ2JA=
      "], {{0, 0}, {4, 
      14}}, {0, 1}], {
      {GrayLevel[
        NCache[-1 + GoldenRatio, 0.6180339887498949]], 
       StyleBox[
        LineBox[{{{0, 14}, {4, 14}}, {{0, 13}, {4, 13}}, {{0, 12}, {4, 
         12}}, {{0, 11}, {4, 11}}, {{0, 10}, {4, 10}}, {{0, 9}, {4, 9}}, {{0, 
         8}, {4, 8}}, {{0, 7}, {4, 7}}, {{0, 6}, {4, 6}}, {{0, 5}, {4, 5}}, {{
         0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 2}}, {{0, 1}, {4, 
         1}}, {{0, 0}, {4, 0}}}],
        Antialiasing->False]}, 
      {GrayLevel[
        NCache[-1 + GoldenRatio, 0.6180339887498949]], 
       StyleBox[
        LineBox[{{{0, 0}, {0, 14}}, {{1, 0}, {1, 14}}, {{2, 0}, {2, 14}}, {{3,
          0}, {3, 14}}, {{4, 0}, {4, 14}}}],
        Antialiasing->False]}}},
    Frame->False,
    FrameLabel->{None, None},
    FrameTicks->{{None, None}, {None, None}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultPlotStyle" -> Automatic}], ",", 
   GraphicsBox[{RasterBox[CompressedData["
1:eJxTTMoPSmVmYGDgA2IWIAaxX52xVanJf22/aKb6dZETB+yPpxT+n/jygD2t
xc/+D7i6cvobe4EnC1pmmj22bxZc4H3X6gzJ6gdK/Lk77/begKf2tZ8vzvh/
7Ln9TPk825+rrlDNHFLNJ9UcWosfO3D/ypobN+zF+VpSGCc/tdff+W2VVcBj
ktUPlLjYru3Hy8+dt39qmho7aecN+95Evwtq7K+oZg6p5pNqDq3FP3rssZmr
fc/ebP2rNWI3dts//t+3IuDuA5LVD3VxAMG142I=
      "], {{0, 0}, {4, 14}}, {0, 
      1}], {
      {GrayLevel[
        NCache[-1 + GoldenRatio, 0.6180339887498949]], 
       StyleBox[
        LineBox[{{{0, 14}, {4, 14}}, {{0, 13}, {4, 13}}, {{0, 12}, {4, 
         12}}, {{0, 11}, {4, 11}}, {{0, 10}, {4, 10}}, {{0, 9}, {4, 9}}, {{0, 
         8}, {4, 8}}, {{0, 7}, {4, 7}}, {{0, 6}, {4, 6}}, {{0, 5}, {4, 5}}, {{
         0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 2}}, {{0, 1}, {4, 
         1}}, {{0, 0}, {4, 0}}}],
        Antialiasing->False]}, 
      {GrayLevel[
        NCache[-1 + GoldenRatio, 0.6180339887498949]], 
       StyleBox[
        LineBox[{{{0, 0}, {0, 14}}, {{1, 0}, {1, 14}}, {{2, 0}, {2, 14}}, {{3,
          0}, {3, 14}}, {{4, 0}, {4, 14}}}],
        Antialiasing->False]}}},
    Frame->False,
    FrameLabel->{None, None},
    FrameTicks->{{None, None}, {None, None}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultPlotStyle" -> Automatic}], ",", 
   GraphicsBox[{RasterBox[CompressedData["
1:eJxTTMoPSmVmYGDgA2IWIAaxz/4PuLpy+ht7gScLWmaaPbZvFlzgfdfqjP2r
M7YqNfmv7RfNVL8ucuKA/fGUwv8TXx4gWZxU86mlnlRxXOY/d+fd3hvw1L72
88UZ/489t58pn2f7c9UVnOYMNvXHDty/subGDXtxvpYUxslP7fV3fltlFfAY
pzmkipNqPrXUkyqOy3yxXduPl587b//UNDV20s4b9r2JfhfU2F/hNGewqf/o
scdmrvY9e7P1r9aI3dht//h/34qAuw9wmkOqOKnmU0s9qeK0Nh+XOAA6PONi

      "], {{0, 0}, {4, 14}}, {0, 1}], {
      {GrayLevel[
        NCache[-1 + GoldenRatio, 0.6180339887498949]], 
       StyleBox[
        LineBox[{{{0, 14}, {4, 14}}, {{0, 13}, {4, 13}}, {{0, 12}, {4, 
         12}}, {{0, 11}, {4, 11}}, {{0, 10}, {4, 10}}, {{0, 9}, {4, 9}}, {{0, 
         8}, {4, 8}}, {{0, 7}, {4, 7}}, {{0, 6}, {4, 6}}, {{0, 5}, {4, 5}}, {{
         0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 2}}, {{0, 1}, {4, 
         1}}, {{0, 0}, {4, 0}}}],
        Antialiasing->False]}, 
      {GrayLevel[
        NCache[-1 + GoldenRatio, 0.6180339887498949]], 
       StyleBox[
        LineBox[{{{0, 0}, {0, 14}}, {{1, 0}, {1, 14}}, {{2, 0}, {2, 14}}, {{3,
          0}, {3, 14}}, {{4, 0}, {4, 14}}}],
        Antialiasing->False]}}},
    Frame->False,
    FrameLabel->{None, None},
    FrameTicks->{{None, None}, {None, None}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultPlotStyle" -> Automatic}]}], "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.835356333729624*^9, 3.835356338248934*^9}, 
   3.835366265463538*^9, {3.8353663629934177`*^9, 3.8353663690038424`*^9}, 
   3.8353666289797697`*^9, 3.835366702628666*^9},
 CellLabel->"Out[79]=",
 CellID->83718152]
}, Open  ]],

Cell["\<\
It is evident that most two-register and three-register counter machines (of \
the 5 types) have identical values, and of the few counter machines that only \
occur with three registers, none of them are predictable. Therefore, while \
three-register counter machines create slightly more complex patterns than \
two-register counter machine, they do not cause unpredictability. Whether or \
not this holds up for counter machines with more registers is another \
question entirely.\
\>", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.8353564040434303`*^9, 3.8353564113130703`*^9}, {
   3.835356441340968*^9, 3.835356771063198*^9}, 3.8353648499482718`*^9},
 CellID->1873271546]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Conclusion", "Section",
 TaggingRules->{},
 CellChangeTimes->{{3.834849153540751*^9, 3.834849168607637*^9}, {
  3.8351041259135838`*^9, 3.835104128743182*^9}},
 CellTags->"SectionHeader",
 CellID->1059608984],

Cell[TextData[{
 "The general counter machine function works well and can be used to quickly \
generate register values for any counter machine provided an instruction set \
and the number of steps. Using Grid and ArrayPlot together in a GraphicsRow \
produces a helpful model of counter machines register values over many steps. \
The ",
 StyleBox["predictabilityTest",
  FontSlant->"Italic"],
 " function written for this project is mostly capable of determining a \
counter machine's predictability. Using these functions and methods to \
analyze the 5 types of counter machines demonstrated that while some counter \
machines had relatively complex patterns, none of them were completely \
unpredictable. After adding another register to explore complexity, it became \
clear that very few counter machines with different values were created and \
all were predictable."
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.834849169946419*^9, 3.834849307054071*^9}, {
  3.834849360450725*^9, 3.834849539047326*^9}, {3.8349186450203*^9, 
  3.834918686135601*^9}, {3.834920804856948*^9, 3.834920965021443*^9}, {
  3.835104132598682*^9, 3.835104138566523*^9}, {3.835279597789901*^9, 
  3.835279600018463*^9}, {3.835279634770906*^9, 3.835279910958967*^9}, {
  3.8353502899537287`*^9, 3.835350292786364*^9}, {3.8353506338024063`*^9, 
  3.835350633803747*^9}, {3.8353567790013943`*^9, 3.835356804440693*^9}, {
  3.835356838266292*^9, 3.835356968140739*^9}},
 CellTags->"ExampleTopicSentence",
 CellID->1913793164],

Cell[CellGroupData[{

Cell["Future Plans", "Subsubsection",
 TaggingRules->{},
 CellChangeTimes->{{3.835279923873684*^9, 3.835279925998645*^9}},
 CellID->678530118],

Cell[TextData[{
 "In the future, I plan to improve my ",
 StyleBox["predictabilityTest",
  FontSlant->"Italic"],
 " function, so that it's capable of perfectly determining whether or not a \
counter machine is predictable. I also want to explore the predictability of \
counter machines as more and more registers are added. Finally, I hope to use \
my improved ",
 StyleBox["predictabilityTest",
  FontSlant->"Italic"],
 " function to analyze many more counter machines (with more instructions, \
perhaps) in order to find a counter machine that is completely unpredictable. \
There's a lot left to explore when it comes to counter machines, and I've \
barely scratched the surface. "
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.835279928234757*^9, 3.8352799340970583`*^9}, {
  3.83528024128506*^9, 3.835280362624749*^9}, {3.835280404906466*^9, 
  3.835280489235858*^9}, {3.83535029623285*^9, 3.835350297873999*^9}, {
  3.835356998770665*^9, 3.8353570929550047`*^9}},
 CellID->1478178856]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1152., 585.6},
WindowMargins->{{
  Automatic, -5.399999999999864}, {-5.399999999999977, Automatic}},
DockedCells->{},
PrivateNotebookOptions->{"CloudPublishPath"->"ImplementingCounterMachines.nb"},
TaggingRules->{
 "ResourceType" -> "ComputationalEssay", "ResourceCreateNotebook" -> True, 
  "TemplateVersion" -> Inherited, "CreationTimestamp" -> 
  3.8338901164240208`17.3362146505151*^9, "UpdatedTimestamp" -> 
  3.8338901164245208`17.336214650515153*^9, "CompatibilityTest" -> 
  HoldComplete[
    BinaryDeserialize[
     ByteArray[{56, 67, 58, 120, 156, 133, 143, 205, 78, 131, 64, 20, 133, 
      163, 173, 110, 116, 213, 165, 79, 224, 6, 70, 11, 105, 138, 59, 197, 
      198, 184, 193, 70, 92, 184, 100, 24, 238, 164, 83, 7, 46, 153, 123, 41, 
      229, 237, 29, 140, 186, 193, 196, 245, 249, 249, 206, 209, 115, 90, 164,
       88, 183, 216, 53, 213, 230, 216, 58, 32, 50, 216, 232, 19, 58, 203, 0, 
      42, 202, 175, 95, 129, 176, 115, 10, 242, 129, 24, 234, 212, 26, 104, 
      184, 120, 4, 109, 26, 195, 222, 153, 33, 67, 137, 248, 81, 232, 83, 154,
       229, 192, 62, 25, 252, 25, 217, 58, 115, 144, 12, 133, 69, 89, 253, 24,
       222, 134, 22, 124, 238, 242, 222, 50, 184, 70, 178, 57, 0, 229, 87, 
      227, 156, 142, 229, 216, 46, 237, 134, 72, 14, 191, 133, 139, 169, 70, 
      243, 172, 179, 214, 99, 207, 159, 253, 11, 55, 14, 184, 72, 45, 118, 
      213, 75, 185, 7, 197, 249, 251, 142, 185, 165, 59, 33, 250, 190, 15, 
      123, 180, 218, 201, 90, 141, 122, 168, 176, 22, 88, 238, 133, 251, 110, 
      167, 175, 185, 98, 138, 72, 177, 97, 127, 65, 248, 215, 217, 195, 86, 
      178, 218, 133, 253, 81, 123, 208, 236, 9, 38, 188, 205, 191, 188, 106, 
      149, 68, 55, 75, 121, 27, 64, 164, 203, 32, 6, 41, 131, 36, 134, 117, 
      160, 228, 58, 74, 226, 74, 173, 202, 104, 249, 9, 89, 192, 149, 140}]]],
   "ToolsOpen" -> False, "StatusMessage" -> "", "TryRealOnly" -> False, 
  "AttachedHints" -> {}},
CreateCellID->True,
FrontEndVersion->"12.2 for Microsoft Windows (64-bit) (December 12, 2020)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "SectionHeader"->{
  Cell[1777, 55, 187, 4, 70, "Section",ExpressionUUID->"e9400ec6-1607-4f4d-b2a5-f00a0b8fd5cd",
   CellTags->"SectionHeader",
   CellID->453852445],
  Cell[4700, 134, 286, 6, 70, "Section",ExpressionUUID->"ee2cce02-ab12-4186-98a9-6294bce479b6",
   CellTags->"SectionHeader",
   CellID->821570430],
  Cell[35164, 1083, 228, 5, 70, "Section",ExpressionUUID->"80175993-d3af-4f17-943b-0e7e8b22fb37",
   CellTags->"SectionHeader",
   CellID->848062633],
  Cell[161434, 3424, 234, 5, 70, "Section",ExpressionUUID->"4abe3e1b-7dff-4190-987a-4f142ba61a06",
   CellTags->"SectionHeader",
   CellID->222151016],
  Cell[298814, 6419, 231, 5, 70, "Section",ExpressionUUID->"8ac2e221-5a11-49b6-938e-017bb0519220",
   CellTags->"SectionHeader",
   CellID->603657416],
  Cell[402371, 8639, 214, 5, 70, "Section",ExpressionUUID->"ad5ef8cb-5ec7-4935-ac91-c2260df04c30",
   CellTags->"SectionHeader",
   CellID->1059608984]},
 "ExampleTopicSentence"->{
  Cell[1967, 61, 1187, 20, 70, "Text",ExpressionUUID->"3ee807e0-904d-49ad-ab99-010aec9f5958",
   CellTags->"ExampleTopicSentence",
   CellID->816667160],
  Cell[5293, 152, 1221, 28, 70, "Text",ExpressionUUID->"66fa0fd9-119c-4dc2-a3f8-b7204487afb9",
   CellTags->"ExampleTopicSentence",
   CellID->1753531110],
  Cell[11332, 310, 799, 14, 70, "Text",ExpressionUUID->"c401fec6-1ee1-4239-8cee-4cbc58bfb1dd",
   CellTags->"ExampleTopicSentence",
   CellID->1961850447],
  Cell[35654, 1099, 1232, 22, 70, "Text",ExpressionUUID->"326c751c-55af-411d-80a4-66ece7e2dd5a",
   CellTags->"ExampleTopicSentence",
   CellID->539707692],
  Cell[161846, 3438, 833, 15, 70, "Text",ExpressionUUID->"ac06cbe4-a6f1-4259-a89a-723454034b90",
   CellTags->"ExampleTopicSentence",
   CellID->1365547426],
  Cell[299239, 6433, 936, 17, 70, "Text",ExpressionUUID->"050e2ce9-777d-4541-bb40-462af0ea5088",
   CellTags->"ExampleTopicSentence",
   CellID->957442284],
  Cell[402588, 8646, 1512, 26, 70, "Text",ExpressionUUID->"49d09417-9aa7-43ed-ad21-7677a2a149de",
   CellTags->"ExampleTopicSentence",
   CellID->1913793164]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"SectionHeader", 407494, 8745},
 {"ExampleTopicSentence", 408427, 8764}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[561, 20, 695, 19, 70, "Text",ExpressionUUID->"e9a5cd33-4c16-4170-8c6a-5cb22904c85c",
 CellID->267554873],
Cell[1259, 41, 493, 10, 70, "Text",ExpressionUUID->"f0f4e5b6-1ca4-4e9d-ab8e-cdf03f381bbd",
 CellID->1479544474],
Cell[CellGroupData[{
Cell[1777, 55, 187, 4, 70, "Section",ExpressionUUID->"e9400ec6-1607-4f4d-b2a5-f00a0b8fd5cd",
 CellTags->"SectionHeader",
 CellID->453852445],
Cell[1967, 61, 1187, 20, 70, "Text",ExpressionUUID->"3ee807e0-904d-49ad-ab99-010aec9f5958",
 CellTags->"ExampleTopicSentence",
 CellID->816667160],
Cell[3157, 83, 362, 15, 70, "Text",ExpressionUUID->"9e4ad034-1c02-4e21-bd5c-4b50b9af5b1e",
 CellID->1059244510],
Cell[3522, 100, 301, 5, 70, "CodeText",ExpressionUUID->"7816b5bd-fbe1-4ac0-bd22-792e5d32a32e",
 CellID->1829909618],
Cell[3826, 107, 435, 12, 70, "Input",ExpressionUUID->"c43358e0-4b37-43a7-a93f-c9f7c1504633",
 InitializationCell->True,
 CellID->1402695421],
Cell[4264, 121, 399, 8, 70, "Text",ExpressionUUID->"7f2604bb-9b54-40e1-bc24-26b91ae9d928",
 CellID->2082107417]
}, Open  ]],
Cell[CellGroupData[{
Cell[4700, 134, 286, 6, 70, "Section",ExpressionUUID->"ee2cce02-ab12-4186-98a9-6294bce479b6",
 CellTags->"SectionHeader",
 CellID->821570430],
Cell[CellGroupData[{
Cell[5011, 144, 279, 6, 70, "Subsection",ExpressionUUID->"6242a1e4-d861-4c80-9c62-c78cfef9087e",
 CellID->1263816455],
Cell[5293, 152, 1221, 28, 70, "Text",ExpressionUUID->"66fa0fd9-119c-4dc2-a3f8-b7204487afb9",
 CellTags->"ExampleTopicSentence",
 CellID->1753531110],
Cell[6517, 182, 468, 7, 70, "CodeText",ExpressionUUID->"a009c2ac-2d2f-4979-b6dc-4614d9057399",
 CellID->1040274273],
Cell[6988, 191, 428, 13, 70, "Input",ExpressionUUID->"587644f4-c27d-4c11-8d7e-3352826195d0",
 InitializationCell->True,
 CellID->1801375566],
Cell[7419, 206, 813, 19, 70, "Text",ExpressionUUID->"696736a2-12c6-4f97-b33d-d2586e483f2a",
 CellID->130883855],
Cell[8235, 227, 471, 9, 70, "CodeText",ExpressionUUID->"d69538e4-54ec-4e7e-bc80-b9cfe7fdc9e5",
 CellID->1636180942],
Cell[8709, 238, 1338, 38, 70, "Input",ExpressionUUID->"9d070b94-85a2-4cbc-a511-1b514d3160c2",
 InitializationCell->True,
 CellID->1214356693],
Cell[10050, 278, 1028, 20, 70, "Text",ExpressionUUID->"d1b9caad-4260-4044-a38c-de97be0a471a",
 CellID->535636722]
}, Open  ]],
Cell[CellGroupData[{
Cell[11115, 303, 214, 5, 70, "Subsection",ExpressionUUID->"cb1ec7e0-61e8-48a4-acfc-ccac63d5932a",
 CellID->1120178040],
Cell[11332, 310, 799, 14, 70, "Text",ExpressionUUID->"c401fec6-1ee1-4239-8cee-4cbc58bfb1dd",
 CellTags->"ExampleTopicSentence",
 CellID->1961850447],
Cell[12134, 326, 373, 10, 70, "CodeText",ExpressionUUID->"ffbee4c6-eb42-4396-bd35-f57cedee7cba",
 CellID->2109205021],
Cell[12510, 338, 1268, 37, 70, "Input",ExpressionUUID->"d1fe624b-824f-4010-ae1a-90fd0a4ec16f",
 InitializationCell->True,
 CellID->281936552],
Cell[13781, 377, 276, 6, 70, "Item",ExpressionUUID->"2d414577-b4f0-4309-92ec-8a9525530f2c",
 CellID->469239786],
Cell[14060, 385, 221, 6, 70, "Item",ExpressionUUID->"1ba9a4aa-f32e-4661-9703-d55c2ab5873b",
 CellID->138547003],
Cell[14284, 393, 268, 9, 70, "CodeText",ExpressionUUID->"86e7754c-95b1-4cd6-8965-17c8c3044ad8",
 CellID->1356163277],
Cell[14555, 404, 1516, 45, 70, "Input",ExpressionUUID->"94b440c2-4f0a-4a14-a5d1-a1faafe97b56",
 InitializationCell->True,
 CellID->1757172338],
Cell[16074, 451, 279, 6, 70, "Item",ExpressionUUID->"185b437c-15d8-4c5f-8042-037fab0a387d",
 CellID->1569954796],
Cell[16356, 459, 222, 6, 70, "Item",ExpressionUUID->"88a2b62e-5c5a-41d4-9806-1271ebfe86fe",
 CellID->98685683],
Cell[16581, 467, 243, 9, 70, "CodeText",ExpressionUUID->"ecd6e63b-9629-44a7-9577-cb033a9c525c",
 CellID->1284659909],
Cell[16827, 478, 613, 19, 70, "Input",ExpressionUUID->"8d254cd8-f797-4b3e-9375-549d2a1c7b0f",
 InitializationCell->True,
 CellID->683541111],
Cell[17443, 499, 309, 12, 70, "CodeText",ExpressionUUID->"713a8337-c1bb-43b0-946e-a0c9cc68cb8a",
 CellID->2107835368],
Cell[17755, 513, 711, 22, 70, "Input",ExpressionUUID->"03925a5c-a1ff-4fe3-81df-f2bd0102db59",
 InitializationCell->True,
 CellID->881984356],
Cell[18469, 537, 243, 9, 70, "CodeText",ExpressionUUID->"bad6d0dc-d07c-4b60-aa58-b11c7643072b",
 CellID->1301616201],
Cell[18715, 548, 472, 14, 70, "Input",ExpressionUUID->"3134c790-3532-4a5d-ae99-e403e1730c82",
 InitializationCell->True,
 CellID->502121321],
Cell[19190, 564, 382, 12, 70, "CodeText",ExpressionUUID->"4723df16-9979-4f10-bba6-c777fdd0d5ba",
 CellID->1999049857],
Cell[19575, 578, 729, 21, 70, "Input",ExpressionUUID->"c2aca6ae-d1db-4fac-a42c-98b86bdc4c57",
 InitializationCell->True,
 CellID->889511982],
Cell[20307, 601, 384, 12, 70, "CodeText",ExpressionUUID->"e208f9b0-4918-4d69-a8c7-cc2a7bba7136",
 CellID->606492544],
Cell[20694, 615, 761, 22, 70, "Input",ExpressionUUID->"897e4041-ce9f-45b5-83d1-22e549a0560b",
 InitializationCell->True,
 CellID->131382175],
Cell[21458, 639, 432, 14, 70, "CodeText",ExpressionUUID->"712d9cbc-1963-463c-ac5c-66cf6ec4ffe5",
 CellID->253414594],
Cell[21893, 655, 871, 25, 70, "Input",ExpressionUUID->"fd35ca70-8b45-41b7-ae3e-33663c9647b6",
 InitializationCell->True,
 CellID->99276548],
Cell[22767, 682, 453, 15, 70, "CodeText",ExpressionUUID->"486eca4f-aaa7-4173-8f5a-53fefebe6104",
 CellID->2081829360],
Cell[23223, 699, 752, 24, 70, "Input",ExpressionUUID->"c262ba0e-4517-47cb-9955-998f6daae6c2",
 InitializationCell->True,
 CellID->208013769]
}, Open  ]],
Cell[CellGroupData[{
Cell[24012, 728, 183, 4, 70, "Subsection",ExpressionUUID->"18b36214-a2ce-41c0-8c8b-a2d4d05a00f9",
 CellID->782082663],
Cell[24198, 734, 312, 8, 70, "Text",ExpressionUUID->"667f4213-9e7c-4225-bbe4-f6cacf5ddf3f",
 CellID->1408053156],
Cell[24513, 744, 417, 7, 70, "CodeText",ExpressionUUID->"a3f3283b-4f4d-468b-92e2-8440538cc36e",
 CellID->853593659],
Cell[24933, 753, 7263, 224, 70, "Input",ExpressionUUID->"05e7dbbd-3efb-4317-a340-b5e919e03410",
 InitializationCell->True,
 CellID->1733166568],
Cell[32199, 979, 264, 7, 70, "Text",ExpressionUUID->"bf421205-75ed-4934-b8f6-87ccf7305efc",
 CellID->1930276930],
Cell[32466, 988, 276, 6, 70, "CodeText",ExpressionUUID->"0b65281e-0dd4-4a2c-aee3-04629c68dde3",
 CellID->297626143],
Cell[CellGroupData[{
Cell[32767, 998, 797, 24, 70, "Input",ExpressionUUID->"54ffee7a-c045-4740-ab4f-923f13d6b2b1",
 CellID->74769374],
Cell[33567, 1024, 1536, 52, 70, "Output",ExpressionUUID->"544b4830-714c-4231-b1e1-48a05dfaba6c",
 CellID->1117358094]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[35164, 1083, 228, 5, 70, "Section",ExpressionUUID->"80175993-d3af-4f17-943b-0e7e8b22fb37",
 CellTags->"SectionHeader",
 CellID->848062633],
Cell[CellGroupData[{
Cell[35417, 1092, 234, 5, 70, "Subsection",ExpressionUUID->"12aca1f2-6db7-4deb-8ba7-ffe6357230ed",
 CellID->881654245],
Cell[35654, 1099, 1232, 22, 70, "Text",ExpressionUUID->"326c751c-55af-411d-80a4-66ece7e2dd5a",
 CellTags->"ExampleTopicSentence",
 CellID->539707692],
Cell[36889, 1123, 287, 5, 70, "CodeText",ExpressionUUID->"8d58072e-fc14-4cf0-abe1-9684b21da29b",
 CellID->1320868250],
Cell[37179, 1130, 741, 19, 70, "Input",ExpressionUUID->"d75fcbe7-ebf3-4883-a2f2-dca090334814",
 InitializationCell->True,
 CellID->1964062737],
Cell[37923, 1151, 294, 7, 70, "CodeText",ExpressionUUID->"7e9b2ce9-d52a-4141-b6a5-6f1958dc7c20",
 CellID->1999786238],
Cell[38220, 1160, 533, 15, 70, "Input",ExpressionUUID->"5ab54a82-f2cd-4bda-beec-e732ddb4c1d6",
 InitializationCell->True,
 CellID->822603526],
Cell[38756, 1177, 276, 6, 70, "CodeText",ExpressionUUID->"7dff451f-125d-4425-bb64-8784b7263fd6",
 CellID->1363953232],
Cell[39035, 1185, 522, 14, 70, "Input",ExpressionUUID->"06d297ff-78c6-4a31-8fc2-2ac01fa4c4d8",
 InitializationCell->True,
 CellID->505863584],
Cell[39560, 1201, 227, 5, 70, "CodeText",ExpressionUUID->"b55a0a3d-1a56-490d-b095-ad2bae4ac5d8",
 CellID->456471451],
Cell[39790, 1208, 487, 14, 70, "Input",ExpressionUUID->"43ea22e8-561a-4f59-a001-14a4cea4d902",
 InitializationCell->True,
 CellID->640530816],
Cell[40280, 1224, 257, 4, 70, "CodeText",ExpressionUUID->"43ac45db-d0ee-43b2-8b81-232fa6149595",
 CellID->51008330],
Cell[40540, 1230, 547, 16, 70, "Input",ExpressionUUID->"c5abbf01-1057-4721-9daa-85f47d087acb",
 InitializationCell->True,
 CellID->1547502507]
}, Open  ]],
Cell[CellGroupData[{
Cell[41124, 1251, 228, 5, 70, "Subsection",ExpressionUUID->"2f830b70-3fb5-4762-b28d-fc304c48796a",
 CellID->396863793],
Cell[41355, 1258, 1714, 35, 70, "Text",ExpressionUUID->"7febab60-e693-4269-b946-6d2848b03461",
 CellID->1466484399],
Cell[CellGroupData[{
Cell[43094, 1297, 158, 3, 70, "Subsubsection",ExpressionUUID->"aab3870b-577d-4c0e-9fa0-4f847ae05bad",
 CellID->1314857355],
Cell[43255, 1302, 344, 7, 70, "CodeText",ExpressionUUID->"5c5ce352-a910-4011-a005-7160ad343e61",
 CellID->384341250],
Cell[CellGroupData[{
Cell[43624, 1313, 2266, 54, 70, "Input",ExpressionUUID->"fabfef67-3f57-4d6a-a73f-c6896b0df2a9",
 CellID->1857136487],
Cell[45893, 1369, 20921, 349, 70, "Output",ExpressionUUID->"226b42f5-3067-407f-8334-587deab724e7",
 CellID->16746611]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[66863, 1724, 180, 3, 70, "Subsubsection",ExpressionUUID->"a6c61638-80d6-4206-96c0-5f3556a81b1f",
 CellID->911049051],
Cell[67046, 1729, 253, 4, 70, "CodeText",ExpressionUUID->"9d610a62-b6cc-4171-810f-1d3b95beff63",
 CellID->1776997447],
Cell[CellGroupData[{
Cell[67324, 1737, 1821, 46, 70, "Input",ExpressionUUID->"627f5b22-8c22-47ee-bb6c-0ca9860052dd",
 CellID->2079139826],
Cell[69148, 1785, 21336, 357, 70, "Output",ExpressionUUID->"6dc785cd-658c-401d-aa65-a2c2f78bb950",
 CellID->423599534]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[90533, 2148, 165, 3, 70, "Subsubsection",ExpressionUUID->"29c25296-e573-434e-8cc1-0fc8419f0e31",
 CellID->99784115],
Cell[90701, 2153, 229, 4, 70, "CodeText",ExpressionUUID->"9a53da17-c034-44f6-9ce6-b468ef6d1fc6",
 CellID->1640940869],
Cell[CellGroupData[{
Cell[90955, 2161, 1775, 46, 70, "Input",ExpressionUUID->"95f5d789-0141-4064-b7ae-429f8eeb55e9",
 CellID->833177420],
Cell[92733, 2209, 20888, 349, 70, "Output",ExpressionUUID->"7ab3530a-1a12-46ec-bb41-c63a8bf5f57f",
 CellID->191936224]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[113670, 2564, 148, 3, 70, "Subsubsection",ExpressionUUID->"8720050c-c29a-4007-a47e-f6c4ba51f184",
 CellID->1348474052],
Cell[113821, 2569, 233, 4, 70, "CodeText",ExpressionUUID->"4e48fa91-24f3-4dfc-ad4b-036cacaa0127",
 CellID->1474594561],
Cell[CellGroupData[{
Cell[114079, 2577, 1881, 47, 70, "Input",ExpressionUUID->"b61702ad-443a-4728-9e6e-9c6589924715",
 CellID->1191312764],
Cell[115963, 2626, 20313, 340, 70, "Output",ExpressionUUID->"119c5e63-8577-4646-9cd7-ef1c85a35f46",
 CellID->899127463]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[136325, 2972, 151, 3, 70, "Subsubsection",ExpressionUUID->"f4d42e51-0b55-43e8-bc2a-3a72e3aa0037",
 CellID->1346064202],
Cell[136479, 2977, 241, 5, 70, "CodeText",ExpressionUUID->"0ce79f55-74f7-4282-aecd-e6ba1e1a9d94",
 CellID->1548244283],
Cell[CellGroupData[{
Cell[136745, 2986, 1839, 47, 70, "Input",ExpressionUUID->"52346e38-ae78-4038-9433-1ec84c2cc19d",
 CellID->623514640],
Cell[138587, 3035, 22774, 381, 70, "Output",ExpressionUUID->"8ef2506c-fbe2-4e7c-a8d2-79d276161257",
 CellID->7406915]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[161434, 3424, 234, 5, 70, "Section",ExpressionUUID->"4abe3e1b-7dff-4190-987a-4f142ba61a06",
 CellTags->"SectionHeader",
 CellID->222151016],
Cell[CellGroupData[{
Cell[161693, 3433, 150, 3, 70, "Subsection",ExpressionUUID->"d39067ac-3534-4852-923e-9d0d59189e00",
 CellID->210375965],
Cell[161846, 3438, 833, 15, 70, "Text",ExpressionUUID->"ac06cbe4-a6f1-4259-a89a-723454034b90",
 CellTags->"ExampleTopicSentence",
 CellID->1365547426],
Cell[162682, 3455, 1114, 22, 70, "Text",ExpressionUUID->"315c9c17-934f-4818-a783-22baa8fc668a",
 CellID->699517644],
Cell[163799, 3479, 283, 5, 70, "CodeText",ExpressionUUID->"3deb8079-5b11-4c5c-ae31-492a167ed31a",
 CellID->117362065],
Cell[164085, 3486, 812, 21, 70, "Input",ExpressionUUID->"eb7367f3-d787-4a56-a77b-40374d3547b1",
 InitializationCell->True,
 CellID->653679068],
Cell[164900, 3509, 1056, 21, 70, "Text",ExpressionUUID->"38c20c95-aa9e-4c28-a3ba-b94e0ecfd098",
 CellID->1578720025],
Cell[165959, 3532, 514, 10, 70, "Text",ExpressionUUID->"5a7d6140-8205-485c-905d-26b71aa1d4be",
 CellID->1141224993],
Cell[166476, 3544, 459, 7, 70, "CodeText",ExpressionUUID->"0506de1b-7f84-4076-8e7f-0b6b5ad26c86",
 CellID->1967313225],
Cell[166938, 3553, 771, 19, 70, "Input",ExpressionUUID->"5f877609-a054-49d2-ae82-bccaaa6ac4d7",
 InitializationCell->True,
 CellID->1126668334],
Cell[167712, 3574, 558, 14, 70, "Text",ExpressionUUID->"dfcecfd3-6fc7-4a8c-bc7f-98f02ab795e8",
 CellID->1770083663],
Cell[168273, 3590, 496, 14, 70, "CodeText",ExpressionUUID->"ea41680a-2925-4357-b664-18aca6d39bea",
 CellID->977693467],
Cell[168772, 3606, 649, 16, 70, "Input",ExpressionUUID->"d66cdc08-5947-46b8-956d-9e7938d365fb",
 InitializationCell->True,
 CellID->1627956632],
Cell[169424, 3624, 512, 12, 70, "Text",ExpressionUUID->"a54995b9-db3d-4eee-9727-c7655d5c04a4",
 CellID->1782746882],
Cell[169939, 3638, 190, 4, 70, "Text",ExpressionUUID->"cfee7529-0c2c-4caa-be37-8d4b1ee2ecf5",
 CellID->2035944308],
Cell[170132, 3644, 296, 9, 70, "CodeText",ExpressionUUID->"2c05af51-e2c3-4025-a3ba-06d8c1eb4267",
 CellID->144452247],
Cell[CellGroupData[{
Cell[170453, 3657, 1021, 24, 70, "Input",ExpressionUUID->"fce59c97-6305-46ed-897b-fff6b3c56f4d",
 CellID->621164965],
Cell[171477, 3683, 379, 8, 70, "Output",ExpressionUUID->"fcfd7ac2-9f1b-4b55-a1a4-13f151dd7f62",
 CellID->120954351]
}, Open  ]],
Cell[171871, 3694, 253, 6, 70, "Text",ExpressionUUID->"b05949bd-9bc8-4762-8829-e493c939c570",
 CellID->669836055],
Cell[172127, 3702, 285, 9, 70, "CodeText",ExpressionUUID->"8ece01bf-0bc3-4e50-9819-54b967d54c58",
 CellID->1320437121],
Cell[CellGroupData[{
Cell[172437, 3715, 708, 19, 70, "Input",ExpressionUUID->"c235e4e9-be47-4642-8b4d-bb4a4823a247",
 CellID->447479652],
Cell[173148, 3736, 225, 5, 70, "Output",ExpressionUUID->"308fcca1-396e-4d7d-85cf-9e0ebe347dde",
 CellID->769327726]
}, Open  ]],
Cell[173388, 3744, 195, 4, 70, "Text",ExpressionUUID->"de96ecb6-faa6-4638-a6e2-2f277ad2873c",
 CellID->1074379684],
Cell[173586, 3750, 286, 9, 70, "CodeText",ExpressionUUID->"bb8502b9-a064-4bd2-99ae-4296efdeded0",
 CellID->1013348247],
Cell[CellGroupData[{
Cell[173897, 3763, 727, 19, 70, "Input",ExpressionUUID->"17d98a58-fb6e-4292-9765-acde66827c06",
 CellID->460870068],
Cell[174627, 3784, 220, 5, 70, "Output",ExpressionUUID->"e53bf098-edf8-4e4c-ac3c-45b87450d4f9",
 CellID->47818547]
}, Open  ]],
Cell[174862, 3792, 227, 4, 70, "Text",ExpressionUUID->"46863a01-d694-472c-97e1-ea96ac81b17a",
 CellID->1087979190],
Cell[175092, 3798, 290, 9, 70, "CodeText",ExpressionUUID->"a4b97b45-b521-4287-af80-f8324fa0fd93",
 CellID->1719519952],
Cell[CellGroupData[{
Cell[175407, 3811, 787, 20, 70, "Input",ExpressionUUID->"57821cd6-d5a4-4757-b951-f3f80d3b17de",
 CellID->1344091302],
Cell[176197, 3833, 225, 5, 70, "Output",ExpressionUUID->"95b92dba-5e94-4ff6-9b37-2840f8e17112",
 CellID->795018638]
}, Open  ]],
Cell[176437, 3841, 178, 3, 70, "Text",ExpressionUUID->"f3180529-9b28-4b91-a9c5-9b64c11f66b0",
 CellID->1599927964],
Cell[176618, 3846, 288, 9, 70, "CodeText",ExpressionUUID->"205dd2ac-3ad0-4939-8601-bcb2dfc8d20b",
 CellID->130563060],
Cell[CellGroupData[{
Cell[176931, 3859, 755, 19, 70, "Input",ExpressionUUID->"5c5fdb2b-3421-445e-a958-d3de42a31800",
 CellID->896973967],
Cell[177689, 3880, 224, 5, 70, "Output",ExpressionUUID->"57592967-bec5-44a5-9069-3dbd3f28a2d7",
 CellID->1911126572]
}, Open  ]],
Cell[177928, 3888, 229, 6, 70, "Text",ExpressionUUID->"c0fdffe5-aceb-41ca-accc-cc823317790a",
 CellID->68505036]
}, Open  ]],
Cell[CellGroupData[{
Cell[178194, 3899, 261, 5, 70, "Subsection",ExpressionUUID->"a096eaca-2dc8-482c-a7ac-7ad272724fd0",
 CellID->1647551711],
Cell[178458, 3906, 1217, 22, 70, "Text",ExpressionUUID->"9e50c4e7-c401-4d77-995c-826d8c52f2dd",
 CellID->1652991210],
Cell[179678, 3930, 417, 9, 70, "Text",ExpressionUUID->"a213d7fe-60c3-434b-a398-cae51406bede",
 CellID->753869129],
Cell[180098, 3941, 169, 3, 70, "Item",ExpressionUUID->"7f8f2007-7d02-4d9b-807d-0a208f42dea9",
 CellID->505115507],
Cell[180270, 3946, 207, 4, 70, "Item",ExpressionUUID->"1662cabb-142d-41fd-9f44-0bed9da7cf50",
 CellID->1136145475],
Cell[180480, 3952, 206, 4, 70, "Item",ExpressionUUID->"839996f0-cca5-4f8b-bd21-eb4ca79e28b9",
 CellID->1239904656],
Cell[180689, 3958, 208, 4, 70, "Item",ExpressionUUID->"aa343f9e-7fe8-4497-b3e7-4a6efb6c7e22",
 CellID->542173725],
Cell[180900, 3964, 212, 4, 70, "Item",ExpressionUUID->"17aad2ae-429c-4647-80fa-7f9961475432",
 CellID->1961056500],
Cell[181115, 3970, 379, 8, 70, "CodeText",ExpressionUUID->"c02a1609-6578-4b2e-923b-836bbc67be9d",
 CellID->1364976417],
Cell[CellGroupData[{
Cell[181519, 3982, 2805, 65, 70, "Input",ExpressionUUID->"d161661b-93ca-409c-834c-38a40cb53f4b",
 Evaluatable->False,
 CellID->1665618017],
Cell[184327, 4049, 8058, 226, 70, "Output",ExpressionUUID->"bd9029ae-4a93-45fb-a577-89d5ef422bba",
 CellID->1592673074]
}, Open  ]],
Cell[192400, 4278, 319, 8, 70, "CodeText",ExpressionUUID->"f6b0c7c4-71d7-49e9-a2fc-470262a2a433",
 CellID->1498634135],
Cell[CellGroupData[{
Cell[192744, 4290, 1682, 45, 70, "Input",ExpressionUUID->"076fccec-c285-49fa-bc86-ae081c291985",
 Evaluatable->False,
 CellID->2051805902],
Cell[194429, 4337, 151, 5, 70, "Output",ExpressionUUID->"8a9a91a4-a70c-4408-8bab-177d371fbbe7",
 CellID->1347393398]
}, Open  ]],
Cell[194595, 4345, 319, 8, 70, "CodeText",ExpressionUUID->"9dc28e85-5df3-4030-bd5b-9a2b35e02f62",
 CellID->1513501364],
Cell[CellGroupData[{
Cell[194939, 4357, 1690, 44, 70, "Input",ExpressionUUID->"86af38e2-a403-435a-8319-62ff11d5f7df",
 Evaluatable->False,
 CellID->473626033],
Cell[196632, 4403, 151, 5, 70, "Output",ExpressionUUID->"1a5f940b-c811-41c4-a4a4-9c29c6768cce",
 CellID->1118322767]
}, Open  ]],
Cell[196798, 4411, 367, 8, 70, "CodeText",ExpressionUUID->"096da677-052d-49dd-a44e-c86eb6017299",
 CellID->2028628882],
Cell[CellGroupData[{
Cell[197190, 4423, 1693, 47, 70, "Input",ExpressionUUID->"244eb9fe-6ef8-4e23-ab3a-45268a2f7aba",
 Evaluatable->False,
 CellID->873866425],
Cell[198886, 4472, 409, 9, 70, "Output",ExpressionUUID->"5d6e7f81-3256-4214-a8c4-753fdccf435b",
 CellID->473320734]
}, Open  ]],
Cell[199310, 4484, 424, 9, 70, "CodeText",ExpressionUUID->"8f295810-e6ec-43f3-9a7e-541b8d64ef4d",
 CellID->1595641802],
Cell[CellGroupData[{
Cell[199759, 4497, 1895, 51, 70, "Input",ExpressionUUID->"90213699-2388-49ae-b7c8-c46397d60590",
 Evaluatable->False,
 CellID->175982478],
Cell[201657, 4550, 150, 5, 70, "Output",ExpressionUUID->"3b8e2096-5e2c-459a-8d23-92f5c831758d",
 CellID->652525827]
}, Open  ]],
Cell[201822, 4558, 651, 11, 70, "Text",ExpressionUUID->"55e95965-d2a6-4581-a267-6bff397d5979",
 CellID->2095392690],
Cell[202476, 4571, 273, 6, 70, "CodeText",ExpressionUUID->"7a70464c-cccd-45f0-aa3a-82bbb1a738b8",
 CellID->131251209],
Cell[CellGroupData[{
Cell[202774, 4581, 5533, 175, 70, "Input",ExpressionUUID->"193065f4-32a0-42c6-9f9c-afbf637856d2",
 CellID->1030958849],
Cell[208310, 4758, 8159, 272, 70, "Output",ExpressionUUID->"b3e1b749-9ea0-4ad1-8a5e-8dcceeb703b4",
 CellID->801405857]
}, Open  ]],
Cell[216484, 5033, 315, 7, 70, "Text",ExpressionUUID->"d4313018-afac-4af7-9d28-ea804de09628",
 CellID->1666181133],
Cell[216802, 5042, 322, 5, 70, "CodeText",ExpressionUUID->"eeaa8b27-a60c-409e-bb36-71adc3f5751c",
 CellID->1891360494],
Cell[CellGroupData[{
Cell[217149, 5051, 1045, 28, 70, "Input",ExpressionUUID->"9f4db7f2-dfba-424e-afec-ba1699e67f78",
 CellID->1041970308],
Cell[218197, 5081, 79876, 1316, 70, "Output",ExpressionUUID->"9b2f07d0-6bbd-4167-98d1-919779973389",
 CellID->34019030]
}, Open  ]],
Cell[298088, 6400, 677, 13, 70, "Text",ExpressionUUID->"ee764480-e6a3-4421-9159-edcefbaffa14",
 CellID->1436400504]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[298814, 6419, 231, 5, 70, "Section",ExpressionUUID->"8ac2e221-5a11-49b6-938e-017bb0519220",
 CellTags->"SectionHeader",
 CellID->603657416],
Cell[CellGroupData[{
Cell[299070, 6428, 166, 3, 70, "Subsection",ExpressionUUID->"7b39aaea-27c0-4cb7-a7c3-b77063f87c7f",
 CellID->323857147],
Cell[299239, 6433, 936, 17, 70, "Text",ExpressionUUID->"050e2ce9-777d-4541-bb40-462af0ea5088",
 CellTags->"ExampleTopicSentence",
 CellID->957442284],
Cell[300178, 6452, 378, 8, 70, "Text",ExpressionUUID->"6eb5b07c-235d-4cdb-95d4-546a5c7e8fd3",
 CellID->343485900],
Cell[300559, 6462, 325, 5, 70, "CodeText",ExpressionUUID->"0f05941c-cc4d-4a0b-b4cd-e64347ba650c",
 CellID->294622437],
Cell[300887, 6469, 2114, 64, 70, "Input",ExpressionUUID->"11b61b35-d4a6-4e76-8773-63adebb4285f",
 InitializationCell->True,
 CellID->1055246995],
Cell[303004, 6535, 234, 6, 70, "Text",ExpressionUUID->"f1eeec68-5735-43f3-9869-eaca655caf4d",
 CellID->765534562],
Cell[303241, 6543, 300, 7, 70, "CodeText",ExpressionUUID->"c2894038-7332-4657-9f20-cb55d3d8a88d",
 CellID->1045903403],
Cell[CellGroupData[{
Cell[303566, 6554, 1575, 44, 70, "Input",ExpressionUUID->"545729b4-6768-4a75-b2d7-f7535528d8b1",
 CellID->1308575589],
Cell[305144, 6600, 31119, 518, 70, "Output",ExpressionUUID->"822048c1-b119-456b-be3b-6e63c60d0826",
 CellID->419631242],
Cell[336266, 7120, 21779, 364, 70, "Output",ExpressionUUID->"1de6019f-211b-4cf8-9efa-8e48d4991b18",
 CellID->130977509]
}, Open  ]],
Cell[358060, 7487, 867, 15, 70, "Text",ExpressionUUID->"4f0a631a-f68f-48ba-b5f8-f48914d1cec0",
 CellID->1537720558],
Cell[358930, 7504, 573, 10, 70, "Text",ExpressionUUID->"6b81f987-e50e-4730-abd5-a7777a7683f2",
 CellID->667159469],
Cell[359506, 7516, 285, 6, 70, "CodeText",ExpressionUUID->"c524d3ef-b377-4ef3-baf8-0d3d08221e3b",
 CellID->1419386531],
Cell[CellGroupData[{
Cell[359816, 7526, 1279, 35, 70, "Input",ExpressionUUID->"bd3d2755-0a3c-4287-b649-5a0b2b02386b",
 CellID->1736768479],
Cell[361098, 7563, 161, 4, 70, "Output",ExpressionUUID->"3ea3590e-0660-4419-9a50-107d03b28342",
 CellID->666773477]
}, Open  ]],
Cell[361274, 7570, 321, 7, 70, "Text",ExpressionUUID->"eee45e4c-b2a7-4323-a0ed-486783341445",
 CellID->766884297],
Cell[361598, 7579, 320, 8, 70, "CodeText",ExpressionUUID->"7c8c8ce6-1922-4e18-a766-294f50157c26",
 CellID->1377889846],
Cell[CellGroupData[{
Cell[361943, 7591, 4302, 120, 70, "Input",ExpressionUUID->"157e3286-d06a-46f8-99ba-d3d2949afcdd",
 CellID->1299638292],
Cell[366248, 7713, 159, 4, 70, "Output",ExpressionUUID->"d1385abb-1bff-4cd5-a5ae-ce3414447e11",
 CellID->791229377]
}, Open  ]],
Cell[366422, 7720, 255, 6, 70, "CodeText",ExpressionUUID->"6e1c7d1b-9482-41ec-821a-a4cfb05e166b",
 CellID->1916458390],
Cell[CellGroupData[{
Cell[366702, 7730, 3304, 95, 70, "Input",ExpressionUUID->"ee7fec72-0561-4a18-8eb5-524eed4e7fb4",
 CellID->912213857],
Cell[370009, 7827, 214, 5, 70, "Output",ExpressionUUID->"a4c61a95-2f05-4c75-b7c9-0026a6e5ad2f",
 CellID->669262540]
}, Open  ]],
Cell[370238, 7835, 259, 6, 70, "CodeText",ExpressionUUID->"8b9d0437-8d0a-42f8-89b2-9cfa703828ee",
 CellID->1467430808],
Cell[CellGroupData[{
Cell[370522, 7845, 3391, 99, 70, "Input",ExpressionUUID->"303618db-97ca-4d09-8671-f642eb9c8bb7",
 CellID->563548576],
Cell[373916, 7946, 139, 4, 70, "Output",ExpressionUUID->"16c9975c-2af1-4172-8032-dc710805ceda",
 CellID->528484149]
}, Open  ]],
Cell[374070, 7953, 264, 6, 70, "CodeText",ExpressionUUID->"c9eee0c8-fbfc-420d-b995-d41ca9e35e4f",
 CellID->2055830373],
Cell[CellGroupData[{
Cell[374359, 7963, 3609, 105, 70, "Input",ExpressionUUID->"ffea3b36-d4f3-4fe9-ac1e-a099b984b5c6",
 CellID->289750401],
Cell[377971, 8070, 159, 4, 70, "Output",ExpressionUUID->"3f3b2633-76ec-4b13-a83d-51b3c5d906c7",
 CellID->1748512625]
}, Open  ]],
Cell[378145, 8077, 613, 11, 70, "Text",ExpressionUUID->"f84d6f4c-77dd-4048-9f69-ab4889c4aee3",
 CellID->847718966],
Cell[378761, 8090, 314, 8, 70, "CodeText",ExpressionUUID->"7333d476-ee7a-4861-a891-5790a5127adf",
 CellID->827517931],
Cell[CellGroupData[{
Cell[379100, 8102, 926, 23, 70, "Input",ExpressionUUID->"beb0a396-7f71-4d6e-9d40-b54ccbce1eb3",
 CellID->755160562],
Cell[380029, 8127, 21588, 491, 70, "Output",ExpressionUUID->"aaa31636-bdb9-44c1-853d-970a0300c003",
 CellID->83718152]
}, Open  ]],
Cell[401632, 8621, 690, 12, 70, "Text",ExpressionUUID->"e99d52c6-a8bf-47d2-a999-d85cbf833531",
 CellID->1873271546]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[402371, 8639, 214, 5, 70, "Section",ExpressionUUID->"ad5ef8cb-5ec7-4935-ac91-c2260df04c30",
 CellTags->"SectionHeader",
 CellID->1059608984],
Cell[402588, 8646, 1512, 26, 70, "Text",ExpressionUUID->"49d09417-9aa7-43ed-ad21-7677a2a149de",
 CellTags->"ExampleTopicSentence",
 CellID->1913793164],
Cell[CellGroupData[{
Cell[404125, 8676, 142, 3, 70, "Subsubsection",ExpressionUUID->"8f031fdb-609d-4b9c-8179-08b057b44428",
 CellID->678530118],
Cell[404270, 8681, 998, 20, 70, "Text",ExpressionUUID->"b117f598-82fc-450c-85cf-7c9efad3ae13",
 CellID->1478178856]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
